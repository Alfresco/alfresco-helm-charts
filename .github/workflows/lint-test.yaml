name: Lint and Test Charts

on:
  pull_request:
    branches:
      - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      INSTALL_NAMESPACE: alfresco
      # See latest https://github.com/kubernetes-sigs/kind/releases for the latest available builds
      KIND_NODE_IMAGE: kindest/node:v1.24.7@sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315
      TEST_ALL_CHARTS: ${{ contains(github.event.pull_request.labels.*.name, 'ci-test-all') && 'true' || 'false' }}
      TEST_ALL_CHARTS_ARG: ${{ contains(github.event.pull_request.labels.*.name, 'ci-test-all') && '--all' || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up Unit Test plugin for Helm
        env:
          HELM_UNITTEST_VERSION: v1.0.16
        run: |
          helm plugin install https://github.com/vbehar/helm3-unittest --version $HELM_UNITTEST_VERSION

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0
        with:
          version: v3.8.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct-lint.yaml)
          if [[ -n "$changed" || "$TEST_ALL_CHARTS" == "true" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct-lint.yaml $TEST_ALL_CHARTS_ARG

      - name: Create kind cluster
        uses: helm/kind-action@v1.5.0
        with:
          node_image: ${{ env.KIND_NODE_IMAGE }}
        if: steps.list-changed.outputs.changed == 'true'

      - name: Login to Quay.io
        uses: docker/login-action@v2
        if: steps.list-changed.outputs.changed == 'true'
        with:
          registry: quay.io
          username: ${{ secrets.quay_username }}
          password: ${{ secrets.quay_password }}

      - name: Prepare namespace for install
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create ns "$INSTALL_NAMESPACE"
          kubectl create secret generic quay-registry-secret --from-file=.dockerconfigjson="${HOME}"/.docker/config.json --type=kubernetes.io/dockerconfigjson -n "$INSTALL_NAMESPACE"
          kubectl create secret generic broker-secret --from-literal=BROKER_URL="failover:(nio://activemq:61616)?timeout=3000" --from-literal=BROKER_USERNAME=admin --from-literal=BROKER_PASSWORD=admin -n "$INSTALL_NAMESPACE"

      - name: Run chart-testing (install)
        run: |
          ct install --config ct-install.yaml \
            --namespace "$INSTALL_NAMESPACE" $TEST_ALL_CHARTS_ARG

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure()
        with:
          # provide access to SSH user that triggered the build
          limit-access-to-actor: true
