{"0": {
    "doc": "alfresco-connector-msteams",
    "title": "alfresco-connector-msteams",
    "content": ". A Helm chart for deploying Alfresco connector msteams service . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-msteams/README.html",
    
    "relUrl": "/charts/alfresco-connector-msteams/README.html"
  },"1": {
    "doc": "alfresco-connector-msteams",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-msteams/README.html#requirements",
    
    "relUrl": "/charts/alfresco-connector-msteams/README.html#requirements"
  },"2": {
    "doc": "alfresco-connector-msteams",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | object | {\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-msteams.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-msteams.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}} | Affinity settings for pod assignment (can contain templates if passed as string) | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-msteams.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-msteams.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods in different nodes | . | alfresco.baseUrl | string | \"change_me_alf_base_url\" |   | . | alfresco.digitalWorkspace.contextPath | string | \"/workspace/\" |   | . | environment | string | nil |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.internalPort | int | 3978 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-ms-teams-service\" |   | . | image.tag | string | \"2.0.6\" |   | . | ingress.className | string | \"nginx\" |   | . | ingress.extraAnnotations | object | {} |   | . | ingress.hosts[0].paths[0].path | string | \"/ms-teams-service\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.failureThreshold | int | 1 |   | . | livenessProbe.initialDelaySeconds | int | 10 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.tcpSocket.port | string | \"service-port\" |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | microsoft.app.existingSecret.keys.id | string | \"MICROSOFT_APP_ID\" |   | . | microsoft.app.existingSecret.keys.password | string | \"MICROSOFT_APP_PASSWORD\" |   | . | microsoft.app.existingSecret.name | string | nil |   | . | microsoft.app.id | string | nil |   | . | microsoft.app.oauth.connectionName | string | \"alfresco\" |   | . | microsoft.app.password | string | nil |   | . | nodeSelector | object | {} |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33041 |   | . | readinessProbe.initialDelaySeconds | int | 20 |   | . | readinessProbe.periodSeconds | int | 60 |   | . | readinessProbe.tcpSocket.port | string | \"service-port\" |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | replicaCount | int | 2 |   | . | repository.existingConfigMap.keys.url | string | \"ALFRESCO_BASE_URL\" | Key within the configmap holding the full url to connect to the alfresco repository | . | repository.existingConfigMap.name | string | nil | Alternatively, provide repository connection details via an existing configmap | . | repository.url | string | nil | URL of the Alfresco repository | . | resources.limits.cpu | string | \"1\" |   | . | resources.limits.memory | string | \"1000Mi\" |   | . | resources.requests.cpu | string | \"0.5\" |   | . | resources.requests.memory | string | \"1000Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"ms-teams-service\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"msteams-sa\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | strategy.rollingUpdate.maxSurge | int | 1 |   | . | strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | teams.chat.filenameEnabled | bool | true |   | . | teams.chat.imageEnabled | bool | true |   | . | teams.chat.metadataEnabled | bool | true |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-msteams/README.html#values",
    
    "relUrl": "/charts/alfresco-connector-msteams/README.html#values"
  },"3": {
    "doc": "alfresco-audit-storage",
    "title": "alfresco-audit-storage",
    "content": ". A Helm chart for Kubernetes to deploy Alfresco Audit Storage . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-audit-storage/README.html",
    
    "relUrl": "/charts/alfresco-audit-storage/README.html"
  },"4": {
    "doc": "alfresco-audit-storage",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | elasticsearch | 21.4.1 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-audit-storage/README.html#requirements",
    
    "relUrl": "/charts/alfresco-audit-storage/README.html#requirements"
  },"5": {
    "doc": "alfresco-audit-storage",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | object | {} |   | . | environment.AUDIT_EVENTINGESTION_DLQ_CONSUMEPERIOD | int | 60000 |   | . | environment.AUDIT_EVENTINGESTION_DLQ_CONSUMPTIONCOUNT | int | 1000 |   | . | environment.AUDIT_EVENTINGESTION_URI | string | \"activemq:topic:alfresco.repo.event2\" |   | . | environment.SPRING_PROFILES_ACTIVE | string | \"durable-subscriptions\" |   | . | fullnameOverride | string | \"\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-audit-storage\" |   | . | image.tag | string | \"1.1.0\" |   | . | imagePullSecrets | list | [] |   | . | index.existingConfigMap.keys.url | string | \"SEARCH_URL\" | Key within the configmap holding the URL of the elasticsearch service | . | index.existingConfigMap.name | string | nil | Alternatively, provide elasticsearch service connection details via an existing configmap | . | index.existingSecret.keys.password | string | \"SEARCH_PASSWORD\" | Key within the secret that holds the elasticsearch password | . | index.existingSecret.keys.username | string | \"SEARCH_USERNAME\" | Key within the secret that holds the elasticsearch username | . | index.existingSecret.name | string | nil | Alternatively, provide elasticsearch credentials via an existing secret | . | index.password | string | nil | The password required to access the elasticsearch service, if any | . | index.url | string | nil | The URL where the elasticsearch service is available | . | index.username | string | nil | The username required to access the elasticsearch service, if any | . | livenessProbe.httpGet.path | string | \"/actuator/health/liveness\" |   | . | livenessProbe.httpGet.port | string | \"http\" |   | . | livenessProbe.initialDelaySeconds | int | 15 |   | . | livenessProbe.periodSeconds | int | 60 |   | . | messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" | Key within the configmap holding the URL of the message broker | . | messageBroker.existingConfigMap.name | string | nil | Alternatively, provide message broker connection details via an existing configmap | . | messageBroker.existingSecret | object | {\"keys\":{\"password\":\"BROKER_PASSWORD\",\"username\":\"BROKER_USERNAME\"},\"name\":null} | Provide connection details alternatively via an existing secret that contains BROKER_URL, BROKER_USERNAME and BROKER_PASSWORD keys | . | messageBroker.password | string | nil | Broker password | . | messageBroker.url | string | nil | Broker URL formatted as per: https://activemq.apache.org/failover-transport-reference | . | messageBroker.username | string | nil | Broker username | . | nameOverride | string | \"\" |   | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.fsGroup | int | 1000 |   | . | podSecurityContext.runAsGroup | int | 1000 |   | . | podSecurityContext.runAsUser | int | 33000 |   | . | readinessProbe.httpGet.path | string | \"/actuator/health/readiness\" |   | . | readinessProbe.httpGet.port | string | \"http\" |   | . | readinessProbe.initialDelaySeconds | int | 15 |   | . | readinessProbe.periodSeconds | int | 60 |   | . | replicaCount | int | 1 |   | . | resources.limits.cpu | string | \"1\" |   | . | resources.limits.memory | string | \"512Mi\" |   | . | resources.requests.cpu | string | \"0.5\" |   | . | resources.requests.memory | string | \"256Mi\" |   | . | securityContext | object | {} |   | . | service.port | int | 8081 |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} |   | . | serviceAccount.automount | bool | true |   | . | serviceAccount.create | bool | true |   | . | serviceAccount.name | string | \"\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . | volumeMounts | list | [] |   | . | volumes | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-audit-storage/README.html#values",
    
    "relUrl": "/charts/alfresco-audit-storage/README.html#values"
  },"6": {
    "doc": "alfresco-activiti",
    "title": "alfresco-activiti",
    "content": ". A Helm chart for Alfresco Activiti . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/README.html",
    
    "relUrl": "/charts/alfresco-activiti/README.html"
  },"7": {
    "doc": "alfresco-activiti",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | postgresql | 12.8.5 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/README.html#requirements",
    
    "relUrl": "/charts/alfresco-activiti/README.html#requirements"
  },"8": {
    "doc": "alfresco-activiti",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-activiti.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-activiti.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods in different nodes | . | database.driver | string | nil | JDBC driver Class | . | database.existingConfigMap.keys.driver | string | \"DATABASE_DRIVER\" | configmap key where to find the JDBC driver Class for aps app | . | database.existingConfigMap.keys.url | string | \"DATABASE_URL\" | configmap key where to find the URL of the database for aps app | . | database.existingConfigMap.name | string | nil |   | . | database.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password for aps app | . | database.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username for aps app | . | database.existingSecret.name | string | nil | Name of a pre-existing secret containing database credentials for aps app | . | database.password | string | nil | JDBC password to use to connect to the DB for aps app | . | database.url | string | nil | JDBC url to connect to the external DB for aps app | . | database.username | string | nil | JDBC username to use to connect to the DB for aps app | . | envFromExistingConfigMap | string | nil | Name of a pre-existing configmap to load env vars from (overrides .environment values) | . | environment.ACTIVITI_CORS_ALLOWED_HEADERS | string | \"Authorization,Content-Type,Cache-Control,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token\" | Cross Origin Resource Sharing configuration allowed http headers | . | environment.ACTIVITI_CORS_ALLOWED_METHODS | string | \"GET,POST,HEAD,OPTIONS,PUT,DELETE\" | Cross Origin Resource Sharing configuration allowed http methods | . | environment.ACTIVITI_CORS_ALLOWED_ORIGIN_PATTERNS | string | \"*\" | Cross Origin Resource Sharing configuration allowed origins (list of glob-like patterns) | . | environment.ACTIVITI_CORS_ENABLED | string | \"true\" | Cross Origin Resource Sharing configuration toggle | . | environment.ACTIVITI_CSRF_DISABLED | string | \"true\" | Cross Site Resource Forgery configuration toggle | . | environment.IDENTITY_CREDENTIALS_SECRET | string | \"\" | Alfresco Identity Service application secret | . | environment.IDENTITY_SERVICE_ALWAYS_REFRESH_TOKEN | string | \"true\" | Alfresco Identity Service refresh service token | . | environment.IDENTITY_SERVICE_AUTH | string | \"http://localhost:8080/auth\" | Alfresco Identity Service address | . | environment.IDENTITY_SERVICE_AUTODETECT_BEARER_ONLY | string | \"true\" | Alfresco Identity Service Bearer only toggle | . | environment.IDENTITY_SERVICE_ENABLED | string | \"false\" | Alfresco Identity Service configuration toggle | . | environment.IDENTITY_SERVICE_ENABLE_BASIC_AUTH | string | \"true\" | Alfresco Identity Service allow basic authentication (should only be used over SSL) | . | environment.IDENTITY_SERVICE_PRINCIPAL_ATTRIBUTE | string | \"email\" | Alfresco Identity Service Attribute to map to user login | . | environment.IDENTITY_SERVICE_PUBLIC_CLIENT | string | \"true\" | Alfresco Identity Service public client toggle | . | environment.IDENTITY_SERVICE_REALM | string | \"alfresco\" | Alfresco Identity Service Realm | . | environment.IDENTITY_SERVICE_RESOURCE | string | \"alfresco\" | Alfresco Identity Service resource name to use | . | environment.IDENTITY_SERVICE_SSL_REQUIRED | string | \"none\" | Alfresco Identity Service force using SSL | . | environment.IDENTITY_SERVICE_TOKEN_STORE | string | \"session\" | Alfresco Identity Service token storage configuration | . | environment.IDENTITY_SERVICE_USE_BROWSER_BASED_LOGOUT | string | \"true\" | Alfresco Identity Service browser initiated logout toggle | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.internalPort | int | 8080 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-process-services\" |   | . | image.tag | string | \"25.1.1\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/affinity” | string | \"cookie\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-body-size” | string | \"5g\" |   | . | ingress.className | string | \"nginx\" | supported ingress class | . | ingress.enabled | bool | true | Toggle ingress for APS application | . | ingress.hosts[0].paths[0].path | string | \"/activiti-app\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | license.secretName | string | nil |   | . | livenessProbe.failureThreshold | int | 5 |   | . | livenessProbe.initialDelaySeconds | int | 25 |   | . | livenessProbe.path | string | \"/activiti-app/actuator/health/liveness\" | For APS prior to 24.3.0, path must be set to /activiti-app/app/rest/locale | . | livenessProbe.periodSeconds | int | 10 |   | . | livenessProbe.timeoutSeconds | int | 5 |   | . | nodeSelector | object | {} |   | . | persistence.accessModes[0] | string | \"ReadWriteOnce\" |   | . | persistence.baseSize | string | \"20Gi\" | Initial default size of dynamically provisioned storage | . | persistence.data | object | {\"mountPath\":\"/usr/local/data\",\"subPath\":\"alfresco-process-services/process-data\"} | Where to mount data into the container | . | persistence.enabled | bool | false | Persist Alfresco Process data | . | persistence.existingClaim | string | nil | Define if you want to reuse an already existing PVC | . | persistence.storageClass | string | nil | Define if you already have a custom storage class defined for dynamically provisioned storage | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.fsGroup | int | 33007 |   | . | podSecurityContext.runAsGroup | int | 33007 |   | . | podSecurityContext.runAsUser | int | 33007 |   | . | readinessProbe.failureThreshold | int | 5 |   | . | readinessProbe.initialDelaySeconds | int | 25 |   | . | readinessProbe.path | string | \"/activiti-app/actuator/health/readiness\" | For APS prior to 24.3.0, path must be set to /activiti-app/app/rest/locale | . | readinessProbe.periodSeconds | int | 10 |   | . | readinessProbe.timeoutSeconds | int | 5 |   | . | replicaCount | int | 1 |   | . | resources.limits.cpu | string | \"4000m\" |   | . | resources.limits.memory | string | \"8Gi\" |   | . | resources.requests.cpu | string | \"500m\" |   | . | resources.requests.memory | string | \"1Gi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"aps\" |   | . | service.type | string | \"ClusterIP\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . | volumeMounts | list | [] |   | . | volumes | list | [] |   | . | workaround.ACTIVITI-5113 | bool | false |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/README.html#values",
    
    "relUrl": "/charts/alfresco-activiti/README.html#values"
  },"9": {
    "doc": "alfresco-search-enterprise",
    "title": "alfresco-search-enterprise",
    "content": ". A Helm chart for deploying Alfresco Elasticsearch connector . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/README.html",
    
    "relUrl": "/charts/alfresco-search-enterprise/README.html"
  },"10": {
    "doc": "alfresco-search-enterprise",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | elasticsearch | 21.4.1 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/README.html#requirements",
    
    "relUrl": "/charts/alfresco-search-enterprise/README.html#requirements"
  },"11": {
    "doc": "alfresco-search-enterprise",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | ats.existingConfigMap.keys.sfs_url | string | \"SFS_URL\" | Key within the configmap holding the URL of the alfresco shared filestore | . | ats.existingConfigMap.keys.transform_url | string | \"ATS_URL\" | Key within the configmap holding the URL of the alfresco transform | . | ats.existingConfigMap.name | string | nil | Alternatively, provide ATS details via an existing configmap | . | ats.sfs_url | string | nil | URL of the alfresco shared filestore | . | ats.transform_url | string | nil | URL of the alfresco transform (trouter or tengine-aio) | . | contentMediaTypeCache.enabled | bool | true |   | . | contentMediaTypeCache.refreshTime | string | \"0 0 * * * *\" |   | . | fullnameOverride | string | \"\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | imagePullSecrets | list | [] |   | . | indexName | string | \"alfresco\" | Name of the existing search index, usually created by repo | . | liveIndexing.content.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.content.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule the content pod on a different zone | . | liveIndexing.content.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.content.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule the content pod on a different node | . | liveIndexing.content.environment | object | {} | Set environment variables for the content component | . | liveIndexing.content.image.pullPolicy | string | \"IfNotPresent\" |   | . | liveIndexing.content.image.repository | string | \"quay.io/alfresco/alfresco-elasticsearch-live-indexing-content\" |   | . | liveIndexing.content.image.tag | string | \"5.0.0\" |   | . | liveIndexing.content.livenessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.content.livenessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.content.livenessProbe.initialDelaySeconds | int | 300 |   | . | liveIndexing.content.livenessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.content.readinessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.content.readinessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.content.readinessProbe.initialDelaySeconds | int | 60 |   | . | liveIndexing.content.readinessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.content.replicaCount | int | 1 |   | . | liveIndexing.environment | object | {} | Set environment variables for all the live indexing components (mediation, content, metadata, path) | . | liveIndexing.mediation.environment | object | {} | Set environment variables for the mediation component | . | liveIndexing.mediation.image.pullPolicy | string | \"IfNotPresent\" |   | . | liveIndexing.mediation.image.repository | string | \"quay.io/alfresco/alfresco-elasticsearch-live-indexing-mediation\" |   | . | liveIndexing.mediation.image.tag | string | \"5.0.0\" |   | . | liveIndexing.metadata.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.metadata.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule the content pod on a different zone | . | liveIndexing.metadata.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.metadata.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule the content pod on a different node | . | liveIndexing.metadata.environment | object | {} | Set environment variables for the metadata component | . | liveIndexing.metadata.image.pullPolicy | string | \"IfNotPresent\" |   | . | liveIndexing.metadata.image.repository | string | \"quay.io/alfresco/alfresco-elasticsearch-live-indexing-metadata\" |   | . | liveIndexing.metadata.image.tag | string | \"5.0.0\" |   | . | liveIndexing.metadata.livenessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.metadata.livenessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.metadata.livenessProbe.initialDelaySeconds | int | 300 |   | . | liveIndexing.metadata.livenessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.metadata.readinessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.metadata.readinessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.metadata.readinessProbe.initialDelaySeconds | int | 60 |   | . | liveIndexing.metadata.readinessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.metadata.replicaCount | int | 1 |   | . | liveIndexing.path.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.path.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule the content pod on a different zone | . | liveIndexing.path.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-search-enterprise.path.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule the content pod on a different node | . | liveIndexing.path.environment | object | {} | Set environment variables for the path component | . | liveIndexing.path.image.pullPolicy | string | \"IfNotPresent\" |   | . | liveIndexing.path.image.repository | string | \"quay.io/alfresco/alfresco-elasticsearch-live-indexing-path\" |   | . | liveIndexing.path.image.tag | string | \"5.0.0\" |   | . | liveIndexing.path.livenessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.path.livenessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.path.livenessProbe.initialDelaySeconds | int | 300 |   | . | liveIndexing.path.livenessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.path.readinessProbe.httpGet.path | string | \"/actuator/health\" |   | . | liveIndexing.path.readinessProbe.httpGet.port | string | \"http\" |   | . | liveIndexing.path.readinessProbe.initialDelaySeconds | int | 60 |   | . | liveIndexing.path.readinessProbe.timeoutSeconds | int | 60 |   | . | liveIndexing.path.replicaCount | int | 1 |   | . | messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" | Key within the configmap holding the URL of the message broker | . | messageBroker.existingConfigMap.name | string | nil | Alternatively, provide message broker connection details via an existing configmap | . | messageBroker.existingSecret | object | {\"keys\":{\"password\":\"BROKER_PASSWORD\",\"username\":\"BROKER_USERNAME\"},\"name\":null} | Provide connection details alternatively via an existing secret that contains BROKER_URL, BROKER_USERNAME and BROKER_PASSWORD keys | . | messageBroker.password | string | nil | Broker password | . | messageBroker.url | string | nil | Broker URL formatted as per: https://activemq.apache.org/failover-transport-reference | . | messageBroker.username | string | nil | Broker username | . | nameOverride | string | \"\" |   | . | nodeSelector | object | {} |   | . | pathIndexingComponent.enabled | bool | true |   | . | podAnnotations | object | {} |   | . | podSecurityContext | object | {} |   | . | reindexing.db.existingConfigMap.keys.url | string | \"DATABASE_URL\" | Key within the configmap holding the full JDBC url to connect to database service | . | reindexing.db.existingConfigMap.name | string | nil | Alternatively, provide database connection details via an existing configmap | . | reindexing.db.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password | . | reindexing.db.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username | . | reindexing.db.existingSecret.name | string | nil | Alternatively, provide database credentials via an existing secret | . | reindexing.db.password | string | nil | The password required to access the service | . | reindexing.db.url | string | nil | Provide the full JDBC url to connect to database service e.g.: jdbc:postgresql://hostname:5432/database | . | reindexing.db.username | string | nil | The username required to access the service | . | reindexing.enabled | bool | true | Create the one-shot job to trigger the reindexing of repo contents | . | reindexing.environment | object | {} |   | . | reindexing.hookExecution | string | \"post-install\" | When to execute the reindexing job (e.g. post-install or post-upgrade or set to false to apply as a standard resource) | . | reindexing.image.pullPolicy | string | \"IfNotPresent\" |   | . | reindexing.image.repository | string | \"quay.io/alfresco/alfresco-elasticsearch-reindexing\" |   | . | reindexing.image.tag | string | \"5.0.0\" |   | . | reindexing.initcontainers.waitForRepository.image.pullPolicy | string | \"IfNotPresent\" |   | . | reindexing.initcontainers.waitForRepository.image.repository | string | \"curlimages/curl\" |   | . | reindexing.initcontainers.waitForRepository.image.tag | string | \"8.11.0\" |   | . | reindexing.initcontainers.waitForRepository.resources.limits.cpu | string | \"250m\" |   | . | reindexing.initcontainers.waitForRepository.resources.limits.memory | string | \"20Mi\" |   | . | reindexing.pathIndexingEnabled | bool | true |   | . | reindexing.repository.existingConfigMap.keys.url | string | \"REPOSITORY_URL\" | Key within the configmap holding the full url to connect to the alfresco repository | . | reindexing.repository.existingConfigMap.name | string | nil | Alternatively, provide repository connection details via an existing configmap | . | reindexing.repository.url | string | nil | URL of the Alfresco repository | . | reindexing.resources.limits.cpu | string | \"2\" |   | . | reindexing.resources.limits.memory | string | \"512Mi\" |   | . | reindexing.resources.requests.cpu | string | \"0.5\" |   | . | reindexing.resources.requests.memory | string | \"128Mi\" |   | . | reindexing.ttlSecondsAfterFinished | int | 3600 | Time to live for the job after it has finished to run | . | resources.limits.cpu | string | \"2\" |   | . | resources.limits.memory | string | \"2048Mi\" |   | . | resources.requests.cpu | string | \"0.5\" |   | . | resources.requests.memory | string | \"256Mi\" |   | . | search.existingConfigMap.keys.url | string | \"SEARCH_URL\" | Key within the configmap holding the URL of the search/indexing service | . | search.existingConfigMap.name | string | nil | Alternatively, provide search/indexing service connection details via an existing configmap | . | search.existingSecret.keys.password | string | \"SEARCH_PASSWORD\" | Key within the secret that holds the search/indexing password | . | search.existingSecret.keys.username | string | \"SEARCH_USERNAME\" | Key within the secret that holds the search/indexing username | . | search.existingSecret.name | string | nil | Alternatively, provide search/indexing credentials via an existing secret | . | search.password | string | nil | The password required to access the search/indexing service, if any | . | search.url | string | nil | The URL where the search/indexing service is available | . | search.username | string | nil | The username required to access the search/indexing service, if any | . | securityContext | object | {} |   | . | serviceAccount.annotations | object | {} |   | . | serviceAccount.create | bool | true |   | . | serviceAccount.name | string | \"alfresco-search-enterprise-sa\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/README.html#values",
    
    "relUrl": "/charts/alfresco-search-enterprise/README.html#values"
  },"12": {
    "doc": "alfresco-ai-transformer",
    "title": "alfresco-ai-transformer",
    "content": ". A Helm chart for deploying Alfresco ai transformer service . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-ai-transformer/README.html",
    
    "relUrl": "/charts/alfresco-ai-transformer/README.html"
  },"13": {
    "doc": "alfresco-ai-transformer",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-ai-transformer/README.html#requirements",
    
    "relUrl": "/charts/alfresco-ai-transformer/README.html#requirements"
  },"14": {
    "doc": "alfresco-ai-transformer",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-ai-transformer.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-ai-transformer.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods in different nodes | . | args | list | [] |   | . | aws.accessKeyId | string | nil | AWS credentials are required as documented at https://docs.alfresco.com/intelligence-services/latest/config/#default-configuration | . | aws.comprehendRoleARN | string | nil |   | . | aws.existingConfigMap.keys.comprehendRoleARN | string | \"AWS_COMPREHEND_ROLE_ARN\" |   | . | aws.existingConfigMap.keys.region | string | \"AWS_REGION\" |   | . | aws.existingConfigMap.keys.s3Bucket | string | \"AWS_S3_BUCKET\" |   | . | aws.existingConfigMap.name | string | nil |   | . | aws.existingSecret.keys.accessKeyId | string | \"AWS_ACCESS_KEY_ID\" |   | . | aws.existingSecret.keys.secretAccessKey | string | \"AWS_SECRET_ACCESS_KEY\" |   | . | aws.existingSecret.name | string | nil |   | . | aws.region | string | nil |   | . | aws.s3Bucket | string | nil |   | . | aws.secretAccessKey | string | nil |   | . | command | list | [] |   | . | environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | extraInitContainers | list | [] |   | . | extraVolumeMounts | list | [] |   | . | extraVolumes | list | [] |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.internalPort | int | 8090 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-ai-docker-engine\" |   | . | image.tag | string | \"3.1.9\" |   | . | livenessProbe.failureThreshold | int | 1 |   | . | livenessProbe.httpGet.path | string | \"/live\" |   | . | livenessProbe.httpGet.port | string | \"service-port\" |   | . | livenessProbe.initialDelaySeconds | int | 10 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | messageBroker.existingConfigMap | object | {\"keys\":{\"url\":\"BROKER_URL\"},\"name\":null} | Alternatively, provide credentials via an existing secret and set the keys as they are given | . | messageBroker.existingSecret.keys.password | string | \"BROKER_PASSWORD\" |   | . | messageBroker.existingSecret.keys.username | string | \"BROKER_USERNAME\" |   | . | messageBroker.existingSecret.name | string | nil |   | . | messageBroker.password | string | nil |   | . | messageBroker.url | string | nil |   | . | messageBroker.user | string | nil |   | . | nodeSelector | object | {} |   | . | podSecurityContext.runAsUser | int | 33015 |   | . | readinessProbe.failureThreshold | int | 3 |   | . | readinessProbe.httpGet.path | string | \"/ready\" |   | . | readinessProbe.httpGet.port | string | \"service-port\" |   | . | readinessProbe.initialDelaySeconds | int | 20 |   | . | readinessProbe.periodSeconds | int | 60 |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | replicaCount | int | 2 |   | . | resources.limits.cpu | string | \"2\" |   | . | resources.limits.memory | string | \"1000Mi\" |   | . | resources.requests.cpu | string | \"0.25\" |   | . | resources.requests.memory | string | \"1000Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"ai-transformer\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"ai-transformer-sa\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | sfs.existingConfigMap.keys.url | string | \"FILE_STORE_URL\" |   | . | sfs.existingConfigMap.name | string | nil |   | . | sfs.url | string | nil | Alfresco Transformation filestore (e.g. http://acs-alfresco-transform-service) | . | strategy.rollingUpdate.maxSurge | int | 1 |   | . | strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . | transformerLiveness.livenessPercent | int | 400 |   | . | transformerLiveness.livenessTransformPeriodSeconds | int | 600 |   | . | transformerLiveness.maxTransformSeconds | int | 1800 |   | . | transformerLiveness.maxTransforms | int | 10000 |   | . | trouter.pipelines | list | See | List of transformer pipelines the ATS router can advertise when using AI To get more details abous pipeline configuration check https://docs.alfresco.com/transform-service/latest/config/#transform-pipelines https://github.com/Alfresco/alfresco-ai-renditions/blob/master/ai-renditions/docker-compose/ai-pipeline-routes.json | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-ai-transformer/README.html#values",
    
    "relUrl": "/charts/alfresco-ai-transformer/README.html#values"
  },"15": {
    "doc": "alfresco-transform-service",
    "title": "alfresco-transform-service",
    "content": ". A Helm chart for deploying Alfresco Transform Services . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/README.html",
    
    "relUrl": "/charts/alfresco-transform-service/README.html"
  },"16": {
    "doc": "alfresco-transform-service",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/README.html#requirements",
    
    "relUrl": "/charts/alfresco-transform-service/README.html#requirements"
  },"17": {
    "doc": "alfresco-transform-service",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | filestore.affinity | object | {\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.filestore.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.filestore.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}} | Pod affinity, passed thru tpl function | . | filestore.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.filestore.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | filestore.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.filestore.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | filestore.enabled | bool | true |   | . | filestore.environment.”scheduler.cleanup.interval” | string | \"86400000\" |   | . | filestore.environment.”scheduler.content.age.millis” | string | \"86400000\" |   | . | filestore.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | filestore.image.internalPort | int | 8099 |   | . | filestore.image.pullPolicy | string | \"IfNotPresent\" |   | . | filestore.image.repository | string | \"quay.io/alfresco/alfresco-shared-file-store\" |   | . | filestore.image.tag | string | \"4.1.7\" |   | . | filestore.initContainer.image.pullPolicy | string | \"IfNotPresent\" |   | . | filestore.initContainer.image.repository | string | \"busybox\" |   | . | filestore.initContainer.image.tag | string | \"1.37\" |   | . | filestore.initContainer.resources.limits.cpu | string | \"0.50\" |   | . | filestore.initContainer.resources.limits.memory | string | \"20Mi\" |   | . | filestore.livenessProbe.initialDelaySeconds | int | 10 |   | . | filestore.livenessProbe.path | string | \"/live\" |   | . | filestore.livenessProbe.periodSeconds | int | 20 |   | . | filestore.livenessProbe.timeoutSeconds | int | 10 |   | . | filestore.nodeSelector | object | {} |   | . | filestore.persistence.accessModes | list | [\"ReadWriteOnce\"] | Specify a storageClass for dynamic provisioning | . | filestore.persistence.data.mountPath | string | \"/tmp/Alfresco\" |   | . | filestore.persistence.data.subPath | string | \"alfresco-content-services/filestore-data\" |   | . | filestore.persistence.enabled | bool | false | Persist filestore data | . | filestore.persistence.existingClaim | string | nil | Use pre-provisioned pv through its claim (e.g. static provisionning) | . | filestore.persistence.storageClass | string | nil | Bind PVC based on storageClass (e.g. dynamic provisionning) | . | filestore.podAnnotations | object | {} |   | . | filestore.podLabels | object | {} |   | . | filestore.podSecurityContext.fsGroup | int | 1000 |   | . | filestore.podSecurityContext.runAsGroup | int | 1000 |   | . | filestore.podSecurityContext.runAsUser | int | 33030 |   | . | filestore.readinessProbe.initialDelaySeconds | int | 20 |   | . | filestore.readinessProbe.path | string | \"/ready\" |   | . | filestore.readinessProbe.periodSeconds | int | 60 |   | . | filestore.readinessProbe.timeoutSeconds | int | 10 |   | . | filestore.replicaCount | int | 1 |   | . | filestore.resources.limits.cpu | string | \"2\" |   | . | filestore.resources.limits.memory | string | \"1Gi\" |   | . | filestore.resources.requests.cpu | string | \"100m\" |   | . | filestore.resources.requests.memory | string | \"250Mi\" |   | . | filestore.service.externalPort | int | 80 |   | . | filestore.service.name | string | \"filestore\" |   | . | filestore.service.type | string | \"ClusterIP\" |   | . | filestore.strategy.type | string | \"RollingUpdate\" | Custom strategy for filestore deployment | . | filestore.tolerations | list | [] |   | . | filestore.volumeMounts | list | [] |   | . | filestore.volumes | list | [] |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | global.strategy.rollingUpdate.maxSurge | int | 1 |   | . | global.strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | imagemagick.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.imagemagick.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | imagemagick.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.imagemagick.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | imagemagick.autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | imagemagick.autoscaling.behavior.scaleDown.stabilizationWindowSeconds | int | 60 |   | . | imagemagick.autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | imagemagick.autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | imagemagick.autoscaling.enabled | bool | false | Toggle imagemagick autoscaling | . | imagemagick.autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicaset | . | imagemagick.autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | imagemagick.autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicaset | . | imagemagick.enabled | bool | true |   | . | imagemagick.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | imagemagick.image.internalPort | int | 8090 |   | . | imagemagick.image.pullPolicy | string | \"IfNotPresent\" |   | . | imagemagick.image.repository | string | \"quay.io/alfresco/alfresco-imagemagick\" |   | . | imagemagick.image.tag | string | \"5.1.7\" |   | . | imagemagick.livenessProbe.initialDelaySeconds | int | 10 |   | . | imagemagick.livenessProbe.livenessPercent | int | 150 |   | . | imagemagick.livenessProbe.livenessTransformPeriodSeconds | int | 600 |   | . | imagemagick.livenessProbe.maxTransformSeconds | int | 900 |   | . | imagemagick.livenessProbe.maxTransforms | int | 10000 |   | . | imagemagick.livenessProbe.path | string | \"/live\" |   | . | imagemagick.livenessProbe.periodSeconds | int | 20 |   | . | imagemagick.livenessProbe.timeoutSeconds | int | 10 |   | . | imagemagick.nodeSelector | object | {} |   | . | imagemagick.podAnnotations | object | {} |   | . | imagemagick.podLabels | object | {} |   | . | imagemagick.podSecurityContext.runAsNonRoot | bool | true |   | . | imagemagick.podSecurityContext.runAsUser | int | 33002 |   | . | imagemagick.readinessProbe.initialDelaySeconds | int | 20 |   | . | imagemagick.readinessProbe.path | string | \"/ready\" |   | . | imagemagick.readinessProbe.periodSeconds | int | 30 |   | . | imagemagick.readinessProbe.timeoutSeconds | int | 10 |   | . | imagemagick.replicaCount | int | 2 |   | . | imagemagick.resources.limits.cpu | string | \"4\" |   | . | imagemagick.resources.limits.memory | string | \"4Gi\" |   | . | imagemagick.resources.requests.cpu | string | \"250m\" |   | . | imagemagick.resources.requests.memory | string | \"250Mi\" |   | . | imagemagick.service.externalPort | int | 80 |   | . | imagemagick.service.name | string | \"imagemagick\" |   | . | imagemagick.service.type | string | \"ClusterIP\" |   | . | imagemagick.tolerations | list | [] |   | . | imagemagick.volumeMounts | list | [] |   | . | imagemagick.volumes | list | [] |   | . | libreoffice.affinity | object | {\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.libreoffice.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.libreoffice.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}} | Pod affinity, passed thru tpl function | . | libreoffice.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.libreoffice.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | libreoffice.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.libreoffice.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | libreoffice.autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | libreoffice.autoscaling.behavior.scaleDown.stabilizationWindowSeconds | int | 60 |   | . | libreoffice.autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | libreoffice.autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | libreoffice.autoscaling.enabled | bool | false | Toggle libreoffice autoscaling | . | libreoffice.autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicaset | . | libreoffice.autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | libreoffice.autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicaset | . | libreoffice.enabled | bool | true |   | . | libreoffice.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | libreoffice.image.internalPort | int | 8090 |   | . | libreoffice.image.pullPolicy | string | \"IfNotPresent\" |   | . | libreoffice.image.repository | string | \"quay.io/alfresco/alfresco-libreoffice\" |   | . | libreoffice.image.tag | string | \"5.1.7\" |   | . | libreoffice.livenessProbe.initialDelaySeconds | int | 10 |   | . | libreoffice.livenessProbe.livenessPercent | int | 250 |   | . | libreoffice.livenessProbe.livenessTransformPeriodSeconds | int | 600 |   | . | libreoffice.livenessProbe.maxTransformSeconds | int | 1800 |   | . | libreoffice.livenessProbe.maxTransforms | int | 99999 |   | . | libreoffice.livenessProbe.path | string | \"/live\" |   | . | libreoffice.livenessProbe.periodSeconds | int | 20 |   | . | libreoffice.livenessProbe.timeoutSeconds | int | 10 |   | . | libreoffice.nodeSelector | object | {} |   | . | libreoffice.podAnnotations | object | {} |   | . | libreoffice.podLabels | object | {} |   | . | libreoffice.podSecurityContext.runAsNonRoot | bool | true |   | . | libreoffice.podSecurityContext.runAsUser | int | 33003 |   | . | libreoffice.readinessProbe.initialDelaySeconds | int | 20 |   | . | libreoffice.readinessProbe.path | string | \"/ready\" |   | . | libreoffice.readinessProbe.periodSeconds | int | 30 |   | . | libreoffice.readinessProbe.timeoutSeconds | int | 10 |   | . | libreoffice.replicaCount | int | 2 |   | . | libreoffice.resources.limits.cpu | string | \"4\" |   | . | libreoffice.resources.limits.memory | string | \"4Gi\" |   | . | libreoffice.resources.requests.cpu | string | \"250m\" |   | . | libreoffice.resources.requests.memory | string | \"500Mi\" |   | . | libreoffice.service.externalPort | int | 80 |   | . | libreoffice.service.name | string | \"libreoffice\" |   | . | libreoffice.service.type | string | \"ClusterIP\" |   | . | libreoffice.tolerations | list | [] |   | . | libreoffice.volumeMounts | list | [] |   | . | libreoffice.volumes | list | [] |   | . | messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" |   | . | messageBroker.existingConfigMap.name | string | nil | Alternatively, provide message broker URL via an existing ConfigMap | . | messageBroker.existingSecret.keys.password | string | \"BROKER_PASSWORD\" |   | . | messageBroker.existingSecret.keys.user | string | \"BROKER_USERNAME\" |   | . | messageBroker.existingSecret.name | string | nil | Alternatively, provide message broker credentials via an existing Secret | . | messageBroker.password | string | nil | Activemq password | . | messageBroker.url | string | nil | Activemq connection url (e.g. failover:(nio://my-broker:61616)?timeout=3000&amp;jms.useCompression=true) | . | messageBroker.user | string | nil | Activemq username | . | pdfrenderer.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.pdfrenderer.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | pdfrenderer.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.pdfrenderer.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | pdfrenderer.autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | pdfrenderer.autoscaling.behavior.scaleDown.stabilizationWindowSeconds | int | 60 |   | . | pdfrenderer.autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | pdfrenderer.autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | pdfrenderer.autoscaling.enabled | bool | false | Toggle pdfrenderer autoscaling | . | pdfrenderer.autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicaset | . | pdfrenderer.autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | pdfrenderer.autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicaset | . | pdfrenderer.enabled | bool | true |   | . | pdfrenderer.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | pdfrenderer.image.internalPort | int | 8090 |   | . | pdfrenderer.image.pullPolicy | string | \"IfNotPresent\" |   | . | pdfrenderer.image.repository | string | \"quay.io/alfresco/alfresco-pdf-renderer\" |   | . | pdfrenderer.image.tag | string | \"5.1.7\" |   | . | pdfrenderer.livenessProbe.initialDelaySeconds | int | 10 |   | . | pdfrenderer.livenessProbe.livenessPercent | int | 150 |   | . | pdfrenderer.livenessProbe.livenessTransformPeriodSeconds | int | 600 |   | . | pdfrenderer.livenessProbe.maxTransformSeconds | int | 1200 |   | . | pdfrenderer.livenessProbe.maxTransforms | int | 10000 |   | . | pdfrenderer.livenessProbe.path | string | \"/live\" |   | . | pdfrenderer.livenessProbe.periodSeconds | int | 20 |   | . | pdfrenderer.livenessProbe.timeoutSeconds | int | 10 |   | . | pdfrenderer.nodeSelector | object | {} |   | . | pdfrenderer.podAnnotations | object | {} |   | . | pdfrenderer.podLabels | object | {} |   | . | pdfrenderer.podSecurityContext.runAsNonRoot | bool | true |   | . | pdfrenderer.podSecurityContext.runAsUser | int | 33001 |   | . | pdfrenderer.readinessProbe.initialDelaySeconds | int | 20 |   | . | pdfrenderer.readinessProbe.path | string | \"/ready\" |   | . | pdfrenderer.readinessProbe.periodSeconds | int | 30 |   | . | pdfrenderer.readinessProbe.timeoutSeconds | int | 10 |   | . | pdfrenderer.replicaCount | int | 2 |   | . | pdfrenderer.resources.limits.cpu | string | \"2\" |   | . | pdfrenderer.resources.limits.memory | string | \"2Gi\" |   | . | pdfrenderer.resources.requests.cpu | string | \"100m\" |   | . | pdfrenderer.resources.requests.memory | string | \"250Mi\" |   | . | pdfrenderer.service.externalPort | int | 80 |   | . | pdfrenderer.service.name | string | \"pdfrenderer\" |   | . | pdfrenderer.service.type | string | \"ClusterIP\" |   | . | pdfrenderer.tolerations | list | [] |   | . | pdfrenderer.volumeMounts | list | [] |   | . | pdfrenderer.volumes | list | [] |   | . | serviceAccount.annotations | object | {} |   | . | serviceAccount.automount | bool | true |   | . | serviceAccount.create | bool | true |   | . | serviceAccount.name | string | \"\" |   | . | tags.ci | bool | false | Enable dependencies required for CI. Do not enable. | . | tika.affinity | object | {\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.tika.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.tika.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}} | Pod affinity, passed thru tpl function | . | tika.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.tika.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | tika.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.tika.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | tika.autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | tika.autoscaling.behavior.scaleDown.stabilizationWindowSeconds | int | 60 |   | . | tika.autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | tika.autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | tika.autoscaling.enabled | bool | false | Toggle tika autoscaling | . | tika.autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicaset | . | tika.autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | tika.autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicaset | . | tika.enabled | bool | true |   | . | tika.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | tika.image.internalPort | int | 8090 |   | . | tika.image.pullPolicy | string | \"IfNotPresent\" |   | . | tika.image.repository | string | \"quay.io/alfresco/alfresco-tika\" |   | . | tika.image.tag | string | \"5.1.7\" |   | . | tika.livenessProbe.initialDelaySeconds | int | 30 |   | . | tika.livenessProbe.livenessPercent | int | 400 |   | . | tika.livenessProbe.livenessTransformPeriodSeconds | int | 600 |   | . | tika.livenessProbe.maxTransformSeconds | int | 1800 |   | . | tika.livenessProbe.maxTransforms | int | 10000 |   | . | tika.livenessProbe.path | string | \"/live\" |   | . | tika.livenessProbe.periodSeconds | int | 20 |   | . | tika.livenessProbe.timeoutSeconds | int | 10 |   | . | tika.nodeSelector | object | {} |   | . | tika.podAnnotations | object | {} |   | . | tika.podLabels | object | {} |   | . | tika.podSecurityContext.runAsNonRoot | bool | true |   | . | tika.podSecurityContext.runAsUser | int | 33004 |   | . | tika.readinessProbe.initialDelaySeconds | int | 30 |   | . | tika.readinessProbe.path | string | \"/ready\" |   | . | tika.readinessProbe.periodSeconds | int | 30 |   | . | tika.readinessProbe.timeoutSeconds | int | 10 |   | . | tika.replicaCount | int | 2 |   | . | tika.resources.limits.cpu | string | \"4\" |   | . | tika.resources.limits.memory | string | \"4Gi\" |   | . | tika.resources.requests.cpu | string | \"250m\" |   | . | tika.resources.requests.memory | string | \"600Mi\" |   | . | tika.service.externalPort | int | 80 |   | . | tika.service.name | string | \"tika\" |   | . | tika.service.type | string | \"ClusterIP\" |   | . | tika.tolerations | list | [] |   | . | tika.volumeMounts | list | [] |   | . | tika.volumes | list | [] |   | . | transformmisc.affinity | object | {\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-misc.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-misc.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}} | Pod affinity, passed thru tpl function | . | transformmisc.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-misc.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | transformmisc.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-misc.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | transformmisc.autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | transformmisc.autoscaling.behavior.scaleDown.stabilizationWindowSeconds | int | 60 |   | . | transformmisc.autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | transformmisc.autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | transformmisc.autoscaling.enabled | bool | false | Toggle transformmisc autoscaling | . | transformmisc.autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicaset | . | transformmisc.autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | transformmisc.autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicaset | . | transformmisc.enabled | bool | true |   | . | transformmisc.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | transformmisc.image.internalPort | int | 8090 |   | . | transformmisc.image.pullPolicy | string | \"IfNotPresent\" |   | . | transformmisc.image.repository | string | \"quay.io/alfresco/alfresco-transform-misc\" |   | . | transformmisc.image.tag | string | \"5.1.7\" |   | . | transformmisc.livenessProbe.initialDelaySeconds | int | 10 |   | . | transformmisc.livenessProbe.livenessPercent | int | 400 |   | . | transformmisc.livenessProbe.livenessTransformPeriodSeconds | int | 600 |   | . | transformmisc.livenessProbe.maxTransformSeconds | int | 1800 |   | . | transformmisc.livenessProbe.maxTransforms | int | 10000 |   | . | transformmisc.livenessProbe.path | string | \"/live\" |   | . | transformmisc.livenessProbe.periodSeconds | int | 20 |   | . | transformmisc.livenessProbe.timeoutSeconds | int | 10 |   | . | transformmisc.nodeSelector | object | {} |   | . | transformmisc.podAnnotations | object | {} |   | . | transformmisc.podLabels | object | {} |   | . | transformmisc.podSecurityContext.runAsNonRoot | bool | true |   | . | transformmisc.podSecurityContext.runAsUser | int | 33006 |   | . | transformmisc.readinessProbe.initialDelaySeconds | int | 20 |   | . | transformmisc.readinessProbe.path | string | \"/ready\" |   | . | transformmisc.readinessProbe.periodSeconds | int | 30 |   | . | transformmisc.readinessProbe.timeoutSeconds | int | 10 |   | . | transformmisc.replicaCount | int | 2 |   | . | transformmisc.resources.limits.cpu | string | \"2\" |   | . | transformmisc.resources.limits.memory | string | \"2Gi\" |   | . | transformmisc.resources.requests.cpu | string | \"100m\" |   | . | transformmisc.resources.requests.memory | string | \"250Mi\" |   | . | transformmisc.service.externalPort | int | 80 |   | . | transformmisc.service.name | string | \"transformmisc\" |   | . | transformmisc.service.type | string | \"ClusterIP\" |   | . | transformmisc.tolerations | list | [] |   | . | transformmisc.volumeMounts | list | [] |   | . | transformmisc.volumes | list | [] |   | . | transformrouter.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-router.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule on different zones | . | transformrouter.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-transform-service.transform-router.name\\\" . }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule on different nodes | . | transformrouter.enabled | bool | true |   | . | transformrouter.environment.JAVA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | transformrouter.image.internalPort | int | 8095 |   | . | transformrouter.image.pullPolicy | string | \"IfNotPresent\" |   | . | transformrouter.image.repository | string | \"quay.io/alfresco/alfresco-transform-router\" |   | . | transformrouter.image.tag | string | \"4.1.7\" |   | . | transformrouter.livenessProbe.initialDelaySeconds | int | 20 |   | . | transformrouter.livenessProbe.path | string | \"/actuator/health\" |   | . | transformrouter.livenessProbe.periodSeconds | int | 30 |   | . | transformrouter.livenessProbe.timeoutSeconds | int | 10 |   | . | transformrouter.nodeSelector | object | {} |   | . | transformrouter.podAnnotations | object | {} |   | . | transformrouter.podLabels | object | {} |   | . | transformrouter.podSecurityContext.runAsNonRoot | bool | true |   | . | transformrouter.podSecurityContext.runAsUser | int | 33016 |   | . | transformrouter.readinessProbe.initialDelaySeconds | int | 20 |   | . | transformrouter.readinessProbe.path | string | \"/actuator/health\" |   | . | transformrouter.readinessProbe.periodSeconds | int | 60 |   | . | transformrouter.readinessProbe.timeoutSeconds | int | 10 |   | . | transformrouter.replicaCount | int | 1 |   | . | transformrouter.resources.limits.cpu | string | \"1\" |   | . | transformrouter.resources.limits.memory | string | \"1Gi\" |   | . | transformrouter.resources.requests.cpu | string | \"100m\" |   | . | transformrouter.resources.requests.memory | string | \"250Mi\" |   | . | transformrouter.service.externalPort | int | 80 |   | . | transformrouter.service.name | string | \"transform-router\" |   | . | transformrouter.service.type | string | \"ClusterIP\" |   | . | transformrouter.tolerations | list | [] |   | . | transformrouter.volumeMounts | list | [] |   | . | transformrouter.volumes | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/README.html#values",
    
    "relUrl": "/charts/alfresco-transform-service/README.html#values"
  },"18": {
    "doc": "alfresco-share",
    "title": "alfresco-share",
    "content": ". Alfresco Share Helm chart for Kubernetes . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-share/README.html",
    
    "relUrl": "/charts/alfresco-share/README.html"
  },"19": {
    "doc": "alfresco-share",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-share/README.html#requirements",
    
    "relUrl": "/charts/alfresco-share/README.html#requirements"
  },"20": {
    "doc": "alfresco-share",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-share.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-share.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods on different nodes | . | args | list | [] |   | . | command | list | [] |   | . | environment.CATALINA_OPTS | string | \"-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | extraInitContainers | list | [] |   | . | extraSideContainers | list | [] |   | . | extraVolumeMounts | list | [] |   | . | extraVolumes | list | [] |   | . | fullnameOverride | string | \"\" | Define a fully static name | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" | If a private image registry a secret can be defined and passed to kubernetes, see: https://github.com/Alfresco/acs-deployment/blob/a924ad6670911f64f1bba680682d266dd4ea27fb/docs/helm/eks-deployment.md#docker-registry-secret | . | global.known_urls | string | nil | a fallback for .Values.known_urls that can be shared between charts | . | hazelcast.port | int | 5701 | Port used to expose the Hazelcast service when replicaCount &gt; 1 | . | image.port | int | 8080 | Internal port where the pod is listening. Should only be changed is you use a custom image which uses a different port. | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-share\" |   | . | image.tag | string | \"25.1.0\" |   | . | imagePullSecrets | list | [] |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/affinity” | string | \"cookie\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-body-size” | string | \"5g\" | Files uploads are limited to 5GB | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-read-timeout” | string | \"20m\" | Files uploads will timeout if longer than 20 minutes | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-expires” | string | \"604800\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-max-age” | string | \"604800\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-name” | string | \"alfrescoShare\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-path” | string | \"/share\" |   | . | ingress.className | string | \"nginx\" |   | . | ingress.enabled | bool | true |   | . | ingress.hosts[0].paths[0].path | string | \"/share\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"ImplementationSpecific\" |   | . | ingress.tls | list | [] |   | . | known_urls | string | nil | Provide the list of URL considered allowed to access Share resources (used for CSRF protection). The value be either a list of strings or a single string separated by spaces. | . | livenessProbe.httpGet.path | string | \"/share\" |   | . | livenessProbe.httpGet.port | string | \"http\" |   | . | livenessProbe.initialDelaySeconds | int | 15 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.timeoutSeconds | int | 5 |   | . | managedApplicationContext.enabled | bool | true | Automatically inject a custom application context file which for now only enables hazelcast clustering when more than one replica is configured. Should be disabled when providing a custom application context file. | . | nameOverride | string | \"\" | Define a partially static name | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | readinessProbe.httpGet.path | string | \"/share\" |   | . | readinessProbe.httpGet.port | string | \"http\" |   | . | readinessProbe.initialDelaySeconds | int | 15 |   | . | readinessProbe.periodSeconds | int | 30 |   | . | readinessProbe.timeoutSeconds | int | 5 |   | . | replicaCount | int | 1 | Define the number of replicas to run. Multiple replicas are only supported on Share 23.1.1 and later | . | repository.existingConfigMap.keys.host | string | \"REPO_HOST\" | name of the key in the configMap where to find the repository service host | . | repository.existingConfigMap.keys.port | string | \"REPO_PORT\" | name of the key in the configMap where to find the repository service port | . | repository.existingConfigMap.name | string | nil | a pre-existing configmap which provides expected configuration for Share | . | repository.host | string | \"localhost\" | repository hostname/servicename | . | repository.port | int | 8080 | repository port where service is exposed | . | resources.limits.cpu | string | \"4\" |   | . | resources.limits.memory | string | \"2000Mi\" |   | . | resources.requests.cpu | string | \"250m\" |   | . | resources.requests.memory | string | \"512Mi\" |   | . | securityContext.capabilities.drop[0] | string | \"NET_RAW\" |   | . | securityContext.capabilities.drop[1] | string | \"ALL\" |   | . | securityContext.runAsNonRoot | bool | false |   | . | service.name | string | \"share\" |   | . | service.port | int | 80 |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"share-sa\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | strategy.rollingUpdate.maxSurge | int | 1 |   | . | strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | strategy.type | string | \"RollingUpdate\" |   | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-share/README.html#values",
    
    "relUrl": "/charts/alfresco-share/README.html#values"
  },"21": {
    "doc": "activemq",
    "title": "activemq",
    "content": ". A Helm chart providing a basic Apache ActiveMQ deployment required to evaluate ACS (not meant to be used in production). ",
    "url": "/alfresco-helm-charts/charts/activemq/README.html",
    
    "relUrl": "/charts/activemq/README.html"
  },"22": {
    "doc": "activemq",
    "title": "Source Code",
    "content": ". | https://github.com/Alfresco/alfresco-helm-charts | . ",
    "url": "/alfresco-helm-charts/charts/activemq/README.html#source-code",
    
    "relUrl": "/charts/activemq/README.html#source-code"
  },"23": {
    "doc": "activemq",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/activemq/README.html#requirements",
    
    "relUrl": "/charts/activemq/README.html#requirements"
  },"24": {
    "doc": "activemq",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | adminUser.existingSecretName | string | nil | An existing kubernetes secret that contains BROKER_USERNAME and BROKER_PASSWORD keys to override the default user credentials | . | adminUser.password | string | \"admin\" | Password for the default user with administrative privileges | . | adminUser.user | string | \"admin\" | Username for the default user with administrative privileges | . | enabled | bool | true |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" | Authenticate to image registry before pulling by providing an existing secret of type kubernetes.io/dockerconfigjson | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"alfresco/alfresco-activemq\" |   | . | image.tag | string | \"5.18.7-jre17-rockylinux8\" |   | . | livenessProbe.failureThreshold | int | 6 |   | . | livenessProbe.initialDelaySeconds | int | 60 |   | . | livenessProbe.periodSeconds | int | 10 |   | . | livenessProbe.tcpSocket.port | string | \"openwire\" |   | . | livenessProbe.timeoutSeconds | int | 1 |   | . | nodeSelector | object | {} |   | . | persistence.accessModes | list | [\"ReadWriteOnce\"] | defines type of access required by the persistent volume [Access_Modes] (https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) | . | persistence.baseSize | string | \"20Gi\" |   | . | persistence.data.mountPath | string | \"/opt/activemq/data\" |   | . | persistence.data.subPath | string | \"alfresco-infrastructure/activemq-data\" |   | . | persistence.enabled | bool | true |   | . | persistence.existingClaim | string | nil |   | . | persistence.storageClass | string | nil |   | . | podSecurityContext.fsGroup | int | 1000 |   | . | podSecurityContext.runAsGroup | int | 1000 |   | . | podSecurityContext.runAsUser | int | 33031 |   | . | readinessProbe.failureThreshold | int | 6 |   | . | readinessProbe.initialDelaySeconds | int | 5 |   | . | readinessProbe.periodSeconds | int | 10 |   | . | readinessProbe.tcpSocket.port | string | \"openwire\" |   | . | readinessProbe.timeoutSeconds | int | 1 |   | . | replicaCount | int | 1 |   | . | resources.limits.cpu | string | \"2\" |   | . | resources.limits.memory | string | \"2048Mi\" |   | . | resources.requests.cpu | string | \"0.25\" |   | . | resources.requests.memory | string | \"512Mi\" |   | . | service.name | string | \"activemq\" |   | . | services.broker.ports.external.amqp | int | 5672 |   | . | services.broker.ports.external.openwire | int | 61616 |   | . | services.broker.ports.external.stomp | int | 61613 |   | . | services.broker.ports.internal.amqp | int | 5672 |   | . | services.broker.ports.internal.openwire | int | 61616 |   | . | services.broker.ports.internal.stomp | int | 61613 |   | . | services.broker.type | string | \"ClusterIP\" |   | . | services.webConsole.ports.external.webConsole | int | 8161 |   | . | services.webConsole.ports.internal.webConsole | int | 8161 |   | . | services.webConsole.type | string | \"NodePort\" |   | . ",
    "url": "/alfresco-helm-charts/charts/activemq/README.html#values",
    
    "relUrl": "/charts/activemq/README.html#values"
  },"25": {
    "doc": "alfresco-repository",
    "title": "alfresco-repository",
    "content": ". Alfresco content repository Helm chart . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/README.html",
    
    "relUrl": "/charts/alfresco-repository/README.html"
  },"26": {
    "doc": "alfresco-repository",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | postgresql | 12.5.6 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/README.html#requirements",
    
    "relUrl": "/charts/alfresco-repository/README.html#requirements"
  },"27": {
    "doc": "alfresco-repository",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-repository.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer scheduling pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-repository.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer scheduling pods on different nodes | . | args | list | [] |   | . | autoscaling.behavior.scaleDown.policies | list | [{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":1}] | list of available policies for scaling down scale down either by one pod or by destroying 25% of the pods (whichever is smaller) | . | autoscaling.behavior.scaleUp.policies | list | [{\"periodSeconds\":60,\"type\":\"Percent\",\"value\":50},{\"periodSeconds\":60,\"type\":\"Pods\",\"value\":2}] | list of available policies for scaling up scale up either by one pod or by adding 50% more pods (whichever is bigger) | . | autoscaling.behavior.scaleUp.stabilizationWindowSeconds | int | 30 |   | . | autoscaling.enabled | bool | false | Toggle repository autoscaling | . | autoscaling.maxReplicas | int | 3 | maximum number of replicas to spin up within the replicatset | . | autoscaling.metrics | list | [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":75,\"type\":\"Utilization\"}},\"type\":\"Resource\"}] | a list of resource the HPA controller should monitor For more details check https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-resource-metrics | . | autoscaling.minReplicas | int | 1 | minimum number of replicas to spin up within the replicatset | . | command | list | [] |   | . | configuration.db.driver | string | nil | JDBC driver class of the driver if none is provided the it is guessed from the URL provided | . | configuration.db.existingConfigMap.keys.driver | string | \"DATABASE_DRIVER\" | configmap key where to find the JDBC driver class to use. The configmap may leverage the alfresco-repository.db.cm named template to auto-generate it from the sole url parameter. | . | configuration.db.existingConfigMap.keys.url | string | \"DATABASE_URL\" | configmap key where to find the URL of the database | . | configuration.db.existingConfigMap.name | string | nil |   | . | configuration.db.existingSecret | object | {\"keys\":{\"password\":\"DATABASE_PASSWORD\",\"username\":\"DATABASE_USERNAME\"},\"name\":null} | Existing secret and their keys where to find the database username &amp; password. | . | configuration.db.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password | . | configuration.db.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username | . | configuration.db.existingSecret.name | string | nil | Name of a pre-existing secret containing database credentials | . | configuration.db.password | string | nil | Password to authentication to the repository database | . | configuration.db.url | string | nil | JDBC url of the database This is a mandatory parameter | . | configuration.db.username | string | nil | Username to authentication to the repository database | . | configuration.hz.port | int | 5701 | Hazelcast listener port Only change it if you use a custom image where the port has been changed from default | . | configuration.imap | object | see below | Basic IMAP capabilities config (limited to enabling/disabling). In order to pass more IMAP properties and configure the subsystem more deeply, please use value environment.CATALINA_OPTS or configuration.repository.existingConfiMap and check the available properties for this subsystem | . | configuration.imap.enabled | bool | false | Enable/Disable Alfresco repository IMAP capabilities | . | configuration.imap.port | int | 1143 | port to use to listen for IMAP clients | . | configuration.imap.protocol | string | \"imap\" | Protocol to use to talk to IMAP clients (imap or imaps) | . | configuration.imap.service.annotations | string | nil | Use annations to get custom behavior of the loadbalancer exposing the service | . | configuration.messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" | Key within the configmap holding the message broker URL. It MUST be a failover URL as per the spec below: https://activemq.apache.org/failover-transport-reference.html | . | configuration.messageBroker.existingConfigMap.name | string | nil | Name of a pre-existing configmap containing the message broker URL | . | configuration.messageBroker.existingSecret.keys.password | string | \"BROKER_PASSWORD\" | Key within the secret holding the message broker password | . | configuration.messageBroker.existingSecret.keys.username | string | \"BROKER_USERNAME\" | Key within the secret holding the message broker username | . | configuration.messageBroker.existingSecret.name | string | nil | Name of a pre-existing secret containing message broker credentials | . | configuration.messageBroker.password | string | nil | Password to authenticate to the message broker | . | configuration.messageBroker.url | string | nil | Message Broker URL | . | configuration.messageBroker.username | string | nil | Username to authenticate to the message broker | . | configuration.repository.existingConfigMap | string | nil | a configmap containing the “alfresco-global.properties” key populated with actual Alfresco repository properties see details | . | configuration.repository.existingSecrets | list | [{\"key\":\"license.lic\",\"name\":\"repository-secrets\",\"purpose\":\"acs-license\"}] | A list of secrets to make available to the repository as env vars. This list can contain special secrets marked with predefined purpose: acs-license to pass license as a secret or subsystems:: to configure an Alfresco subsystem. See Configuring Alfresco Subsystem for more details. | . | configuration.search.existingConfigMap.keys.flavor | string | \"SEARCH_FLAVOR\" | configmap key where to find the search engine used | . | configuration.search.existingConfigMap.keys.host | string | \"SEARCH_HOST\" | configmap key where to find the hostname part of the search URL. The configmap may leverage the alfresco-repository.solr.cm named template to auto-generate it from the sole url parameter. | . | configuration.search.existingConfigMap.keys.port | string | \"SEARCH_PORT\" | configmap key where to find the port part of the search URL. The configmap may leverage the alfresco-repository.solr.cm named template to auto-generate it from the sole url parameter. | . | configuration.search.existingConfigMap.keys.securecomms | string | \"SEARCH_SECURECOMMS\" | configmap key where to find the search communication security type. The configmap may leverage the alfresco-repository.solr.cm named template to auto-generate it from the sole url parameter. | . | configuration.search.existingConfigMap.keys.solr_base_url | string | \"SOLR_BASE_URL\" | configmap key where to find the root path to Solr. The configmap may leverage the alfresco-repository.solr.cm named template to auto-generate it from the sole url parameter. Not applicable to Elasticsearch | . | configuration.search.existingConfigMap.keys.url | string | \"SEARCH_URL\" | Key within the configmap holding the search service URL. | . | configuration.search.existingConfigMap.name | string | nil | Optional configmap containing the search service URL | . | configuration.search.existingSecret.keys.password | string | \"ELASTICSEARCH_PASSWORD\" | Key within the secret holding the search service password | . | configuration.search.existingSecret.keys.solr-secret | string | \"SOLR_SECRET\" | Key within the secret holding the index shared secret | . | configuration.search.existingSecret.keys.username | string | \"ELASTICSEARCH_USERNAME\" | Key within the secret holding the search service username | . | configuration.search.existingSecret.name | string | nil | Optional secret containing search service credentials | . | configuration.search.flavor | string | \"noindex\" | Can be either solr, elasticsearch or noindex | . | configuration.search.password | string | nil | Password to authenticate to the search service | . | configuration.search.solr-secret | string | nil | Solr inter process shared secret | . | configuration.search.url | string | nil | URL where the search service can be found | . | configuration.search.username | string | nil | Username to authenticate to the search service | . | configuration.smtp | object | see below | Basic SMTP capabilities config (limited to enabling/disabling). In order to pass more SMTP properties and configure the subsystem more deeply, please use value environment.CATALINA_OPTS or configuration.repository.existingConfigMap and check the available properties for this subsystem | . | configuration.smtp.enabled | bool | false | Enable/Disable Alfresco repository SMTP capabilities | . | configuration.smtp.port | int | 1025 | port to use to listen for SMTP clients | . | configuration.smtp.service.annotations | string | nil | Use annations to get custom behavior of the loadbalancer exposing the service | . | environment.CATALINA_OPTS | string | nil | Java or Tomcat system properties. These properties must be provided as a single string following the pattern “-Dproperty=value -Dmoreprop=morevalue”. They override the content of the global properties file but you should prefer providing configuration.repository.existingConfigMap. | . | environment.JAVA_OPTS | string | \"-XX:MaxRAMPercentage=80\" | Set JVM options | . | extraInitContainers | list | [] |   | . | extraSideContainers | list | [] |   | . | extraVolumeMounts | list | [] |   | . | extraVolumes | list | [] |   | . | fullnameOverride | string | \"\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" | If a private image registry a secret can be defined and passed to kubernetes, see: https://github.com/Alfresco/acs-deployment/blob/a924ad6670911f64f1bba680682d266dd4ea27fb/docs/helm/eks-deployment.md#docker-registry-secret | . | global.known_urls | string | nil | a fallback for .Values.known_urls that can be shared between charts | . | image.port | int | 8080 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-content-repository\" |   | . | image.tag | string | \"25.1.0\" |   | . | imagePullSecrets | list | [] |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/affinity” | string | \"cookie\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-body-size” | string | \"5g\" | File uploads are limited to 5g | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-read-timeout” | string | \"20m\" | File uploads will timeout after 20 minutes | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-hash” | string | \"sha1\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-name” | string | \"alfrescoRepo\" |   | . | ingress.className | string | \"nginx\" | supported ingress class | . | ingress.enabled | bool | true | Toggle ingress | . | ingress.hosts[0].paths[0].path | string | \"/\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.hosts[0].paths[1].path | string | \"/api-explorer\" |   | . | ingress.hosts[0].paths[1].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | initContainers.waitDbReady.image.pullPolicy | string | \"IfNotPresent\" |   | . | initContainers.waitDbReady.image.repository | string | \"busybox\" |   | . | initContainers.waitDbReady.image.tag | string | \"1.37\" |   | . | initContainers.waitDbReady.resources.limits.cpu | string | \"250m\" |   | . | initContainers.waitDbReady.resources.limits.memory | string | \"20Mi\" |   | . | livenessProbe.httpGet.path | string | \"/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-\" |   | . | livenessProbe.httpGet.port | string | \"http\" |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.timeoutSeconds | int | 3 |   | . | nameOverride | string | \"\" |   | . | nodeSelector | object | {} |   | . | persistence.accessModes | list | [\"ReadWriteMany\"] | Specify a storageClass for dynamic provisioning | . | persistence.baseSize | string | \"20Gi\" |   | . | persistence.data.mountPath | string | \"/usr/local/tomcat/alf_data\" |   | . | persistence.data.subPath | string | \"alfresco-content-services/repository-data\" |   | . | persistence.enabled | bool | false | Persist Contentsotre data | . | persistence.existingClaim | string | nil | Use pre-provisioned pv through its claim (e.g. static provisioning) | . | persistence.storageClass | string | nil | Bind PVC based on storageClass (e.g. dynamic provisioning) | . | podAnnotations | object | {} |   | . | podSecurityContext.fsGroup | int | 1000 |   | . | podSecurityContext.runAsGroup | int | 1000 |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33000 |   | . | readinessProbe.httpGet.path | string | \"/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-\" |   | . | readinessProbe.httpGet.port | string | \"http\" |   | . | readinessProbe.periodSeconds | int | 20 |   | . | readinessProbe.timeoutSeconds | int | 3 |   | . | replicaCount | int | 1 |   | . | resources.limits.cpu | string | \"4\" |   | . | resources.limits.memory | string | \"8Gi\" |   | . | resources.requests.cpu | string | \"2\" |   | . | resources.requests.memory | string | \"2Gi\" |   | . | securityContext | object | {} |   | . | service.name | string | \"repository\" |   | . | service.port | int | 80 |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} |   | . | serviceAccount.create | bool | true |   | . | serviceAccount.name | string | \"alfresco-repo-sa\" |   | . | startupProbe.failureThreshold | int | 9 |   | . | startupProbe.httpGet.path | string | \"/alfresco/api/-default-/public/alfresco/versions/1/probes/-live-\" |   | . | startupProbe.httpGet.port | string | \"http\" |   | . | startupProbe.periodSeconds | int | 20 |   | . | startupProbe.timeoutSeconds | int | 3 |   | . | strategy.rollingUpdate.maxSurge | int | 1 |   | . | strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | strategy.type | string | \"RollingUpdate\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | terminationGracePeriod | int | 60 | How long to wait for tomcat to complete shutdown before killing it | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/README.html#values",
    
    "relUrl": "/charts/alfresco-repository/README.html#values"
  },"28": {
    "doc": "alfresco-insight-zeppelin",
    "title": "alfresco-insight-zeppelin",
    "content": ". A Helm chart for deploying Alfresco Insight Zeppelin . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. Homepage: https://www.alfresco.com . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html",
    
    "relUrl": "/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html"
  },"29": {
    "doc": "alfresco-insight-zeppelin",
    "title": "Source Code",
    "content": ". | https://github.com/Alfresco/alfresco-helm-charts | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#source-code",
    
    "relUrl": "/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#source-code"
  },"30": {
    "doc": "alfresco-insight-zeppelin",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#requirements",
    
    "relUrl": "/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#requirements"
  },"31": {
    "doc": "alfresco-insight-zeppelin",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | string | \"\" | Pod affinity, passed thru tpl function | . | environment.ZEPPELIN_INTP_MEM | string | \"-Xms512m -Xmx1g\" |   | . | environment.ZEPPELIN_MEM | string | \"-Xms512m -Xmx1g\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" | Global definition of Docker registry pull secret which can be overridden from parent ACS Helm chart(s) | . | global.strategy.rollingUpdate.maxSurge | int | 1 |   | . | global.strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | image.internalPort | int | 9090 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/insight-zeppelin\" |   | . | image.tag | string | \"2.0.15\" |   | . | ingress.className | string | \"nginx\" |   | . | ingress.extraAnnotations | object | {} |   | . | ingress.hosts[0].paths[0].path | string | \"/zeppelin\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.initialDelaySeconds | int | 130 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | nodeSelector | object | {} |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33007 |   | . | readinessProbe.initialDelaySeconds | int | 60 |   | . | readinessProbe.periodSeconds | int | 20 |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | replicaCount | int | 1 |   | . | repository.existingConfigMap.keys.host | string | \"REPO_HOST\" | Key within the configmap holding the repository hostname | . | repository.existingConfigMap.keys.port | string | \"REPO_PORT\" | Key within the configmap holding the repository port | . | repository.existingConfigMap.name | string | nil | Name of a pre-existing configmap containing Alfresco repository URL | . | repository.url | string | \"http://alfresco-search-service\" | Alfresco repository URL | . | resources.limits.cpu | string | \"1\" |   | . | resources.limits.memory | string | \"1024Mi\" |   | . | resources.requests.cpu | string | \"0.5\" |   | . | resources.requests.memory | string | \"512Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"zeppelin\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.automount | bool | true | Automatically mount a ServiceAccount’s API credentials? | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#values",
    
    "relUrl": "/charts/alfresco-search-service/charts/alfresco-insight-zeppelin/README.html#values"
  },"32": {
    "doc": "alfresco-search-service",
    "title": "alfresco-search-service",
    "content": ". A Helm chart for deploying Alfresco Search Service . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. Homepage: https://www.alfresco.com . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/README.html",
    
    "relUrl": "/charts/alfresco-search-service/README.html"
  },"33": {
    "doc": "alfresco-search-service",
    "title": "Source Code",
    "content": ". | https://github.com/Alfresco/alfresco-helm-charts | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/README.html#source-code",
    
    "relUrl": "/charts/alfresco-search-service/README.html#source-code"
  },"34": {
    "doc": "alfresco-search-service",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . |   | alfresco-insight-zeppelin | 4.0.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/README.html#requirements",
    
    "relUrl": "/charts/alfresco-search-service/README.html#requirements"
  },"35": {
    "doc": "alfresco-search-service",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | string | \"\" | Pod affinity, passed thru tpl function | . | alfresco-insight-zeppelin.enabled | bool | false |   | . | environment.SOLR_CREATE_ALFRESCO_DEFAULTS | string | \"alfresco,archive\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | ingress.annotations | object | {\"nginx.ingress.kubernetes.io/auth-realm\":\"Authentication Required - Alfresco Search Services\",\"nginx.ingress.kubernetes.io/auth-type\":\"basic\",\"nginx.ingress.kubernetes.io/whitelist-source-range\":\"0.0.0.0/0\"} | nginx ingress annotations (see https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations) | . | ingress.basicAuth | string | nil | Default solr basic auth user/password: admin / admin You can create your own with htpasswd utilility &amp; encode it with base640. Example: echo -n \"$(htpasswd -nbm admin admin)\" | base64 | tr -d '\\n' basicAuth: YWRtaW46JGFwcjEkVVJqb29uS00kSEMuS1EwVkRScFpwSHB2a3JwTDd1Lg== | . | ingress.className | string | \"nginx\" |   | . | ingress.enabled | bool | false | Expose the solr admin console behind basic auth | . | ingress.existingSecretName | string | nil | An existing secret that contains an auth key with a value in the same format of ingress.basicAuth | . | ingress.hosts[0].paths[0].path | string | \"/solr\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | initContainer.image.pullPolicy | string | \"IfNotPresent\" |   | . | initContainer.image.repository | string | \"busybox\" |   | . | initContainer.image.tag | string | \"1.37\" |   | . | initContainer.resources.limits.memory | string | \"20Mi\" |   | . | initContainer.resources.requests.memory | string | \"5Mi\" |   | . | insightEngineImage.internalPort | string | nil | container’s port search service is listening on change if your custom image use a different port. | . | insightEngineImage.pullPolicy | string | \"IfNotPresent\" |   | . | insightEngineImage.repository | string | \"quay.io/alfresco/insight-engine\" |   | . | insightEngineImage.tag | string | \"2.0.15\" |   | . | livenessProbe.failureThreshold | int | 1 |   | . | livenessProbe.initialDelaySeconds | int | 130 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | nodeSelector | object | {} |   | . | persistence.accessModes[0] | string | \"ReadWriteOnce\" |   | . | persistence.baseSize | string | \"10Gi\" | Capacity of the PVC for persistency | . | persistence.enabled | bool | true | When disabled, data is lost when pod is terminated/rescheduled | . | persistence.existingClaim | string | nil | Provide a pre-existing PVC for persistency | . | persistence.search.data.mountPath | string | \"/opt/alfresco-search-services/data\" |   | . | persistence.search.data.subPath | string | \"alfresco-content-services/solr-data\" |   | . | persistence.storageClass | string | nil | Bind PVC based on storageClass (e.g. dynamic provisioning) | . | podSecurityContext.fsGroup | int | 33007 |   | . | podSecurityContext.runAsGroup | int | 33007 |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33007 |   | . | readinessProbe.initialDelaySeconds | int | 60 |   | . | readinessProbe.periodSeconds | int | 20 |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | repository.existingConfigMap.keys.host | string | \"SOLR_ALFRESCO_HOST\" | Key within the configmap holding the repository hostname | . | repository.existingConfigMap.keys.port | string | \"SOLR_ALFRESCO_PORT\" | Key within the configmap holding the repository port | . | repository.existingConfigMap.keys.securecomms | string | \"SOLR_ALFRESCO_SECURE_COMMS\" | Key within the configmap holding the repository security level | . | repository.existingConfigMap.name | string | nil | Name of a pre-existing configmap containing Alfresco repository URL | . | repository.existingSecret.keys.sharedSecret | string | \"SOLR_ALFRESCO_SECURECOMMS_SECRET\" | Key within the secret holding the repository shared secret | . | repository.existingSecret.name | string | nil | Alternatively, provide a pre-existing secret containing the shared secret used with repository when securecomms is secret | . | repository.host | string | nil | Alfresco repository hostname | . | repository.port | string | nil | Alfresco repository port | . | repository.securecomms | string | \"secret\" | Alfresco repository security level to use when tracking the repo (‘none’ or ‘secret’) | . | repository.sharedSecret | string | nil | Shared secret used with repository when securecomms is secret | . | resources.limits.cpu | string | \"4\" |   | . | resources.limits.memory | string | \"2000Mi\" |   | . | resources.requests.cpu | string | \"0.50\" |   | . | resources.requests.memory | string | \"1200Mi\" |   | . | searchServicesImage.internalPort | string | nil | container’s port search service is listening on change if your custom image use a different port. | . | searchServicesImage.pullPolicy | string | \"IfNotPresent\" |   | . | searchServicesImage.repository | string | \"quay.io/alfresco/search-services\" |   | . | searchServicesImage.tag | string | \"2.0.15\" |   | . | service.name | string | \"solr\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.automount | bool | true | Automatically mount a ServiceAccount’s API credentials? | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | tolerations | list | [] |   | . | type | string | \"search-services\" | set alfresco-insight-zeppelin.enabled=true As the Docker Image for Insight Engine is not publicly available the alfrescoRegistryPullSecrets has to be set More information can be found on https://github.com/Alfresco/acs-deployment/blob/master/docs/helm/registry-authentication.md | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-service/README.html#values",
    
    "relUrl": "/charts/alfresco-search-service/README.html#values"
  },"36": {
    "doc": "alfresco-sync-service",
    "title": "alfresco-sync-service",
    "content": ". Alfresco Sync Service . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-sync-service/README.html",
    
    "relUrl": "/charts/alfresco-sync-service/README.html"
  },"37": {
    "doc": "alfresco-sync-service",
    "title": "Source Code",
    "content": ". | https://github.com/Alfresco/acs-deployment | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-sync-service/README.html#source-code",
    
    "relUrl": "/charts/alfresco-sync-service/README.html#source-code"
  },"38": {
    "doc": "alfresco-sync-service",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | postgresql | 12.5.6 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-sync-service/README.html#requirements",
    
    "relUrl": "/charts/alfresco-sync-service/README.html#requirements"
  },"39": {
    "doc": "alfresco-sync-service",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-sync-service.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods on nodes with different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-sync-service.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods on nodes with different nodes | . | database.driver | string | \"org.postgresql.Driver\" | The JDBC Driver to connect to the DB. If different from the default make sure your container image ships it. | . | database.existingConfigMap.keys.driver | string | \"DATABASE_DRIVER\" | configmap key where to find the JDBC driver class to use. The configmap may leverage the alfresco-repository.db.cm named template to auto-generate it from the sole url parameter. | . | database.existingConfigMap.keys.url | string | \"DATABASE_URL\" | configmap key where to find the URL of the database | . | database.existingConfigMap.name | string | nil |   | . | database.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password | . | database.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username | . | database.existingSecret.name | string | nil | Name of a pre-existing secret containing database credentials | . | database.password | string | nil | JDBC password to use to connect to the DB | . | database.url | string | nil | JDBC url to connect to the external DB | . | database.username | string | nil | JDBC username to use to connect to the DB | . | environment.JAVA_OPTS | string | \"-Dsql.db.pool.initial=25 -Dsql.db.pool.max=75 -Dsync.metrics.reporter.graphite.enabled=false -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80\" |   | . | global | object | {\"alfrescoRegistryPullSecrets\":\"quay-registry-secret\",\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":0}}} | Global definition of Docker registry pull secret which can be overridden from parent ACS Helm chart(s) | . | hazelcast.service.port | int | 5701 |   | . | hazelcast.service.type | string | \"ClusterIP\" |   | . | image.internalPort | int | 9090 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/service-sync\" |   | . | image.tag | string | \"5.2.0\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/affinity” | string | \"cookie\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/rewrite-target” | string | \"/alfresco/$2\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-hash” | string | \"sha1\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/session-cookie-name” | string | \"sync_affinity_route\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/use-regex” | string | \"true\" |   | . | ingress.hosts[0].paths[0].path | string | \"/syncservice(/|$)(.*)\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"ImplementationSpecific\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.httpGet.path | string | \"/alfresco/healthcheck\" |   | . | livenessProbe.httpGet.port | string | \"serviceport\" |   | . | livenessProbe.initialDelaySeconds | int | 30 |   | . | livenessProbe.periodSeconds | int | 30 |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" | configmap key where to find the URL of the message broker | . | messageBroker.existingConfigMap.name | string | nil | Name of a pre-existing configmap containing message broker details | . | messageBroker.existingSecret.keys.password | string | \"BROKER_PASSWORD\" | Key within the secret holding the message broker password | . | messageBroker.existingSecret.keys.username | string | \"BROKER_USERNAME\" | Key within the secret holding the message broker username | . | messageBroker.existingSecret.name | string | nil | Name of a pre-existing secret containing message broker credentials | . | messageBroker.nameOverride | string | \"activemq\" | A name that will be used as a base to get broker connection details | . | messageBroker.password | string | nil | Credential to use to authenticate to the broker. | . | messageBroker.url | string | nil | A failover URI formatted string, see: https://activemq.apache.org/failover-transport-reference | . | messageBroker.username | string | nil | Username to authenticate as. | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.fsGroup | int | 1000 |   | . | podSecurityContext.runAsGroup | int | 1000 |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33020 |   | . | readinessProbe.failureThreshold | int | 12 |   | . | readinessProbe.httpGet.path | string | \"/alfresco/healthcheck\" |   | . | readinessProbe.httpGet.port | string | \"serviceport\" |   | . | readinessProbe.initialDelaySeconds | int | 20 |   | . | readinessProbe.periodSeconds | int | 10 |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | replicaCount | int | 1 |   | . | repository.existingConfigMap.keys.host | string | \"REPO_HOST\" | configmap key where to find the URL of the message broker | . | repository.existingConfigMap.keys.port | string | \"REPO_PORT\" |   | . | repository.existingConfigMap.keys.scheme | string | \"REPO_SCHEME\" |   | . | repository.existingConfigMap.name | string | nil | Name of a pre-existing configmap containing message broker details | . | repository.host | string | nil | ACS repository host | . | repository.port | string | nil | ACS repository port | . | repository.scheme | string | nil | ACS repository port | . | resources.limits.cpu | string | \"2\" |   | . | resources.limits.memory | string | \"2000Mi\" |   | . | resources.requests.cpu | string | \"0.5\" |   | . | resources.requests.memory | string | \"800Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"syncservice\" |   | . | service.type | string | \"NodePort\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"alfresco-sync\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | terminationGracePeriodSeconds | int | 60 |   | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-sync-service/README.html#values",
    
    "relUrl": "/charts/alfresco-sync-service/README.html#values"
  },"40": {
    "doc": "alfresco-connector-hxi",
    "title": "alfresco-connector-hxi",
    "content": ". A Helm chart for deploying Alfresco connector hxi services . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/README.html",
    
    "relUrl": "/charts/alfresco-connector-hxi/README.html"
  },"41": {
    "doc": "alfresco-connector-hxi",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | activemq | 3.6.1 | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | postgresql | 12.5.6 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/README.html#requirements",
    
    "relUrl": "/charts/alfresco-connector-hxi/README.html#requirements"
  },"42": {
    "doc": "alfresco-connector-hxi",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | ats.existingConfigMap.keys.sfsUrl | string | \"SFS_URL\" | Key within the configmap holding the URL of the alfresco shared filestore | . | ats.existingConfigMap.keys.transformUrl | string | \"ATS_URL\" | Key within the configmap holding the URL of the alfresco transform | . | ats.existingConfigMap.name | string | nil | Alternatively, provide ATS details via an existing configmap | . | ats.sfsUrl | string | nil | URL of the alfresco shared filestore | . | ats.transformUrl | string | nil | URL of the alfresco transform (trouter or tengine-aio) | . | bulkIngester.affinity | object | {} |   | . | bulkIngester.enabled | bool | true |   | . | bulkIngester.environment.ALFRESCO_BULK_INGEST_PUBLISHER_ENDPOINT | string | \"activemq:queue:bulk-ingester-events\" |   | . | bulkIngester.image.pullPolicy | string | \"IfNotPresent\" |   | . | bulkIngester.image.repository | string | \"quay.io/alfresco/alfresco-hxinsight-connector-bulk-ingester\" |   | . | bulkIngester.image.tag | string | \"1.0.1\" |   | . | bulkIngester.initContainers.waitForRepository.image.pullPolicy | string | \"IfNotPresent\" |   | . | bulkIngester.initContainers.waitForRepository.image.repository | string | \"curlimages/curl\" |   | . | bulkIngester.initContainers.waitForRepository.image.tag | string | \"8.11.0\" |   | . | bulkIngester.initContainers.waitForRepository.resources.limits.cpu | string | \"250m\" |   | . | bulkIngester.initContainers.waitForRepository.resources.limits.memory | string | \"20Mi\" |   | . | bulkIngester.resources.limits.cpu | string | \"2\" |   | . | bulkIngester.resources.limits.memory | string | \"512Mi\" |   | . | bulkIngester.resources.requests.cpu | string | \"0.5\" |   | . | bulkIngester.resources.requests.memory | string | \"128Mi\" |   | . | db.existingConfigMap.keys.url | string | \"DATABASE_URL\" | Key within the configmap holding the full JDBC url to connect to database service | . | db.existingConfigMap.name | string | nil | Alternatively, provide database connection details via an existing configmap | . | db.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password | . | db.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username | . | db.existingSecret.name | string | nil | Alternatively, provide database credentials via an existing secret | . | db.password | string | nil | The password required to access the service | . | db.url | string | nil | Provide the full JDBC url to connect to database service e.g.: jdbc:postgresql://hostname:5432/database | . | db.username | string | nil | The username required to access the service | . | fullnameOverride | string | \"\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | hxi.existingConfigMap.keys.hxAuthTokenUrl | string | \"HX_AUTH_TOKEN_URL\" |   | . | hxi.existingConfigMap.keys.hxInsightIngestionUrl | string | \"HX_INSIGHT_INGESTION_URL\" |   | . | hxi.existingConfigMap.keys.hxInsightPredictionsUrl | string | \"HX_INSIGHT_PREDICTIONS_URL\" |   | . | hxi.existingConfigMap.name | string | nil |   | . | hxi.existingSecret.keys.hxAppSourceId | string | \"HX_APP_SOURCE_ID\" |   | . | hxi.existingSecret.keys.hxClientId | string | \"HX_CLIENT_ID\" |   | . | hxi.existingSecret.keys.hxClientSecret | string | \"HX_CLIENT_SECRET\" |   | . | hxi.existingSecret.keys.hxEnvKey | string | \"HX_ENV_KEY\" |   | . | hxi.existingSecret.name | string | nil |   | . | hxi.hxAppSourceId | string | nil |   | . | hxi.hxAuthTokenUrl | string | nil |   | . | hxi.hxClientId | string | nil |   | . | hxi.hxClientSecret | string | nil |   | . | hxi.hxEnv | string | nil |   | . | hxi.hxEnvKey | string | nil |   | . | hxi.hxInsightIngestionUrl | string | nil |   | . | hxi.hxInsightPredictionsUrl | string | nil |   | . | imagePullSecrets | list | [] |   | . | liveIngester.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-hxi.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule the content pod on a different zone | . | liveIngester.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-hxi.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule the content pod on a different node | . | liveIngester.environment.ALFRESCO_BULKINGESTER_ENDPOINT | string | \"activemq:queue:bulk-ingester-events\" |   | . | liveIngester.environment.SERVER_PORT | int | 8080 |   | . | liveIngester.image.internalPort | int | 8080 |   | . | liveIngester.image.pullPolicy | string | \"IfNotPresent\" |   | . | liveIngester.image.repository | string | \"quay.io/alfresco/alfresco-hxinsight-connector-live-ingester\" |   | . | liveIngester.image.tag | string | \"1.0.1\" |   | . | liveIngester.livenessProbe.httpGet.path | string | \"/actuator/health/liveness\" |   | . | liveIngester.livenessProbe.httpGet.port | int | 8080 |   | . | liveIngester.livenessProbe.initialDelaySeconds | int | 30 |   | . | liveIngester.readinessProbe.httpGet.path | string | \"/actuator/health/readiness\" |   | . | liveIngester.readinessProbe.httpGet.port | int | 8080 |   | . | liveIngester.readinessProbe.initialDelaySeconds | int | 40 |   | . | liveIngester.replicaCount | int | 1 |   | . | liveIngester.resources.limits.cpu | string | \"2\" |   | . | liveIngester.resources.limits.memory | string | \"2048Mi\" |   | . | liveIngester.resources.requests.cpu | string | \"0.5\" |   | . | liveIngester.resources.requests.memory | string | \"256Mi\" |   | . | liveIngester.service.externalPort | int | 80 |   | . | liveIngester.service.name | string | \"hxi-live-ingester-service\" |   | . | liveIngester.service.type | string | \"ClusterIP\" |   | . | liveIngester.strategy.rollingUpdate.maxSurge | int | 1 |   | . | liveIngester.strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | messageBroker.existingConfigMap.keys.url | string | \"BROKER_URL\" | Key within the configmap holding the URL of the message broker | . | messageBroker.existingConfigMap.name | string | nil | Alternatively, provide message broker connection details via an existing configmap | . | messageBroker.existingSecret | object | {\"keys\":{\"password\":\"BROKER_PASSWORD\",\"username\":\"BROKER_USERNAME\"},\"name\":null} | Provide connection details alternatively via an existing secret that contains BROKER_URL, BROKER_USERNAME and BROKER_PASSWORD keys | . | messageBroker.password | string | nil | Broker password | . | messageBroker.url | string | nil | Broker URL formatted as per: https://activemq.apache.org/failover-transport-reference | . | messageBroker.username | string | nil | Broker username | . | nameOverride | string | \"\" |   | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podSecurityContext | object | {} |   | . | predictionApplier.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-hxi.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule the content pod on a different zone | . | predictionApplier.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-hxi.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ $.Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule the content pod on a different node | . | predictionApplier.enabled | bool | true |   | . | predictionApplier.environment.”HYLANDEXPERIENCE.INSIGHT.PREDICTIONS.BUFFERENDPOINT” | string | \"activemq:queue:predictions-buffer\" |   | . | predictionApplier.environment.”HYLANDEXPERIENCE.INSIGHT.PREDICTIONS.POLLPERIODMILLIS” | int | 300000 |   | . | predictionApplier.environment.SERVER_PORT | int | 8080 |   | . | predictionApplier.image.internalPort | int | 8080 |   | . | predictionApplier.image.pullPolicy | string | \"IfNotPresent\" |   | . | predictionApplier.image.repository | string | \"quay.io/alfresco/alfresco-hxinsight-connector-prediction-applier\" |   | . | predictionApplier.image.tag | string | \"1.0.1\" |   | . | predictionApplier.livenessProbe.httpGet.path | string | \"/actuator/health/liveness\" |   | . | predictionApplier.livenessProbe.httpGet.port | int | 8080 |   | . | predictionApplier.livenessProbe.initialDelaySeconds | int | 30 |   | . | predictionApplier.readinessProbe.httpGet.path | string | \"/actuator/health/readiness\" |   | . | predictionApplier.readinessProbe.httpGet.port | int | 8080 |   | . | predictionApplier.readinessProbe.initialDelaySeconds | int | 40 |   | . | predictionApplier.replicaCount | int | 1 |   | . | predictionApplier.resources.limits.cpu | string | \"2\" |   | . | predictionApplier.resources.limits.memory | string | \"2048Mi\" |   | . | predictionApplier.resources.requests.cpu | string | \"0.5\" |   | . | predictionApplier.resources.requests.memory | string | \"256Mi\" |   | . | predictionApplier.service.externalPort | int | 80 |   | . | predictionApplier.service.name | string | \"hxi-prediction-applier-service\" |   | . | predictionApplier.service.type | string | \"ClusterIP\" |   | . | predictionApplier.strategy.rollingUpdate.maxSurge | int | 1 |   | . | predictionApplier.strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | repository.authGrantType | string | nil |   | . | repository.authTokenUrl | string | nil |   | . | repository.authType | string | nil |   | . | repository.clientId | string | nil |   | . | repository.clientSecret | string | nil |   | . | repository.existingConfigMap.keys.authGrantType | string | \"REPOSITORY_AUTH_GRANT_TYPE\" |   | . | repository.existingConfigMap.keys.authTokenUrl | string | \"REPOSITORY_AUTH_TOKEN_URL\" |   | . | repository.existingConfigMap.keys.authType | string | \"REPOSITORY_AUTH_TYPE\" |   | . | repository.existingConfigMap.keys.url | string | \"REPOSITORY_URL\" | Key within the configmap holding the full url to connect to the alfresco repository | . | repository.existingConfigMap.keys.versionOverride | string | \"REPOSITORY_VERSION_OVERRIDE\" |   | . | repository.existingConfigMap.name | string | nil | Alternatively, provide repository connection details via an existing configmap | . | repository.existingSecret.keys.clientId | string | \"REPOSITORY_CLIENT_ID\" |   | . | repository.existingSecret.keys.clientSecret | string | \"REPOSITORY_CLIENT_SECRET\" |   | . | repository.existingSecret.keys.password | string | \"REPOSITORY_PASSWORD\" |   | . | repository.existingSecret.keys.username | string | \"REPOSITORY_USERNAME\" |   | . | repository.existingSecret.name | string | nil |   | . | repository.password | string | nil |   | . | repository.url | string | nil | URL of the Alfresco repository | . | repository.username | string | nil |   | . | repository.versionOverride | string | nil |   | . | securityContext | object | {} |   | . | serviceAccount.annotations | object | {} |   | . | serviceAccount.create | bool | true |   | . | serviceAccount.name | string | \"alfresco-connector-hxi-sa\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/README.html#values",
    
    "relUrl": "/charts/alfresco-connector-hxi/README.html#values"
  },"43": {
    "doc": "alfresco-adf-app",
    "title": "alfresco-adf-app",
    "content": ". A generic Alfresco Development Framework Helm chart for Kubernetes . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-adf-app/README.html",
    
    "relUrl": "/charts/alfresco-adf-app/README.html"
  },"44": {
    "doc": "alfresco-adf-app",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-adf-app/README.html#requirements",
    
    "relUrl": "/charts/alfresco-adf-app/README.html#requirements"
  },"45": {
    "doc": "alfresco-adf-app",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | object | {} |   | . | env | object | {} |   | . | fullnameOverride | string | \"\" |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" | If a private image registry a secret can be defined and passed to kubernetes, see: https://github.com/Alfresco/acs-deployment/blob/a924ad6670911f64f1bba680682d266dd4ea27fb/docs/helm/eks-deployment.md#docker-registry-secret | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"\" |   | . | image.tag | string | \"\" |   | . | imagePullSecrets | list | [] |   | . | ingress.annotations | object | {} |   | . | ingress.className | string | \"nginx\" |   | . | ingress.enabled | bool | true |   | . | ingress.hosts[0].host | string | \"chart-example.local\" |   | . | ingress.hosts[0].paths[0].path | string | \"/\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.failureThreshold | int | 3 |   | . | livenessProbe.httpGet.path | string | \"/\" |   | . | livenessProbe.httpGet.port | string | \"http\" |   | . | livenessProbe.initialDelaySeconds | int | 0 |   | . | livenessProbe.periodSeconds | int | 10 |   | . | livenessProbe.timeoutSeconds | int | 1 |   | . | nameOverride | string | \"\" |   | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.runAsGroup | int | 101 |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 101 | For compatibility with nginxinc/nginx-unprivileged used by adf apps | . | readinessProbe.failureThreshold | int | 3 |   | . | readinessProbe.httpGet.path | string | \"/\" |   | . | readinessProbe.httpGet.port | string | \"http\" |   | . | readinessProbe.initialDelaySeconds | int | 0 |   | . | readinessProbe.periodSeconds | int | 10 |   | . | readinessProbe.timeoutSeconds | int | 1 |   | . | replicaCount | int | 1 |   | . | resources.limits.cpu | string | \"100m\" |   | . | resources.limits.memory | string | \"128Mi\" |   | . | resources.requests.cpu | string | \"100m\" |   | . | resources.requests.memory | string | \"128Mi\" |   | . | securityContext | object | {} |   | . | service.port | int | 8080 |   | . | service.targetPort | string | \"http\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.automount | bool | true | Automatically mount a ServiceAccount’s API credentials? | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | tolerations | list | [] |   | . | volumeMounts | list | [] | Additional volumeMounts on the output Deployment definition | . | volumes | list | [] | Additional volumes on the output Deployment definition | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-adf-app/README.html#values",
    
    "relUrl": "/charts/alfresco-adf-app/README.html#values"
  },"46": {
    "doc": "alfresco-activiti-admin",
    "title": "alfresco-activiti-admin",
    "content": ". A Helm chart for Alfresco Activiti . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti-admin/README.html",
    
    "relUrl": "/charts/alfresco-activiti-admin/README.html"
  },"47": {
    "doc": "alfresco-activiti-admin",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . | oci://registry-1.docker.io/bitnamicharts | postgresql | 12.8.5 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti-admin/README.html#requirements",
    
    "relUrl": "/charts/alfresco-activiti-admin/README.html#requirements"
  },"48": {
    "doc": "alfresco-activiti-admin",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity | object | {} |   | . | database.driver | string | nil | JDBC driver Class | . | database.existingConfigMap.keys.driver | string | \"DATABASE_DRIVER\" | configmap key where to find the JDBC driver Class for admin app | . | database.existingConfigMap.keys.url | string | \"DATABASE_URL\" | configmap key where to find the URL of the database for admin app | . | database.existingConfigMap.name | string | nil |   | . | database.existingSecret.keys.password | string | \"DATABASE_PASSWORD\" | Key within the secret holding the database password for admin app | . | database.existingSecret.keys.username | string | \"DATABASE_USERNAME\" | Key within the secret holding the database username for admin app | . | database.existingSecret.name | string | nil | Name of a pre-existing secret containing database credentials for admin app | . | database.password | string | nil | JDBC password to use to connect to the DB for admin app | . | database.url | string | nil | JDBC url to connect to the external DB for admin app | . | database.username | string | nil | JDBC username to use to connect to the DB for admin app | . | envFromExistingConfigMap | string | nil | Name of a pre-existing configmap to load env vars from (overrides .environment values) | . | environment.ACTIVITI_ADMIN_REST_APP_HOST | string | \"http://localhost\" | activiti-app address | . | environment.ACTIVITI_ADMIN_REST_APP_PASSWORD | string | \"admin\" | activiti-app password | . | environment.ACTIVITI_ADMIN_REST_APP_PORT | string | \"80\" | activiti-app port | . | environment.ACTIVITI_ADMIN_REST_APP_USERNAME | string | \"admin@app.activiti.com\" | activiti-app username | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.internalPort | int | 8080 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-process-services-admin\" |   | . | image.tag | string | \"25.1.1\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/affinity” | string | \"cookie\" |   | . | ingress.annotations.”nginx.ingress.kubernetes.io/proxy-body-size” | string | \"5g\" |   | . | ingress.className | string | \"nginx\" | supported ingress class | . | ingress.enabled | bool | true | Toggle ingress for APS admin | . | ingress.hosts[0].paths[0].path | string | \"/activiti-admin\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.failureThreshold | int | 5 |   | . | livenessProbe.initialDelaySeconds | int | 25 |   | . | livenessProbe.path | string | \"/activiti-admin/actuator/health/liveness\" | For APS prior to 24.3.0, path must be set to /activiti-admin/ | . | livenessProbe.periodSeconds | int | 10 |   | . | livenessProbe.timeoutSeconds | int | 5 |   | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.runAsUser | int | 33007 |   | . | readinessProbe.failureThreshold | int | 5 |   | . | readinessProbe.initialDelaySeconds | int | 25 |   | . | readinessProbe.path | string | \"/activiti-admin/actuator/health/readiness\" | For APS prior to 24.3.0, path must be set to /activiti-admin/ | . | readinessProbe.periodSeconds | int | 10 |   | . | readinessProbe.timeoutSeconds | int | 5 |   | . | resources.limits.cpu | string | \"1000m\" |   | . | resources.limits.memory | string | \"2Gi\" |   | . | resources.requests.cpu | string | \"250m\" |   | . | resources.requests.memory | string | \"512Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"activiti-admin\" |   | . | service.type | string | \"ClusterIP\" |   | . | tags.ci | bool | false | A chart tag used for Hyland’s CI purpose. Do not set it to true. | . | tolerations | list | [] |   | . | volumeMounts | list | [] |   | . | volumes | list | [] |   | . | workaround.ACTIVITI-5113 | bool | false | Enable workaround for ACTIVITI-5113 required for versions before 24.2.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti-admin/README.html#values",
    
    "relUrl": "/charts/alfresco-activiti-admin/README.html#values"
  },"49": {
    "doc": "alfresco-common",
    "title": "alfresco-common",
    "content": ". A helper subchart to avoid duplication in alfresco charts and set common external dependencies . Please refer to the documentation for information on the Helm charts and deployment instructions. ",
    "url": "/alfresco-helm-charts/charts/alfresco-common/README.html",
    
    "relUrl": "/charts/alfresco-common/README.html"
  },"50": {
    "doc": "alfresco-connector-ms365",
    "title": "alfresco-connector-ms365",
    "content": ". A Helm chart for deploying Alfresco connector ms365 service . Checkout alfresco-content-services chart’s doc for an example of how to leverage this chart from an umbrella chart. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-ms365/README.html",
    
    "relUrl": "/charts/alfresco-connector-ms365/README.html"
  },"51": {
    "doc": "alfresco-connector-ms365",
    "title": "Requirements",
    "content": "| Repository | Name | Version | . | https://alfresco.github.io/alfresco-helm-charts/ | alfresco-common | 4.0.0 | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-ms365/README.html#requirements",
    
    "relUrl": "/charts/alfresco-connector-ms365/README.html#requirements"
  },"52": {
    "doc": "alfresco-connector-ms365",
    "title": "Values",
    "content": "| Key | Type | Default | Description | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-ms365.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]},{\"key\":\"app.kubernetes.io/component\",\"operator\":\"In\",\"values\":[\"{{ $.Chart.Name }}\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10} | Prefer to schedule pods in different zones | . | affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[1] | object | {\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app.kubernetes.io/name\",\"operator\":\"In\",\"values\":[\"{{ template \\\"alfresco-connector-ms365.name\\\" $ }}\"]},{\"key\":\"app.kubernetes.io/instance\",\"operator\":\"In\",\"values\":[\"{{ .Release.Name }}\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5} | Prefer to schedule pods in different nodes | . | environment | object | {} |   | . | global.alfrescoRegistryPullSecrets | string | \"quay-registry-secret\" |   | . | image.internalPort | int | 9095 |   | . | image.pullPolicy | string | \"IfNotPresent\" |   | . | image.repository | string | \"quay.io/alfresco/alfresco-ooi-service\" |   | . | image.tag | string | \"2.0.6\" |   | . | ingress.className | string | \"nginx\" |   | . | ingress.extraAnnotations | object | {} |   | . | ingress.hosts[0].paths[0].path | string | \"/ooi-service\" |   | . | ingress.hosts[0].paths[0].pathType | string | \"Prefix\" |   | . | ingress.tls | list | [] |   | . | livenessProbe.failureThreshold | int | 1 |   | . | livenessProbe.initialDelaySeconds | int | 10 |   | . | livenessProbe.periodSeconds | int | 20 |   | . | livenessProbe.tcpSocket.port | string | \"service-port\" |   | . | livenessProbe.timeoutSeconds | int | 10 |   | . | nodeSelector | object | {} |   | . | podAnnotations | object | {} |   | . | podLabels | object | {} |   | . | podSecurityContext.runAsNonRoot | bool | true |   | . | podSecurityContext.runAsUser | int | 33006 |   | . | readinessProbe.initialDelaySeconds | int | 20 |   | . | readinessProbe.periodSeconds | int | 60 |   | . | readinessProbe.tcpSocket.port | string | \"service-port\" |   | . | readinessProbe.timeoutSeconds | int | 10 |   | . | replicaCount | int | 2 |   | . | repository.existingConfigMap.keys.host | string | \"REPO_HOST\" | name of the key in the configMap where to find the repository service host | . | repository.existingConfigMap.keys.port | string | \"REPO_PORT\" | name of the key in the configMap where to find the repository service port | . | repository.existingConfigMap.name | string | nil | a pre-existing configmap which provides expected configuration for ms365 | . | repository.host | string | \"acs-alfresco-cs-repository\" | ACS repository host | . | repository.port | int | 80 | ACS repository port | . | resources.limits.cpu | string | \"2\" |   | . | resources.limits.memory | string | \"1000Mi\" |   | . | resources.requests.cpu | string | \"0.25\" |   | . | resources.requests.memory | string | \"1000Mi\" |   | . | service.externalPort | int | 80 |   | . | service.name | string | \"ms365-service\" |   | . | service.type | string | \"ClusterIP\" |   | . | serviceAccount.annotations | object | {} | Annotations to add to the service account | . | serviceAccount.create | bool | true | Specifies whether a service account should be created | . | serviceAccount.name | string | \"ms365-sa\" | The name of the service account to use. If not set and create is true, a name is generated using the fullname template | . | strategy.rollingUpdate.maxSurge | int | 1 |   | . | strategy.rollingUpdate.maxUnavailable | int | 0 |   | . | tolerations | list | [] |   | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-ms365/README.html#values",
    
    "relUrl": "/charts/alfresco-connector-ms365/README.html#values"
  },"53": {
    "doc": "Knowledge Retrieval",
    "title": "Knowledge Retrieval",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/guides/alfresco-connector-hxi.html",
    
    "relUrl": "/docs/guides/alfresco-connector-hxi.html"
  },"54": {
    "doc": "Process Services",
    "title": "Process Services",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/guides/alfresco-process.html",
    
    "relUrl": "/docs/guides/alfresco-process.html"
  },"55": {
    "doc": "Repository",
    "title": "Repository",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/guides/alfresco-repository.html",
    
    "relUrl": "/docs/guides/alfresco-repository.html"
  },"56": {
    "doc": "Alfresco Search Enterprise",
    "title": "Alfresco Search Enterprise",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/guides/alfresco-search-enterprise.html",
    
    "relUrl": "/docs/guides/alfresco-search-enterprise.html"
  },"57": {
    "doc": "Alfresco Transform Service",
    "title": "Alfresco Transform Service",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/guides/alfresco-transform-service.html",
    
    "relUrl": "/docs/guides/alfresco-transform-service.html"
  },"58": {
    "doc": "Autoscaling",
    "title": "Alfresco Transform Service auto scaling",
    "content": "This document describes auto scaling principles implemented in this Helm chart. This document do not explain how to setup Kubernetes worker nodes auto-scaling. That is a completely different topic which can be addressed in different ways and is up to the Kubernetes administrator. ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/docs/autoscaling.html#alfresco-transform-service-auto-scaling",
    
    "relUrl": "/charts/alfresco-transform-service/docs/autoscaling.html#alfresco-transform-service-auto-scaling"
  },"59": {
    "doc": "Autoscaling",
    "title": "Horizontal Pod Auto scaling",
    "content": "For general concepts about HPA please refer to official Kubernetes documentation. Tengine pods auto scaling is disabled by default. If you want to enable it you need to use the additional value: . tengine: autoscaling: enabled: true . Where tengine is one of imagemagick, libreoffice, transformmisc, tika or pdfrenderer. The default configuration implemented in this chart aims at being able to cope with peak load or spare resources on low level of utilization while also minimizing the number of scaling events because changing the cluster topology means additional computation. Default behaviour . Without any further configuration scaling would happen as follow: . | Cluster would spin up new pods every minute if the current average pods’ load remains above 75% CPU usage on average during 30 seconds. | Cluster would spin up no more than 2 pods or 50% more pods of the existing replicas (whichever is bigger) per minute. | There would never be more than 3 replicas in the Replicaset | There would never be less than 1 replicas in the Replicaset | Cluster would remove one pod at most if the CPU load get consistently below 75% on average for 5 minutes. | Cluster would kill pod only one after the other within a minute. | . CPU utilization/load is calculated with regards to the CPU resource request setting (.resources.requests.cpu) which is now set to 1 CPU by default. Customizing auto scaling . The values and behaviour exposed above are defaults we think are sensible to start with. Of course they will not fit every single deployment/installation of Alfresco on Kubernetes. Below are ways to tweak the auto scaling behaviour for your own setup. Settings the CPU resources correctly . CPU Resources request is the basis of calculation for the cluster to trigger scaling events. It is then very important to make sure it is set appropriately before enabling auto scaling. Imagine you have a production Kubernetes cluster with large worker nodes (say 3 * 32 CPU nodes). Having CPU requests set to 1 would most likely make the cluster spin up new pods very quickly. Instead it would be better to ensure your tengine pods have a sensible .resources.requests.cpu value set to say 4. Also you should note that the very same .resources.requests.cpu value is used by the Kubernetes scheduler, so setting it too high is not a good idea either. It should be set to a value which will allow pods to be scheduled on worker nodes alongside other pods. default .resources.limits.cpu is set to 4 CPU so you will also want to increase this value to something like 12. Just by setting a sensible .resources.requests.cpu the auto scaling behaviour would already make much more sense given the worker nodes’ size. Configuring the auto scaling behaviour . The autoscaling.* values below can be fined tuned. There a few things to take int account when changing those as explained: . | .minReplicas: This parameter is used to limit the lowest number of replicas | .maxReplicas: This parameter is used to limit the highest number of replicas | .behavior.scaleUp.stabilizationWindowSeconds: This parameter is used to avoid flapping replicasets. A very short peak load is not worth a scale up. So you surely want to avoid scaling without making sure the load has increased consistently and scale up needs to happen. That parameter tells for how long the load should be over target before the HPA controller decides to increase the number of replicas. The shorter this value, the more likely you are to spin up pods for short peak workload, so the pod could even be ready after the load is actually back to normal. Setting this too low when CPU resources requests is set to 1 is counter productive as it’s pretty easy to make 1 CPU busy. | .behavior.scaleDown.stabilizationWindowSeconds: This parameter is used in the same manner as for scale up events. One notable difference though is that scaling down has an immediate effect on the way the application handles the workload while scaling up is more expensive as pods need to startup before it can actually start handling requests. For that reason we think one should always be more cautious when brining the number of replica down. You probably want to avoid taking pods down too quickly if your workload is not very consistent. | `.behavior.scaleUp.policies[]: . | .periodSeconds: The faster an individual tengine pod is to startup (Tomcat complete startup) the lower this parameter can be. 60s appeared a good value for startup times around 90s. The lower this parameter the faster new pods can be spun up and the faster peak load can be handled. | .type &amp; value: For exact details on setting this part of the auto scaler policy check the kubernetes doc. Policies let you define the way you want to act upon scaling events. For scale up events, if you know your load peak are steep (but consistent) then you will want to scale the replicaset by more pods than if you load is growing more slowly. | . | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/docs/autoscaling.html#horizontal-pod-auto-scaling",
    
    "relUrl": "/charts/alfresco-transform-service/docs/autoscaling.html#horizontal-pod-auto-scaling"
  },"60": {
    "doc": "Autoscaling",
    "title": "Autoscaling",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-transform-service/docs/autoscaling.html",
    
    "relUrl": "/charts/alfresco-transform-service/docs/autoscaling.html"
  },"61": {
    "doc": "Autoscaling",
    "title": "Alfresco repository auto scaling",
    "content": "This document describes auto scaling principles implemented in this Helm chart. This document do not explain how to setup Kubernetes worker nodes auto-scaling. That is a completely different topic which can be addressed in different ways and is up to the Kubernetes administrator. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/autoscaling.html#alfresco-repository-auto-scaling",
    
    "relUrl": "/charts/alfresco-repository/docs/autoscaling.html#alfresco-repository-auto-scaling"
  },"62": {
    "doc": "Autoscaling",
    "title": "Horizontal Pod Auto scaling",
    "content": "For general concepts about HPA please refer to official Kubernetes documentation. Repository pods auto scaling is disabled by default. If you want to enable it you need to use the additional value: . autoscaling: enabled: true . The default configuration implemented in this chart aims at being able to cope with peak load or spare resources on low level of utilization while also minimizing the number of scaling events because changing the cluster topology means additional computation. Default behaviour: . Without any further configuration scaling would happen as follow: . | Cluster would spin up new pods every minute if the current average pods’ load is above 75% CPU usage during 30 seconds. | Cluster would spin up no more than 2 pods or 50% more pods of the existing replicas (whichever is bigger) per minute. | There would never be more than 3 replicas in the Replicaset | There would never be less than 1 replicas in the Replicaset | Cluster would remove one pod at most if the CPU load get consistently below 75% for 5 minutes. | Cluster would kill pod only one after the other within a minute. | . CPU utilization/load is calculated with regards to the CPU resource request setting (.resources.requests.cpu) which is now set to 1 CPU by default. Customizing auto scaling . The values and behaviour exposed above are defaults we think are sensible to start with. Of course they will not fit every single deployment/installation of Alfresco on Kubernetes. Below are ways to tweak the auto scaling behaviour for your own setup. Settings the CPU resources correctly. CPU Resources request is the basis of calculation for the cluster to trigger scaling events. It is then very important to make sure it is set appropriately before enabling auto scaling. Imagine you have a production Kubernetes cluster with large worker nodes (say 3 * 32 CPU nodes). Having CPU requests set to 2 would most likely make the cluster spin up new pods very quickly. Instead it would be better to ensure your repository pods have a sensible .resources.requests.cpu value set to say 8. Also you should note that the very same .resources.requests.cpu value is used by the Kubernetes scheduler, so setting it too high is not a good idea either. It should be set to a value which will allow pods to be scheduled on worker nodes alongside other pods. default .resources.limits.cpu is set to 4 CPU so you will also want to increase this value to something like 12. Just by setting a sensible .resources.requests.cpu the auto scaling behaviour would already make much more sense given the worker nodes’ size. Configuring the auto scaling behaviour . The autoscaling.* values below can be fined tuned. There a few things to take into account when changing those as explained: . | .minReplicas: This parameter is used to limit the lowest number of replicas | .maxReplicas: This parameter is used to limit the highest number of replicas the more member the Hazelcast cluster has, the more chatty the cluster is. Keeping the cluster below 6 to 8 nodes seems a good target. | .behavior.scaleUp.stabilizationWindowSeconds: This parameter is used to avoid flapping replicasets. A very short peak load is not worth a scale up. So you surely want to avoid scaling without making sure the load has increased consistently and scale up needs to happen. That parameter tells for how long the load should be over target before the HPA controller decides to increase the number of replicas. The shorter this value, the more likely you are to spin up pods for short peak workload, so the pod could even be ready after the load is actually back to normal. Setting this too low when CPU resources requests is set to 1 is counter productive as it’s pretty easy to make 1 CPU busy. | .behavior.scaleDown.stabilizationWindowSeconds: This parameter is used in the same manner as for scale up events. One notable difference though is that scaling down has an immediate effect on the way the application handles the workload while scaling up is more expensive as pods need to startup before it can actually start handling requests. For that reason we think one should always be more cautious when brining the number of replica down. You probably want to avoid taking pods down too quickly if your workload is not very consistent. | `.behavior.scaleUp.policies[]: . | .periodSeconds: The faster an individual repo pod is to startup (Tomcat complete startup) the lower this parameter can be. 60s appeared a good value for startup times around 90s. The lower this parameter the faster new pods can be spun up and the faster peak load can be handled. | .type &amp; value: For exact details on setting this part of the auto scaler policy check the kubernetes doc. Policies let you define the way you want to act upon scaling events. For scale up events, if you know your load peak are steep (but consistent) then you will want to scale the replicaset by more pods than if you load is growing more slowly. | . | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/autoscaling.html#horizontal-pod-auto-scaling",
    
    "relUrl": "/charts/alfresco-repository/docs/autoscaling.html#horizontal-pod-auto-scaling"
  },"63": {
    "doc": "Autoscaling",
    "title": "Autoscaling",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/autoscaling.html",
    
    "relUrl": "/charts/alfresco-repository/docs/autoscaling.html"
  },"64": {
    "doc": "Build your own charts",
    "title": "Building your Content platform architecture with Alfresco charts",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/build-your-own-charts.html#building-your-content-platform-architecture-with-alfresco-charts",
    
    "relUrl": "/docs/build-your-own-charts.html#building-your-content-platform-architecture-with-alfresco-charts"
  },"65": {
    "doc": "Build your own charts",
    "title": "The alfresco-common library chart",
    "content": "Alfresco charts depend on a common library chart called alfresco-common. This chart provides a set of named templates one can use in order to build his own content platform chart. Named templates are reusable functions that can only return strings and always take a single argument, which eventually can be an object. For example the URL helper file provides functions to extract various elements from a given URL. For example: . | {{ template \"alfresco-common.url.scheme\" \"https://hub.alfresco.com/\" }} will return “https” | {{ template \"alfresco-common.url.port\" \"https://hub.alfresco.com/\" }} will return “443” | . Check out the dedicated Chart documentation to get a more comprehensive list of named templates the chart offers. ",
    "url": "/alfresco-helm-charts/docs/build-your-own-charts.html#the-alfresco-common-library-chart",
    
    "relUrl": "/docs/build-your-own-charts.html#the-alfresco-common-library-chart"
  },"66": {
    "doc": "Build your own charts",
    "title": "Alfresco components charts",
    "content": "The individual Alfresco components’ chart are meant to be configurable and reusable. They do not provide a working system on their own and need to be either used from an “umbrella chart” or be given additional details about other components they interact with in order to actually deliver the service they are meant to deliver. For example the alfresco-repository chart needs to have a database to initialize its content repository. This document explains what are the options you can leverage to “pipe” an Alfresco chart with another or with an external service. Understanding the Alfresco Content platform . Before you begin, make sure you do understand the Alfresco Content platform and its components so you know exactly what you need or do not need. ⚠️TODO: create chart diagram showing dependencies and level of dependencies . Creating your Alfresco platform . There are numerous ways to create your own Alfresco deployment and the component charts hosted in this repository can be used as building blocks for this purpose. Depending on preferences you may want to use Terraform, Kustomize or simply wrap the component charts into an “umbrella chart”. Here we’ll focus on the later option but the same configuration principles apply to other methods. In the example below we’ll go through the process of integrating an ACS content platform made of: . | Alfresco content repository | A database that hosted outside of the kubernetes cluster | . Below example also present using an “umbrella” Helm chart but most of the same approach is applicable to other deployment method as explained above. Declaring chart as dependency . Helm provides a mechanism to declare dependencies and re-use existing charts. We’ll start by initializing a chart and declare the dependency to the alfresco-repository chart. helm create myecmplatform &amp;&amp; cd $_ . Edit the Chart.yaml to give the chart a sensible description, a version and optionally specify the version of your content platform. Then declare the dependency as shown below: . dependencies: - name: alfresco-repository version: 0.1.0 repository: https://alfresco.github.io/alfresco-helm-charts/ alias: repo . In the example above we use repo as an alias so any value in our chart that lives under the $.repo YAML path will actually be passed to the alfresco-repository chart. In other words, values documented for the alfresco-repository chart such as replicaCount will be used from your chart as repo.replicaCount. Configuring the chart . Now we need to let the repository where it can find its database. When it comes to configuring a chart so it can reach another component of the platform, the Alfresco component charts lets you do that in 2 different ways: . | Using regular values | Using kubernetes config resources (configMap or secret) | . Configuring database using values . First thing to do is to check the chart values documentation. There, we can see the database configuration can be done using the configuration.db element in our values.yaml file as shown below: . repo: configuration: db: url: jdbc:postgresql//db.ecm.infra.local/alfresco username: ecmdaouser password: ecmdaopass . Configuring database using kubernetes resources . When using kubernetes resources we will want to differentiate configuration details which are sensitive and which are not. The former will be stored in configMap, while the later would use secret. That means here we’ll use a configMap to set store the database URL while credentials would live in a secret. That concretely translate into the following kubernetes resources: . apiVersion: v1 kind: ConfigMap metadata: labels: app.kubernetes.io/instance: myEcmReleaseName app.kubernetes.io/name: Alfresco-content-platform app.kubernetes.io/version: 1.0.0 name: ecm-database-location namespace: myecm data: MY_ECM_DB_URL: jdbc:postgresql://db.ecm.infra.local/alfresco MY_ECM_DB_DRIVER: org.postgresql.Driver . apiVersion: v1 kind: Secret metadata: labels: app.kubernetes.io/instance: myEcmReleaseName app.kubernetes.io/name: Alfresco-content-platform app.kubernetes.io/version: 1.0.0 name: ecm-database-credentials namespace: myecm data: MY_ECM_DB_USER: c2NvdHQ= MY_ECM_DB_PASS: dGlnZXI= . For example, if you’re creating this ConfigMap using a wrapping Helm chart, you can reuse a templating function provided by the alfresco-repository chart alfresco-repository.db.cm . Now we need to let the alfresco-repository chart where to find this: . repo: configuration: db: existingConfigMap: name: ecm-database-location keys: url: MY_ECM_DB_URL driver: MY_ECM_DB_DRIVER existingSecret: name: ecm-database-credentials keys: username: MY_ECM_DB_USER password: MY_ECM_DB_PASS . If you used the templating function mentioned above and provided by the subchart the keys would be different than the ones mentioned in the example above. Actually the function would render teh default keys so it’s not needed to set them. ",
    "url": "/alfresco-helm-charts/docs/build-your-own-charts.html#alfresco-components-charts",
    
    "relUrl": "/docs/build-your-own-charts.html#alfresco-components-charts"
  },"67": {
    "doc": "Build your own charts",
    "title": "Build your own charts",
    "content": " ",
    "url": "/alfresco-helm-charts/docs/build-your-own-charts.html",
    
    "relUrl": "/docs/build-your-own-charts.html"
  },"68": {
    "doc": "Database configuration",
    "title": "Alfresco Process Service database configuration",
    "content": "Alfresco Process Service uses a relational database to store data. It is not possible to use the same database for both applications. Though, both databases can be hosted on the same database server. ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/databases-configuration.html#alfresco-process-service-database-configuration",
    
    "relUrl": "/charts/alfresco-activiti/docs/databases-configuration.html#alfresco-process-service-database-configuration"
  },"69": {
    "doc": "Database configuration",
    "title": "Configuring the APS database",
    "content": "This charts uses generic configuration means reused in all our charts. You should start reading the getting-started guide. Using values . The most straightforward way to configure the APS database is to use the Helm values file. The following example shows how to configure the APS database: . database: url: jdbc:postgresql://postgresql:5432/activiti username: alfresco password: alfresco . Using a ConfigMap &amp; Secret . Another and more production-ready way to configure the APS database is to use configmaps and secrets from an umbrella chart. This chart depends on the alfresco-common library chart, which provides a named template to ease creation of the database configuration. Below is an example which assumes the alfresco-activiti chart is set as a dependency in the umbrella chart and values are configured as follows: . # apsdb could be anything else, it is just a name apsdb: url: jdbc:mysql://mysql:3306/activiti alfresco-activiti: database: existingConfigMap: name: my-database-config . Then create a ConfigMap template with the following content: . apiVersion: v1 kind: ConfigMap metadata: name: my-database-config data: {{ template \"alfresco-activiti.db.cm\" .Values.apsdb }} . If you chose to not use the “alfresco-activiti.db.cm” helper template, you need to make sure you also provide the DATABASE_DRIVER key in the configmap. The helper will try autodetect which class to use based on the URL provided. If you want to use a custom driver class, you can provide it in the apsdb.driver value. For the secret there is no helper and you need to provide one secret which contains 2 data keys: . | DATABASE_USERNAME | DATABASE_PASSWORD | . apiVersion: v1 kind: Secret metadata: name: my-database-secret type: Opaque data: DATABASE_USERNAME: {{ .Values.apsdb.username | b64enc | quote }} DATABASE_PASSWORD: {{ .Values.apsdb.password | b64enc | quote }} . You may want to reuse a secret which is already created in your cluster but has different keys. In this case you would need to configure the alfresco-activiti chart as follows: . alfresco-activiti: database: existingSecret: name: my-database-secret keys: username: MY_DATABASE_USERNAME password: MY_DATABASE_PASSWORD . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/databases-configuration.html#configuring-the-aps-database",
    
    "relUrl": "/charts/alfresco-activiti/docs/databases-configuration.html#configuring-the-aps-database"
  },"70": {
    "doc": "Database configuration",
    "title": "Database configuration",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/databases-configuration.html",
    
    "relUrl": "/charts/alfresco-activiti/docs/databases-configuration.html"
  },"71": {
    "doc": "Index configuration",
    "title": "Alfresco Process Services search index configuration",
    "content": "Alfresco Process Services can use an Elasticsearch index. This document provides information on how to configure the search index in Alfresco Process Services. ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/elasticsearch-configuration.html#alfresco-process-services-search-index-configuration",
    
    "relUrl": "/charts/alfresco-activiti/docs/elasticsearch-configuration.html#alfresco-process-services-search-index-configuration"
  },"72": {
    "doc": "Index configuration",
    "title": "Elasticsearch configuration",
    "content": "It is quite common to tie Alfresco Process Services to an Elasticsearch index which lives outside of the Kubernetes cluster. For example your index might be provided by a managed Elasticsearch service such as AWS OpenSearch. APS for now only support ElasticSearch 7.x . In order to connect to an external Elasticsearch index, you need to configure the following properties in the values.yaml file: . environment: ACTIVITI_ES_REST_CLIENT_ADDRESS: vpc-id.region.es.amazonaws.com ACTIVITI_ES_REST_CLIENT_PORT: 443 ACTIVITI_ES_REST_CLIENT_SCHEMA: https ACTIVITI_ES_REST_CLIENT_AUTH_ENABLED: true ACTIVITI_ES_REST_CLIENT_USERNAME: admin ACTIVITI_ES_REST_CLIENT_PASSWORD: esadmin . If you’re using an internal PKI, you will need to provide a keystore containing the certificate chain for the Elasticsearch server as a Kubernetes secret which must contain the data key truststore.p12. environment: ... ACTIVITI_ES_REST_CLIENT_KEYSTORE: /path/to/keystore/truststore.p12 ACTIVITI_ES_REST_CLIENT_KEYSTORE_TYPE: PKCS12 ACTIVITI_ES_REST_CLIENT_KEYSTORE_PASSWORD: somesecretpass volumes: - name: truststore secret: secretName: internal-truststore volumeMounts: - name: truststore readOnly: true mountPath: /path/to/keystore . ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/elasticsearch-configuration.html#elasticsearch-configuration",
    
    "relUrl": "/charts/alfresco-activiti/docs/elasticsearch-configuration.html#elasticsearch-configuration"
  },"73": {
    "doc": "Index configuration",
    "title": "Index configuration",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-activiti/docs/elasticsearch-configuration.html",
    
    "relUrl": "/charts/alfresco-activiti/docs/elasticsearch-configuration.html"
  },"74": {
    "doc": "Email features",
    "title": "Configuring email related features",
    "content": "Alfresco repository can interact with users through emails in different ways. Below we describe how to enable and configure the 3 main email features Alfresco offers: . | Sending emails | Accepting incoming email | IMAP interface to the repository | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/email.html#configuring-email-related-features",
    
    "relUrl": "/charts/alfresco-repository/docs/email.html#configuring-email-related-features"
  },"75": {
    "doc": "Email features",
    "title": "Sending emails",
    "content": "To enable Alfresco to send emails, it needs to communicate with a mail relay that administrators must configure. This mail relay is considered an integral part of the required architecture, and administrators can configure it using standard Alfresco properties. There are 2 ways to pass properties to the repository: . | Using configuration.repository.existingConfigMap | Using environment.CATALINA_OPTS env var. | . Using a configmap . Passing properties through a configmap is as simple as setting it in the alfresco-global.properties file. Start by creating a file called alfresco-global.properties as a regular properties file: . mail.host=mysmtp.infra.local mail.port=587 mail.username=alfresco mail.from.default=alfresco@domain.tld mail.smtp.auth=true mail.smtp.starttls.enable=true . Note: Although possible, we do not set the authentication password is not set in the configmap. Instead we will create a secret for it. We then create a configmap from the file with the mail properties (and possibly other properties): . kubectl create configmap repo-config \\ --from-file=alfresco-global.properties . Using a env vars . Passing properties through the CATALINA_OPTS environment variable can be done as shown below: . environment: CATALINA_OPTS: &gt;- -Dmail.host=mysmtp.infra.local -Dmail.port=587 -Dmail.username=alfresco -Dmail.from.default=alfresco@domain.tld -Dmail.smtp.auth=true -Dmail.smtp.starttls.enable=true . Passing credentials . Regardless of whether you choose to pass properties using a configmap or directly values, you should avoid passing credentials in the same way. To securely pass credentials we will create a secret so the Alfresco repository can authenticate to the mail relay: . kubectl create secret generic mail-secret \\ --from-literal \"MAIL_PASSWORe=mysupersecret\" . Now when installing the chart you can use the values below: . configuration: repository: existingConfigMap: repo-config existingSecrets: - name: repository-secrets key: license.lic purpose: acs-license - name: mail-secret key: MAIL_PASSWORD purpose: property:mail.password . Enabling TLS/SSL . If you need to negotiate TLS/SSL session with the mail relay and your mail relay uses a certificate that’s not from a known CA, you will need to import a truststore containing either the server certificate itself or its issuing CA. Checkout the keystore doc for more details import a truststore or a keystore works the same way. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/email.html#sending-emails",
    
    "relUrl": "/charts/alfresco-repository/docs/email.html#sending-emails"
  },"76": {
    "doc": "Email features",
    "title": "Accepting incoming email",
    "content": "Enabling Alfresco Inbound SMTP capabilities allow content to be fed into Alfresco repository using email and SMTP protocol. It is HIGHLY recommended to not expose Alfresco SMTP server directly to the outside world and instead have an SMTP proxy to implement required security measures. configuration: smtp: enabled: true port: 1465 service: annotations: service.beta.kubernetes.io/load-balancer-source-ranges: 10.0.0.0/24 service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-xxxx, subnet-yyyy service.beta.kubernetes.io/aws-load-balancer-ssl-cert=arn:aws:acm:region:account:certificate/certificate_ID environment: CATALINA_OPTS: &gt;- -Demail.inbound.unknownUser=anonymous -Demail.server.domain=myecm.domain.tld -Demail.server.allowed.senders=ecm-ingestor@myecm.domain.tld -Demail.server.blocked.senders=.* -Demail.server.auth.enabled=true . Here we configure an SMTPs service to listen on port 1465 through an AWS loadbalancer and accept emails from a single sender. This loadbalancer will be responsible for doing the SSL off-load and further traffic will be cleartext. This is suitable in most cases as - as said earlier - your SMTP server should never be exposed directly on internet and have an SMTP proxy in front of it. In case you really need to terminate the SSL session on the Alfresco repo see the keystore doc . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/email.html#accepting-incoming-email",
    
    "relUrl": "/charts/alfresco-repository/docs/email.html#accepting-incoming-email"
  },"77": {
    "doc": "Email features",
    "title": "Enabling IMAP",
    "content": "Similarly to SMTP inbound, it is possible to enable IMAP interface to the repository using the configuration below: . To get broader view on the available properties to configure IMAP please refer to the IMAP documentation . configuration: imap: enabled: true port: 1145 service: annotations: service.beta.kubernetes.io/load-balancer-source-ranges: 10.0.0.0/24 service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp environment: CATALINA_OPTS: &gt;- -Dimap.server.attachments.extraction.enabled=false . As usual, in order to configure IMAPs or IMAP/TLS refer to the keystore documentation. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/email.html#enabling-imap",
    
    "relUrl": "/charts/alfresco-repository/docs/email.html#enabling-imap"
  },"78": {
    "doc": "Email features",
    "title": "Email features",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/email.html",
    
    "relUrl": "/charts/alfresco-repository/docs/email.html"
  },"79": {
    "doc": "Enterprise license",
    "title": "Deploy Alfresco repository with enterprise license",
    "content": "Alfresco content repository Docker images come with an embedded license which last only 2 days. If you’ve built a custom image, it may have a one year license but in order to change it you would need to build a new image. You can also configure this chart so the license is instead read from a kubernetes secret so that, when it’s time to renew the license you only need to update that secret. This configuration relies on 2 steps: . | creating a secret to hold the license | configuring the chart to use that secret | . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/enterprise-license.html#deploy-alfresco-repository-with-enterprise-license",
    
    "relUrl": "/charts/alfresco-repository/docs/enterprise-license.html#deploy-alfresco-repository-with-enterprise-license"
  },"80": {
    "doc": "Enterprise license",
    "title": "Create a kubernetes secret to store the license",
    "content": "Make sure your license available is readable and you have appropriate kubernetes access in order to create a secret in the ACS namespace where you want to deploy the helm release. ACS_NAMESPACE=acs kubectl create secret generic mylicense \\ --namespace $ACS_NAMESPACE \\ --from-file ~/Downloads/Alfresco-ent72-foobar.lic . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/enterprise-license.html#create-a-kubernetes-secret-to-store-the-license",
    
    "relUrl": "/charts/alfresco-repository/docs/enterprise-license.html#create-a-kubernetes-secret-to-store-the-license"
  },"81": {
    "doc": "Enterprise license",
    "title": "Configure the chart to leverage that secret",
    "content": "In the chart value file add the following: . alfresco-repository: configuration: repository: existingSecrets: - name: mylicense key: Alfresco-ent72-foobar.lic purpose: acs-license . License files for your Alfresco enterprise subscription can be obtained from the Hyland Community portal . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/enterprise-license.html#configure-the-chart-to-leverage-that-secret",
    
    "relUrl": "/charts/alfresco-repository/docs/enterprise-license.html#configure-the-chart-to-leverage-that-secret"
  },"82": {
    "doc": "Enterprise license",
    "title": "Applying a new license (in case this is not a fresh deployment)",
    "content": "Before your license expires you will want to apply a new one. It’s actually very easy do to so. All you need to do is overwrite the secret you created on previous deployment. You can use the exact same command just replacing the license file with the new one. Once that’s done you can refresh the license from the Alfresco admin console and use the “Apply a new license” feature (check the admin doc . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/enterprise-license.html#applying-a-new-license-in-case-this-is-not-a-fresh-deployment",
    
    "relUrl": "/charts/alfresco-repository/docs/enterprise-license.html#applying-a-new-license-in-case-this-is-not-a-fresh-deployment"
  },"83": {
    "doc": "Enterprise license",
    "title": "Enterprise license",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/enterprise-license.html",
    
    "relUrl": "/charts/alfresco-repository/docs/enterprise-license.html"
  },"84": {
    "doc": "Guides",
    "title": "Guides",
    "content": "This section groups all the available guides tailored to achieve specific use cases with the Helm charts. ",
    "url": "/alfresco-helm-charts/docs/guides/",
    
    "relUrl": "/docs/guides/"
  },"85": {
    "doc": "Home",
    "title": "Alfresco Helm Charts",
    "content": "This website contains user documentation for the independent and lightweight Helm charts for Alfresco Content Services platform that can be used as building blocks by devops teams to build the Content Services platform that match the organization needs. Check the acs-deployment repository for an example of how to leverage these charts on an umbrella chart. If you want to understand what are the principles to leverage in order to build on top of Alfresco components’ chart please refer to the Build your own charts section. Each individual chart has its own autogenerated reference documentation in charts. Default values are documented there. There is also a section for guides describing how to cover specific use cases. ",
    "url": "/alfresco-helm-charts/index.html#alfresco-helm-charts",
    
    "relUrl": "/index.html#alfresco-helm-charts"
  },"86": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/alfresco-helm-charts/index.html",
    
    "relUrl": "/index.html"
  },"87": {
    "doc": "Custom keystores",
    "title": "Using custom keystore",
    "content": "Alfresco uses a set of keystores for different purposes. Among others thing keystores can be used for metadata encryption or traffic encryption. The alfresco-content-repository image comes with a keystore which contains a single security key. That key is primarily used for metadata encryption and it required when the repository starts up. In production environment it is recommended to use a custom keystore rather than the one present in the image. One may also need to have additional keystores deployed, for instance to allow using TLS encryption for a service the repository provides using an x509 certificate. We describe below how to do both. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/keystores.html#using-custom-keystore",
    
    "relUrl": "/charts/alfresco-repository/docs/keystores.html#using-custom-keystore"
  },"88": {
    "doc": "Custom keystores",
    "title": "The metadata keystore",
    "content": "This keystore is used for property encryption and needs to remain identical throughout the life of the repository. Losing this keystore or its passwords will result in a repository that cannot startup so it is absolutely crucial to to back them up in some safe place. First create a local keystore. It is recommended to use p12 containers nowadays and leverage AES algorithm: . keytool -genseckey \\ -keystore /path/to/keystore.p12 -storetype PKCS12 \\ -storepass secret -keyalg AES \\ -keysize 256 \\ -alias metadata . Now we need to create a secret with from that keystore file and its password in the namespace where Alfresco will be deployed: . kubectl create secret generic repository-keystores \\ --from-file=/path/to/keystore.p12 \\ --from-literal \"ENC_METADATA_STOREPASS=secret\" \\ --from-literal \"ENC_METADATA_KEYPASS=secret\" . Note, unlike the older JCEKS format, PKCS12 do not allow having different passwords for the keystore and the key. so both variables need to be populated with the same value (the same one that was used whn generating the keystore using keytool (here “secret”). Once the secret is created in target namespace we need to let the chart know it needs to mount it and provide necessary options for the repository to access that keystore. To do so use the properties below: . --- configuration: repository: existingSecrets: - name: repository-keystores key: ENC_METADATA_STOREPASS - name: repository-keystores key: ENC_METADATA_KEYPASS environment: JAVA_OPTS: &gt;- -Dencryption.keystore.type=PKCS12 -Dencryption.cipherAlgorithm=AES/CBC/PKCS5Padding -Dencryption.keyAlgorithm=AES -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore.p12 -Dmetadata-keystore.aliases=metadata -Dmetadata-keystore.metadata.algorithm=AES extraVolumes: - name: keystore secret: secretName: repository-keystores extraVolumeMounts: - name: keystore readOnly: true mountPath: /usr/local/tomcat/shared/classes/alfresco/extension/keystore . Note credentials are not passed directly using environment.JAVA_OPTS but secrets. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/keystores.html#the-metadata-keystore",
    
    "relUrl": "/charts/alfresco-repository/docs/keystores.html#the-metadata-keystore"
  },"89": {
    "doc": "Custom keystores",
    "title": "Other keystore",
    "content": "The same approach would work to deploy any keystore. Below example describes how to deploy a custom keystore (here for imaps configuration) together with the required option so the repository can use it. First let’s create a keysotre with a self-signed cert &amp; store it in a p12 file. openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout server.key -out server.crt openssl pkcs12 -export -in server.crt -inkey server.key -out server.p12 -name localhost keytool -importkeystore \\ -deststorepass secret -destkeypass secret -destkeystore keystore.p12 -deststoretype PKCS12 \\ -srckeystore server.p12 -srcstoretype PKCS12 -srcstorepass secret \\ -alias localhost . Java prefers working with PKCS12 containers generated using keytool so that’s why we generate 2 p12 files . Then create a secret from this keystore file: . kubectl create secret generic repository-keystores \\ --from-file=keystore.p12 \\ . Now in order to make sure the repo can open the keystore we need to give the necessary credentials. We will pass credentials values as kubernetes secret keys’ values and their related java properties as their keys. For example in order to pass the property javax.net.ssl.keyStorePassword=secret we would create the secret as follow: . kubectl create secret generic kesystore-secret \\ --from-literal MYKEYSTORE_PASS=secret . credentials can be held in the same secret as the keystore itself. Now we need to reference these secrets and pass the non sensitive properties as environment.JAVA_OPTS when deploying the alfresco-repository chart: . extraVolumes: - name: keystore secret: secretName: repository-keystores extraVolumeMounts: - name: keystore readOnly: true mountPath: /usr/local/tomcat/shared/classes/alfresco/extension/keystore configuration: repository: existingSecrets: - name: kesystore-secret key: javax.net.ssl.keyStorePassword purpose: property:javax.net.ssl.keyStorePassword environment: JAVA_OPTS: &gt;- -Djavax.net.ssl.keyStore=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore.p12 . This very same procdure can apply to other service which require a certification to enable traffic encryption. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/keystores.html#other-keystore",
    
    "relUrl": "/charts/alfresco-repository/docs/keystores.html#other-keystore"
  },"90": {
    "doc": "Custom keystores",
    "title": "Custom keystores",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/keystores.html",
    
    "relUrl": "/charts/alfresco-repository/docs/keystores.html"
  },"91": {
    "doc": "Charts Reference",
    "title": "Charts Reference",
    "content": "This section groups all the reference documentation available for the charts we maintain. They are automatically generated via helm-docs. ",
    "url": "/alfresco-helm-charts/docs/reference.html",
    
    "relUrl": "/docs/reference.html"
  },"92": {
    "doc": "Global properties",
    "title": "Configuring Alfresco repository",
    "content": "Alfresco repository can be configured using properties files. The most common one is alfresco-global.properties. Another option to pass configuration properties for the Alfresco repository is to use the CATALINA_OPTSenvironment variable. Using env vars to configure an application is very common in containerized environments. In some circumstances you might need/want to use subsystem configuration. This is mostly useful in case you need to instantiate several times the same subsystem, otherwise you should prefer properties or environment variables. Neither environment variables nor configmaps are really suitable to pass sensitive data. For that purpose secrets are recommended. Below we provide details on how to use each of these option and how (the subsystem approach is explained here. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/repository-properties.html#configuring-alfresco-repository",
    
    "relUrl": "/charts/alfresco-repository/docs/repository-properties.html#configuring-alfresco-repository"
  },"93": {
    "doc": "Global properties",
    "title": "Repository configuration using alfresco-global.properties",
    "content": "Although the alfresco-repository chart do not generate the alfresco-globa.properties file, it can be passed as a pre-existing configmap making it easy for you to port your existing configuration to kubernetes environments. Such a pre-existing secret must be referenced using the value configuration.repository.existingConfigMap. configuration: repository: existingConfigMap: my-global-properties-cm . This configmap should be the mere representation of the file, for example: . apiVersion: v1 kind: ConfigMap metadata: name: my-global-properties-cm data: alfresco-global.properties: | deployment.method=HELM_CHART alfresco.host=myecm.domain.tld alfresco.port=443 alfresco.protocol=https . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/repository-properties.html#repository-configuration-using-alfresco-globalproperties",
    
    "relUrl": "/charts/alfresco-repository/docs/repository-properties.html#repository-configuration-using-alfresco-globalproperties"
  },"94": {
    "doc": "Global properties",
    "title": "Repository configuration using environment variables",
    "content": "Using environment variable is quite similar to using a properties file. All one need to do in order to switch from one approach to the other is to prefix the property with the -D java uses to set system properties. Such properties are passed as shown below using the environment.CATALINA_OPTS value. environment: CATALINA_OPTS: &gt;- -DalfrescoNtlm1:alfrescoNtlm,ldap1:ldap -Dsynchronization.externalUserControl=true -Dsynchronization.externalUserControlSubsystemName=ldap1 -Dldap.synchronization.userAccountStatusProperty=pwdAccountLockedTime -Dldap.synchronization.disabledAccountPropertyValue=000001010000Z . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/repository-properties.html#repository-configuration-using-environment-variables",
    
    "relUrl": "/charts/alfresco-repository/docs/repository-properties.html#repository-configuration-using-environment-variables"
  },"95": {
    "doc": "Global properties",
    "title": "Sensitive data within the repository configuration",
    "content": "Sometimes the data required as a repository property is considered sensitive. In such case we recommend using the approach below. In the first place you will need a secret to hold the sensitive data you want to pass to the Alfresco repository. One can be created as follow: . kubectl create secret generic repo-secret \\ --from-literal \"REPO_ADMIN_PASSWORD=moreSecureThanAdmin\" . Now we will reference that secret in the list of configuration.repository.existingSecrets by specifying its name, the key which holds the sensitive data we need and specify the name of the property we want to assign that value to. Here the name of the secret is repo-scret, the key holding the sensitive value is REPO_ADMIN_PASSWORD and the property must be specified using purpose attribute and following the syntax “property:doted.notation.property” . configuration: repository: existingSecrets: - name: repo-secret key: REPO_ADMIN_PASSWORD purpose: property:alfresco_user_store.adminpassword . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/repository-properties.html#sensitive-data-within-the-repository-configuration",
    
    "relUrl": "/charts/alfresco-repository/docs/repository-properties.html#sensitive-data-within-the-repository-configuration"
  },"96": {
    "doc": "Global properties",
    "title": "Global properties",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/repository-properties.html",
    
    "relUrl": "/charts/alfresco-repository/docs/repository-properties.html"
  },"97": {
    "doc": "Subsystems",
    "title": "Configuring Alfresco subsystems",
    "content": "This chart offers a rather simple mechanism to configure Alfresco Subsystems. Although subsystems are well known to most Alfresco administrators, in a kubernetes environment they should be used only when necessary (e.g. if in need to instantiate several instances of the same subsystem) . Subsystem configuration relies on providing a secret which contains all the configuration files for the subsystems. The secret needs to be added to the list of configuration.repository.existingSecrets: . configuration: repository: existingSecrets: - name: ldap1 purpose: subsystems:Authentication:ldap . For the above configuration to work there are some rules to follow: . | name must match both the secret name and the subsystem instance name (in case the subsystem name must be referenced somewhere else, e.g. in authentication.chain) | purpose must be of the form: subsystems:subsystemName:subsystemType | The secret must contain all necessary files to configure the subsystem. Usually a bean definition XML file and properties file. (see example below) | . Kubernetes secrets can not be bigger than 1MB. That means that this method will not work in case a subsystem contain 1MB of data or more. This should not be the case for most subsystems but is important t know in case of customizations . ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/subsystems.html#configuring-alfresco-subsystems",
    
    "relUrl": "/charts/alfresco-repository/docs/subsystems.html#configuring-alfresco-subsystems"
  },"98": {
    "doc": "Subsystems",
    "title": "Examples: ContentStore configuration",
    "content": "Creating the subsystem’s secret: . Place all the configuration files in a folder on your local system. Sample files can be extracted from the S3 AMP file. For more details on the content of the files check out the Alfresco S3 connector docs. mkdir s3-config unzip -d s3-config ~/Downloads/alfresco-s3-connector-5.1.0.amp config/alfresco/subsystems/ContentStore/S3/ tree s3-config s3-config/ ├── s3-contentstore-context.xml └── s3-contentstore.properties ... By default subsystem Beans may include other XML files from upper level directories. This is not possible with as kubernetes secrets are projected down from a single directory (mount point). If your subsystem config does this kind of inclusion you’ll need to amend the Bean to not use import statement or import from the current directory. Create the secret using kubectl . kubectl create secret generic S3 --from-file=s3-config/ . Pass the following configuration.repository.existingSecrets together with the property to set the new contentstore subsystem as the default contentstore: . configuration: repository: existingSecrets: - name: repository-secrets key: license.lic purpose: acs-license - name: S3 purpose: subsystems:ContentStore:S3 environment: CATALINA_OPTS: &gt;- -Dfilecontentstore.subsystem.name=S3 . As a list, configuration.repository/existingSecrets cannot be merged so you would need to re-define the license secret to have it deployed. ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/subsystems.html#examples-contentstore-configuration",
    
    "relUrl": "/charts/alfresco-repository/docs/subsystems.html#examples-contentstore-configuration"
  },"99": {
    "doc": "Subsystems",
    "title": "Subsystems",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-repository/docs/subsystems.html",
    
    "relUrl": "/charts/alfresco-repository/docs/subsystems.html"
  },"100": {
    "doc": "Truststore",
    "title": "Setting custom java truststore",
    "content": "There are multiple use cases where you may want to set a custom keystore or truststore. It can be because you need to interact with a third party service which uses a self-signed certificate or a prvite CA that is not shipped with the container. Or maybe the service you are trying to connect to uses a self-signed certificate and you want to trust it. In this case, you can create a custom truststore and set it in the container. ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/docs/truststore.html#setting-custom-java-truststore",
    
    "relUrl": "/charts/alfresco-search-enterprise/docs/truststore.html#setting-custom-java-truststore"
  },"101": {
    "doc": "Truststore",
    "title": "Create a custom truststore",
    "content": "You can create a custom truststore on your local machine using the keytool command. The keytool command is part of the Java Development Kit (JDK) and is used to manage keystores and truststores. You can use the following command to create a new truststore and import a certificate into it: . keytool -importcert -file &lt;path-to-certificate-file&gt; -alias &lt;alias-name&gt; -keystore &lt;path-to-truststore-file&gt; . Where &lt;path-to-certificate-file&gt; is the path to the CA certificate or the self-signed certificate you want to trust, &lt;alias-name&gt; is a name you want to give to the certificate in the truststore, and &lt;path-to-truststore-file&gt; is the path to the truststore file you want to create. You will be prompted to enter a password for the truststore. You can use the default password changeit or leave it empty (Truststore usually contain public informations so it should not be a problem to not use a password). Also note that can point to an already existing truststore file. We recommand using the default `cacerts` truststore that comes with the JDK. This way, you can add your custom certificates to the default truststore and use it in your application. ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/docs/truststore.html#create-a-custom-truststore",
    
    "relUrl": "/charts/alfresco-search-enterprise/docs/truststore.html#create-a-custom-truststore"
  },"102": {
    "doc": "Truststore",
    "title": "Create a Kubernetes secret",
    "content": "Once you have created the truststore, you can create a Kubernetes secret to store the truststore file. You can use the following command to create a Kubernetes secret: . kubectl create secret generic -n &lt;namespace&gt; &lt;secret-name&gt; \\ --from-file=&lt;path-to-truststore-file&gt; \\ --dry-run=client -o yaml . Where &lt;secret-name&gt; is the name you want to give to the secret and &lt;path-to-truststore-file&gt; is the path to the truststore file you created or updated in the previous step and &lt;namespace&gt; is the namespace where you want to create the secret (needs to be the same namespace where your pods are running). This will produce a YAML output you can then apply to your Kubernetes cluster or save to a file for applying later with the command below: . kubectl apply -f &lt;path-to-secret-file&gt; . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/docs/truststore.html#create-a-kubernetes-secret",
    
    "relUrl": "/charts/alfresco-search-enterprise/docs/truststore.html#create-a-kubernetes-secret"
  },"103": {
    "doc": "Truststore",
    "title": "Mount the secret in the pod",
    "content": "You can mount the secret in the pod by adding the following values to the Helm values file: . extraVolumes: - name: custom-truststore secret: secretName: &lt;secret-name&gt; extraVolumeMounts: - name: custom-truststore mountPath: /etc/ssl/certs/custom-truststore subPath: &lt;path-to-truststore-file&gt; . Now you need to set the JAVA_OPTS environment variable to use the custom truststore. You can do this by adding the following values to the Helm values file: . liveIndexing: environment: JAVA_OPTS: \"-Djavax.net.ssl.trustStore=/etc/ssl/certs/custom-truststore\" reindexing: environment: JAVA_OPTS: \"-Djavax.net.ssl.trustStore=/etc/ssl/certs/custom-truststore\" . ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/docs/truststore.html#mount-the-secret-in-the-pod",
    
    "relUrl": "/charts/alfresco-search-enterprise/docs/truststore.html#mount-the-secret-in-the-pod"
  },"104": {
    "doc": "Truststore",
    "title": "Truststore",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-search-enterprise/docs/truststore.html",
    
    "relUrl": "/charts/alfresco-search-enterprise/docs/truststore.html"
  },"105": {
    "doc": "How to Connect HXI to a Running Repository",
    "title": "Connecting HXI Chart to a Running Repository Instance",
    "content": "This guide walks you through connecting an HXI chart to a previously deployed repository instance, with a focus on configuring the live ingester. It includes setting up the HXI Helm chart and ensuring the repository instance is correctly configured for the HXI extension. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/docs/tutorial.html#connecting-hxi-chart-to-a-running-repository-instance",
    
    "relUrl": "/charts/alfresco-connector-hxi/docs/tutorial.html#connecting-hxi-chart-to-a-running-repository-instance"
  },"106": {
    "doc": "How to Connect HXI to a Running Repository",
    "title": "Prerequisites",
    "content": "Before you begin, make sure you have: . | A working Alfresco Content Services deployment | The HXI (Hyland Experience Insight) extension installed and enabled on the repository. | From your ACS stack: . | ActiveMQ URL | ActiveMQ username | ActiveMQ password | SFS (Shared File Store) URL | . | From Hyland Experience Insight (HXI) / Knowledge Retrieval: . | HXI Client ID | HXI Client Secret | HXI Environment Key | HXI App Source ID | HXI Authentication Token URL | HXI Insight Ingestion URL | HXI Discovery Base URL | HXI Knowledge Retrieval URL | . | . Tip: For better security, store credentials such as secrets and passwords in Kubernetes secrets. This guide demonstrates inline configuration for simplicity. For secure handling, refer to the existingSecret option in the ACS deployment documentation. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/docs/tutorial.html#prerequisites",
    
    "relUrl": "/charts/alfresco-connector-hxi/docs/tutorial.html#prerequisites"
  },"107": {
    "doc": "How to Connect HXI to a Running Repository",
    "title": "Setup Steps",
    "content": ". | Prepare your file with all required connection settings for HXI, ActiveMQ, and the repository. This file is passed into the Helm chart and should include the HXI client details, environment key, URLs, and the version of the connector. | Apply the Helm chart using your configured values file: . | . helm repo add alfresco-helm-charts https://alfresco.github.io/alfresco-helm-charts/ helm repo update helm install hxi alfresco-helm-charts/alfresco-connector-hxi --values charts/alfresco-connector-hxi/docs/hxi.yml . | Review the output from the Helm chart installation. You will see a list of generated properties that need to be passed to the repository instance: | . hxi.discovery.base-url=https://discovery.staging.experience.hyland.com hxi.auth.providers.hyland-experience.token-uri=https://auth.iam.staging.experience.hyland.com/idp/connect/token hxi.auth.providers.hyland-experience.environment-key=alfresco-kd-ci-xxxx hxi.auth.providers.hyland-experience.client-id=sc-xxxx hxi.auth.providers.hyland-experience.client-secret=your-client-secret hxi.knowledge-retrieval.url=https://alfresco-kd-ci-xxxx.insight.staging.ncp.hyland.com/discovery/agents hxi.connector.source-id=984b2de8-xxxx . | Update the repository instance to include these properties. If you’re using the alfresco-content-services Helm chart, add them under config.repository.additionalGlobalProperties. | . Example: . config: repository: additionalGlobalProperties: hxi.discovery.base-url: https://discovery.staging.experience.hyland.com hxi.auth.providers.hyland-experience.token-uri: https://auth.iam.staging.experience.hyland.com/idp/connect/token hxi.auth.providers.hyland-experience.environment-key: alfresco-kd-ci-xxxx hxi.auth.providers.hyland-experience.client-id: sc-xxxx hxi.auth.providers.hyland-experience.client-secret: your-client-secret hxi.knowledge-retrieval.url: https://alfresco-kd-ci-xxxx.insight.staging.ncp.hyland.com/discovery/agents hxi.connector.source-id: 984b2de8-xxxx . | Restart the repository to ensure the configuration changes take effect. | Verify ingestion is working by checking logs in the live-ingester pod. Look for successful connection messages and ingestion events. | . This process ensures your HXI chart is properly connected to a running repository instance and ready to support knowledge retrieval and analytics. ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/docs/tutorial.html#setup-steps",
    
    "relUrl": "/charts/alfresco-connector-hxi/docs/tutorial.html#setup-steps"
  },"108": {
    "doc": "How to Connect HXI to a Running Repository",
    "title": "How to Connect HXI to a Running Repository",
    "content": " ",
    "url": "/alfresco-helm-charts/charts/alfresco-connector-hxi/docs/tutorial.html",
    
    "relUrl": "/charts/alfresco-connector-hxi/docs/tutorial.html"
  }
}
