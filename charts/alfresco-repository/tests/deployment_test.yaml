---
suite: test repository manifest
templates:
  - deployment.yaml
values: &test_values
  - values/test_values.yaml
tests:
  - it: should render default values
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-alfresco-repository
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution
          content:
            weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - alfresco-repository
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - RELEASE-NAME
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - alfresco-repository
              topologyKey: topology.kubernetes.io/zone
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution
          content:
            weight: 5
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - alfresco-repository
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - RELEASE-NAME
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - alfresco-repository
              topologyKey: kubernetes.io/hostname
      - equal:
          path: spec.replicas
          value: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-alfresco-database
                key: DATABASE_URL
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: RELEASE-NAME-alfresco-opts
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            requests:
              cpu: "2"
              memory: "2Gi"
            limits:
              cpu: "4"
              memory: "8Gi"

  - it: should have number of replica set rom values
    set:
      replicaCount: 4
    asserts:
      - equal:
          path: spec.replicas
          value: 4
        template: deployment.yaml

  - it: should not have replicas set with autoscaling
    set:
      autoscaling:
        enabled: true
    asserts:
      - isNull:
          path: spec.replicas

  - it: should have a volume and a volumeMount for alfresco-global.properties
    set:
      configuration:
        repository:
          existingConfigMap: myprops
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: global-properties
            configMap:
              name: myprops
              defaultMode: 0400
              items:
                - key: alfresco-global.properties
                  path: alfresco-global.properties
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: global-properties
            mountPath: /usr/local/tomcat/shared/classes/alfresco-global.properties
            subPath: alfresco-global.properties
            readOnly: true

  - it: should have custom extra volumes when defined
    set:
      extraVolumes:
        - name: test-volume
          awsElasticBlockStore:
            volumeID: "whatever"
            fsType: ext4
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: test-volume
            awsElasticBlockStore:
              volumeID: "whatever"
              fsType: ext4

  - it: should have custom secrets for license and subsytems
    set:
      configuration:
        repository:
          existingSecrets:
            - name: repository-secrets
              purpose: acs-license
              key: license.lic
            - name: myAzureAD
              purpose: subsystems:Authentication:ldap-ad
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content: &acsLicenseVol
            name: acs-license
            secret:
              defaultMode: 0400
              items:
              - key: license.lic
                path: license.lic
              optional: true
              secretName: repository-secrets
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: &acsLicenseMount
            name: acs-license
            mountPath: /usr/local/tomcat/shared/classes/alfresco/extension/license
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: myAzureAD
            secret:
              secretName: myAzureAD
              defaultMode: 0400
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: myAzureAD
            mountPath: /usr/local/tomcat/shared/classes/alfresco/extension/subsystems/Authentication/ldap-ad/myAzureAD
            readOnly: true

  - it: should not have any license volume but vars instead
    set:
      configuration:
        repository:
          existingSecrets:
            - name: mysecret
              key: MYSECRETVAR
    asserts:
      - notContains:
          path: spec.template.spec.volumes
          content: *acsLicenseVol
      - notContains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *acsLicenseMount
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MYSECRETVAR
            valueFrom:
              secretKeyRef:
                key: MYSECRETVAR
                name: mysecret
                optional: true

  - it: should render deployment using provided database cm
    set:
      configuration:
        db:
          existingConfigMap:
            name: mycm
            keys:
              url: DBURL
              driver: DBDRIVER
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                name: mycm
                key: DBURL
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_DRIVER
            valueFrom:
              configMapKeyRef:
                name: mycm
                key: DBDRIVER

  - it: should have the default init container
    values: *test_values
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-db-ready
      - matchRegex:
          path: spec.template.spec.initContainers[0].image
          pattern: "busybox:.+"
      - equal:
          path: spec.template.spec.initContainers[0].imagePullPolicy
          value: IfNotPresent

  - it: should deploy with extra containers
    values: *test_values
    set:
      extraInitContainers:
        - name: init1
          image: init:latest
      extraSideContainers:
        - name: sidecar1
          image: sidecar:latest
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2

  - it: should allow setting nodeSelector properly
    values: *test_values
    set:
      nodeSelector:
        node_label: node_value
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector.node_label
          value: node_value

  - it: should render labels for deployment
    values: *test_values
    chart:
      version: 1.0.0
      appVersion: 2.0.0
    set:
      nameOverride: testName
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/component: alfresco-repository
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: testName
            app.kubernetes.io/version: 2.0.0
            helm.sh/chart: alfresco-repository-1.0.0
