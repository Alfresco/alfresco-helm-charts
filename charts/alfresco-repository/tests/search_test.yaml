---
suite: TestsSearch configurations
templates:
  - deployment.yaml
  - configmap-repository.yaml
  - configmap-search.yaml
  - secret-search.yaml
values:
  - values/test_values.yaml
tests:
  - it: Should render a config without any index engine
    asserts: &default_to_noindex
      - notMatchRegex:
          path: data.CATALINA_OPTS
          pattern: |-
            (^\s*|[^\s]\s+)-D(solr|elasticsearch)\.
        template: configmap-repository.yaml
      - equal:
          path: data.SEARCH_FLAVOR
          value: noindex
        template: configmap-search.yaml
      - &has_default_search_flavor
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SEARCH_FLAVOR
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-alfresco-search
                key: SEARCH_FLAVOR
        template: deployment.yaml

  - it: should render a working Solr6 config based on values
    set:
      configuration:
        search: &solrValues
          flavor: solr6
          solr-secret: mysupersecret
          url: https://search.domain.tld/index
    template: configmap-search.yaml
    asserts: !merge-maps
      - *has_default_search_flavor
      - equal:
          path: data.SEARCH_FLAVOR
          value: solr6
      - equal:
          path: data.SEARCH_PORT
          value: "443"
      - equal:
          path: data.SEARCH_HOST
          value: search.domain.tld
      - equal:
          path: data.SOLR_BASE_URL
          value: /index
      - equal:
          path: data.SEARCH_SECURECOMMS
          value: secret
      - equal:
          path: data.SOLR_SECRET
          value: bXlzdXBlcnNlY3JldA==
        template: secret-search.yaml
      - matchRegex:
          path: data.CATALINA_OPTS
          pattern: |-
            (^\s*|[^\s]\s+)-Dsolr\.secureComms="\$SEARCH_SECURECOMMS"($|\s)
        template: configmap-repository.yaml

  - it: should render a working Solr6 config based on values (noauth)
    set:
      configuration:
        search:
          << : *solrValues
          solr-secret: null
    asserts: !merge-maps
      - *has_default_search_flavor
      - equal:
          path: data.SEARCH_SECURECOMMS
          value: none
        template: configmap-search.yaml

  - it: should not render any search configmap
    set:
      configuration:
        search: &solrK8sResources
          flavor: solr6
          existingConfigMap:
            name: mysolrcm
            keys:
              host: INDEX_SERVICE_HOST
              port: INDEX_SERVICE_PORT
              securecomms: INDEX_SERVICE_SECURITY
          existingSecret:
            name: mysolrsecret
            keys:
              solr-secret: SOME_SECRET
    template: deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SEARCH_FLAVOR
            valueFrom:
              configMapKeyRef:
                name: mysolrcm
                key: SEARCH_FLAVOR
      - hasDocuments:
          count: 0
        template: configmap-search.yaml
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SEARCH_HOST
            valueFrom:
              configMapKeyRef:
                name: mysolrcm
                key: INDEX_SERVICE_HOST
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SEARCH_PORT
            valueFrom:
              configMapKeyRef:
                name: mysolrcm
                key: INDEX_SERVICE_PORT
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SEARCH_SECURECOMMS
            valueFrom:
              configMapKeyRef:
                name: mysolrcm
                key: INDEX_SERVICE_SECURITY
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SOLR_SECRET
            valueFrom:
              secretKeyRef:
                name: mysolrsecret
                key: SOME_SECRET
                optional: true

  - it: should render a working ES config based on values
    set:
      configuration:
        search: &esValues
          flavor: elasticsearch
          username: esuser
          password: espass
          url: https://search.domain.tld/index
    template: configmap-search.yaml
    asserts:
      - equal:
          path: data.SEARCH_FLAVOR
          value: elasticsearch
      - equal:
          path: data.SEARCH_PORT
          value: "443"
      - equal:
          path: data.SEARCH_SECURECOMMS
          value: https
      - equal:
          path: data.SEARCH_HOST
          value: search.domain.tld
      - equal:
          path: data.ELASTICSEARCH_USERNAME
          value: ZXN1c2Vy
        template: secret-search.yaml
      - equal:
          path: data.ELASTICSEARCH_PASSWORD
          value: ZXNwYXNz
        template: secret-search.yaml
      - matchRegex:
          path: data.CATALINA_OPTS
          pattern: |-
            (^\s*|[^\s]\s+)-Delasticsearch\.secureComms=\$SEARCH_SECURECOMMS($|\s)
        template: configmap-repository.yaml

  - it: should render a working ES config based on values (noauth)
    set:
      configuration:
        search:
          flavor: elasticsearch
          url: http://search.domain.tld/index
    asserts:
      - equal:
          path: data.SEARCH_SECURECOMMS
          value: none
        template: configmap-search.yaml
      - hasDocuments:
          count: 0
        template: secret-search.yaml

  - it: should render a workingES config based on values k8s existing resources
    set:
      configuration:
        search: &esK8sResources
          flavor: elasticsearch
          existingConfigMap:
            name: myescm
            keys:
              url: INDEX_SERVICE_LOCATION  # TODO add env tests in deployment (url, port, host, ...)
          existingSecret:
            name: myessecret
            keys:
              username: USER
              password: PASS
    asserts:
      - hasDocuments:
          count: 0
        template: configmap-search.yaml
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: myessecret
                key: USER
                optional: true
        template: deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: myessecret
                key: PASS
                optional: true
        template: deployment.yaml

  - it: Should default to noindex despite all other configs
    set: &messyconfig_all_noindex
      configuration:
        search:
          elasticsearch_username: euser
          elasticsearch_password: epass
          solr-secret: mysupersecret
          url: https://search.domain.tld/index
          existingSecret:
            name: mysecret
            keys:
              username: USERNAME
              password: PASSWORD
              solr_secret: SOLR_SECRET
    asserts: *default_to_noindex

  - it: Should default to noindex despite all other configs
    set:
      << : *messyconfig_all_noindex
      configuration:
        search:
          flavor: solrsearchindex
    asserts:
      - failedTemplate:
          errorMessage: |-
            Search Service flavor MUST be one of 'noindex', 'solr6' or 'elasticsearch'
        template: deployment.yaml
