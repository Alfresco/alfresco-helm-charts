{{- if .Values.reindexing.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "alfresco-search-enterprise.fullname" . }}-reindexing
  labels:
    {{- include "alfresco-search-enterprise.labels" $ | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alfresco-search-enterprise.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "alfresco-search-enterprise.serviceAccountName" . }}
      {{- include "alfresco-common.component-pod-security-context" .Values | indent 4 }}
      {{- include "alfresco-common.imagePullSecrets" . | indent 6 }}
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}-reindexing
          image: "{{ .Values.reindexing.image.repository }}:{{ .Values.reindexing.image.tag }}"
          imagePullPolicy: {{ .Values.reindexing.image.pullPolicy }}
          {{- include "alfresco-common.component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.reindexing.resources | nindent 12 }}
          env:
            {{- $dbCtx := dict "Values" (dict "nameOverride" "alfresco-database") "Chart" .Chart "Release" .Release }}
            {{- $dbFullName := (include "alfresco-search-enterprise.fullname" $dbCtx) }}
            {{- $ats_cm := .Values.ats.existingConfigMap.name | default (printf "%s-ats" (include "alfresco-search-enterprise.fullname" .)) }}
            {{- include "alfresco-search-enterprise.activemq.secret.env" . | nindent 12 }}
            {{- include "alfresco-search-enterprise.activemq.cm.env" . | nindent 12 }}
            {{- include "alfresco-common.spring.activemq.env" . | nindent 12 }}
            {{- include "alfresco-search-enterprise.config.spring.es.env" $ | nindent 12 }}
            {{- include "alfresco-search-enterprise.config.spring.envCredentials" . | nindent 12 }}
            - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL
              valueFrom:
                configMapKeyRef:
                  name: {{ $ats_cm }}
                  key: {{ .Values.ats.existingConfigMap.keys.transform_url }}
            - name: ALFRESCO_SHAREDFILESTORE_BASEURL
              valueFrom:
                configMapKeyRef:
                  name: {{ $ats_cm }}
                  key: {{ .Values.ats.existingConfigMap.keys.sfs_url }}
            {{- include "alfresco-search-enterprise.env" $ | nindent 12 }}
            {{- range $key, $val := .Values.reindexing.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: ALFRESCO_REINDEX_PATHINDEXINGENABLED
              value: {{ .Values.reindexing.pathIndexingEnabled | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reindexing.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingSecret.keys.password }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reindexing.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingSecret.keys.username }}
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.reindexing.db.existingConfigMap.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingConfigMap.keys.url }}
          ports:
              - name: http
                containerPort: 8080
                protocol: TCP
      initContainers:
        - name: wait-for-repository
          image: curlimages/curl:7.79.1
          {{- include "alfresco-common.component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.reindexing.initcontainers.waitForRepository.resources | nindent 12 }}
          env:
            {{- $repoCtx := dict "Values" (dict "nameOverride" (printf "%s-%s" ($.Values.nameOverride | default $.Chart.Name) "repository")) "Chart" $.Chart "Release" $.Release }}
            {{- $repoCm := coalesce .Values.reindexing.repository.existingConfigMap.name (include "alfresco-search-enterprise.fullname" $repoCtx) }}
            - name: REPOSITORY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ $repoCm }}
                  key: {{ .Values.reindexing.repository.existingConfigMap.keys.url }}
          command: [ "/bin/sh","-c" ]
          # Delay running the reindexing to give Alfresco Repository a chance to initialise its database
          args:
            - |
              while [ $(curl -sw '%{http_code}' ${REPOSITORY_URL}/api/-default-/public/alfresco/versions/1/probes/-ready- -o /dev/null) -ne 200 ]
              do echo "Waiting for the Alfresco repository to come up at $REPOSITORY_URL ..."
                sleep 5
              done
              echo 'Alfresco is ready, delay reindexing to give a chance to fully initialise.'
              sleep 30
              echo 'Reindexing started!'
{{ end }}
