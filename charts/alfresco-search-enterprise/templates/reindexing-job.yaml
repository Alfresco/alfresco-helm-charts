{{- if .Values.reindexing.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "alfresco-search-enterprise.fullname" . }}-reindexing
  labels:
    {{- include "alfresco-search-enterprise.labels" $ | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alfresco-search-enterprise.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "component-pod-security-context" .Values | indent 4 }}
      {{- include "alfresco-content-services.imagePullSecrets" . | indent 6 }}
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}-reindexing
          image: "{{ .Values.reindexing.image.repository }}:{{ .Values.reindexing.image.tag }}"
          imagePullPolicy: {{ .Values.reindexing.image.pullPolicy }}
          {{- include "component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.reindexing.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ template "alfresco-search-enterprise.fullname" . }}-reindexing-configmap
            - secretRef:
                name: {{ default (printf "%s-messagebroker-secret" (include "alfresco-search-enterprise.fullname" .)) .Values.messageBroker.existingSecretName }}
          env:
            {{- $dbCtx := dict "Values" (dict "nameOverride" "alfresco-database") "Chart" .Chart "Release" .Release }}
            {{- $dbFullName := (include "alfresco-search-enterprise.fullname" $dbCtx) }}
            {{- include "alfresco-search-enterprise.env" $ | nindent 12 }}
            {{- range $key, $val := .Values.reindexing.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: ALFRESCO_REINDEX_PATHINDEXINGENABLED
              value: {{ .Values.reindexing.pathIndexingEnabled | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reindexing.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingSecret.keys.password }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reindexing.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingSecret.keys.username }}
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.reindexing.db.existingConfigMap.name | default $dbFullName }}
                  key: {{ .Values.reindexing.db.existingConfigMap.keys.url }}
            {{- include "spring.activemq.env" . | nindent 12 }}
            {{- include "alfresco-search-enterprise.config.spring.envCredentials" $ | nindent 12 }}
          ports:
              - name: http
                containerPort: 8080
                protocol: TCP
      initContainers:
        - name: wait-for-repository
          image: curlimages/curl:7.79.1
          {{- include "component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.reindexing.initcontainers.waitForRepository.resources | nindent 12 }}
          env:
            - name: ALFRESCO_REPOSITORY_URL
              value: http://{{ template "content-services.shortname" . }}-repository/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-
          command: [ "/bin/sh","-c" ]
          # Delay running the reindexing to give Alfresco Repository a chance to fully initialise
          args: [ "while [ $(curl -sw '%{http_code}' $ALFRESCO_REPOSITORY_URL -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the Alfresco Repository...'; done; echo 'Alfresco is ready, delay reindexing to give a chance to fully initialise.'; sleep 30; echo 'Reindexing started!'" ]
{{ end }}
