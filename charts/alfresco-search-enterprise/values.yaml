imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
resources:
  requests:
    cpu: "0.5"
    memory: "256Mi"
  limits:
    cpu: "2"
    memory: "2048Mi"
# -- Name of the existing search index, usually created by repo
indexName: alfresco
pathIndexingComponent:
  enabled: true
contentMediaTypeCache:
  enabled: true
  refreshTime: 0 0 * * * *
liveIndexing:
  mediation:
    image:
      repository: >-
        quay.io/alfresco/alfresco-elasticsearch-live-indexing-mediation
      tag: 3.3.0-A9
      pullPolicy: IfNotPresent
  content:
    image:
      repository: quay.io/alfresco/alfresco-elasticsearch-live-indexing-content
      tag: 3.3.0-A9
      pullPolicy: IfNotPresent
    replicaCount: 1
  metadata:
    image:
      repository: quay.io/alfresco/alfresco-elasticsearch-live-indexing-metadata
      tag: 3.3.0-A9
      pullPolicy: IfNotPresent
    replicaCount: 1
  path:
    image:
      repository: quay.io/alfresco/alfresco-elasticsearch-live-indexing-path
      tag: 3.3.0-A9
      pullPolicy: IfNotPresent
    replicaCount: 1
reindexing:
  # -- Create the one-shot job to trigger the reindexing of repo contents
  enabled: true
  image:
    repository: quay.io/alfresco/alfresco-elasticsearch-reindexing
    tag: 3.3.0-A9
    pullPolicy: IfNotPresent
  pathIndexingEnabled: true
  postgresql:
    url:
    # -- The host where database service is available
    hostname: postgresql-acs
    # -- The port where service is available
    port: 5432
    # -- The database name to use
    database: alfresco
    # -- The username required to access the service
    user:
    # -- The password required to access the service
    password:
    # -- Alternatively, provide connection details via an existing secret that contains DATABASE_USERNAME and DATABASE_PASSWORD keys
    existingSecretName:
  resources:
    requests:
      cpu: "0.5"
      memory: "128Mi"
    limits:
      cpu: "2"
      memory: "512Mi"
  initcontainers:
    waitForRepository:
      resources:
        limits:
          cpu: "0.25"
          memory: "10Mi"
elasticsearch:
  # -- Enable embedded elasticsearch - useful when using this chart in standalone
  enabled: false
  protocol: http
  image: "docker.elastic.co/elasticsearch/elasticsearch-oss"
  replicas: 1
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
activemq:
  # -- Enable embedded broker - useful when testing this chart in standalone
  enabled: false
messageBroker:
  # --  Broker URL formatted as per:
  # https://activemq.apache.org/failover-transport-reference
  url: null
  # -- Broker username
  user: null
  # -- Broker password
  password: null
  # -- Provide connection details alternatively via an existing secret that contains BROKER_URL, BROKER_USERNAME and BROKER_PASSWORD keys
  existingSecretName:
# -- Overrides .Values.global.elasticsearch
searchIndex:
  # -- The host where service is available
  host: null
  # -- The port where service is available
  port: null
  # -- Valid values are http or https
  protocol: null
  # -- The username required to access the service, if any
  user: null
  # -- The password required to access the service, if any
  password: null
  # -- Alternatively, provide connection details via an an existing secret that contains ELASTICSEARCH_USERNAME and ELASTICSEARCH_PASSWORD keys
  existingSecretName:
global:
  alfrescoRegistryPullSecrets: quay-registry-secret
  # -- Shared connections details for Elasticsearch/Opensearch cluster
  elasticsearch:
    # -- The host where service is available
    host: null
    # -- The port where service is available
    port: null
    # -- Valid values are http or https
    protocol: null
    # -- The username required to access the service, if any
    user: null
    # -- The password required to access the service, if any
    password: null
    # -- Alternatively, provide connection details via an existing secret that contains ELASTICSEARCH_USERNAME and ELASTICSEARCH_PASSWORD keys
    existingSecretName:
