---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "alfresco-connector-msteams.fullname" . }}
  labels:
    {{- include "alfresco-connector-msteams.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "alfresco-connector-msteams.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- toYaml .Values.strategy.rollingUpdate | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if not .Values.repository.existingConfigMap }}
        checksum/config: {{ include (print $.Template.BasePath "/config-connector-msteams.yaml") . | sha256sum }}
        {{- end }}
      labels:
        {{- include "alfresco-connector-msteams.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "alfresco-connector-msteams.serviceAccountName" . }}
      {{- include "alfresco-common.component-pod-security-context" .Values | indent 4 }}
      {{- if .Values.nodeSelector }}
        nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- include "alfresco-common.imagePullSecrets" . | indent 6 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ template "alfresco-connector-msteams.name" . }}
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - {{ .Release.Name }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
            - weight: 5
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ template "alfresco-connector-msteams.name" . }}
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - {{ .Release.Name }}
                topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- include "alfresco-common.component-security-context" .Values | indent 8 }}
          envFrom:
            - configMapRef:
                name: {{ template "alfresco-connector-msteams.fullname" . }}
          env:
            {{- $msteamsCmCtx := dict "Values" (dict "nameOverride" "repo-teams") "Chart" .Chart "Release" .Release }}
            {{- $msteamsCm := coalesce .Values.repository.existingConfigMap.name (include "alfresco-connector-msteams.fullname" $msteamsCmCtx) }}
            {{- $msSecretCtx := dict "Values" (dict "nameOverride" "msteams-se") "Chart" .Chart "Release" .Release }}
            {{- $msSecret := coalesce .Values.microsoft.app.existingSecret.name (include "alfresco-connector-msteams.fullname" $msSecretCtx) }}
            - name: ALFRESCO_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ $msteamsCm }}
                  key: {{ .Values.repository.existingConfigMap.keys.url }}
            - name: MICROSOFT_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $msSecret }}
                  key: {{ .Values.microsoft.app.existingSecret.keys.id }}
            - name: MICROSOFT_APP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $msSecret }}
                  key: {{ .Values.microsoft.app.existingSecret.keys.password }}
          ports:
              - containerPort: {{ .Values.image.internalPort }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.image.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.image.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
