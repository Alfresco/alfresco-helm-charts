---
suite: test Alfresco Share deployment
templates:
  - deployment-share.yaml
  - config-share.yaml
tests:
  - it: should have basic metadata in place in deployment
    template: deployment-share.yaml
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-alfresco-share
      - isNull:
          path: spec.template.spec.nodeSelector
      - isNull:
          path: spec.template.spec.affinity
      - isNull:
          path: spec.template.spec.tolerations

  - it: should have customized metadata in place in deployment
    set:
      nameOverride: share-ui
      nodeSelector:
        disktype: ssd
      tolerations:
        - key: "skipme"
          operator: "Exists"
          effect: "NoSchedule"
      affinity: |-
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
    template: deployment-share.yaml
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-share-ui
      - contains:
          path: >-
            spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms
          content:
            matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "skipme"
            operator: "Exists"
            effect: "NoSchedule"
      - isSubset:
          path: spec.template.spec.nodeSelector
          content:
            disktype: ssd

  - it: should leverage provided existing configmap
    set:
      repository:
        existingConfigMap:
          name: myns/mycm
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[5].valueFrom.configMapKeyRef.name
          value: myns/mycm
        template: deployment-share.yaml

  - it: Fail due to broken input
    set:
      known_urls:
        - not.an/url
    asserts:
      - failedTemplate:
          errorMessage: >-
            provided known_urls MUST start with a scheme (http :// or https://)
        template: deployment-share.yaml
  - it: |
      should render custom CSRF config.
      referers MUST be a regex with pipes escaped (due to the way vars are substitued in Share pods
      origins MUST be a list of hosts (without paths) separated by commas.
    set:
      known_urls:
        - https://ecm.domain.tld/myapp/callback
        - https://ecm.domain.tld/alfresco
        - http://app.domain.local:8000
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: >-
            https://ecm.domain.tld/myapp/callback/.*\|https://ecm.domain.tld/alfresco/.*\|http://app.domain.local:8000/.*
        template: deployment-share.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: https://ecm.domain.tld,https://ecm.domain.tld,http://app.domain.local:8000
        template: deployment-share.yaml
      - equal:
          path: spec.template.spec.containers[0].env[2].value
          value: https://ecm.domain.tld
        template: deployment-share.yaml

  - it: should render a default Xorigin restriction config
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: http://localhost/.*\|https://localhost/.*
        template: deployment-share.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: http://localhost,https://localhost
        template: deployment-share.yaml
      - equal:
          path: spec.template.spec.containers[0].env[2].value
          value: http://localhost
        template: deployment-share.yaml

  - it: should render extra configs
    set:
      extraSideContainers:
        - image: busybox:latest
      extraVolumes:
        - name: share-config
          configMap:
            name: anotherns/morecm
      extraVolumeMounts:
        - name: share-config
          mountPath: /usr/local/tomcat/shared/classes/Alfresco/web-extension/share-config-custom.xml
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: share-config
            configMap:
              name: anotherns/morecm
        template: deployment-share.yaml
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: >-
              /usr/local/tomcat/shared/classes/Alfresco/web-extension/share-config-custom.xml
            name: share-config
        template: deployment-share.yaml
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2
        template: deployment-share.yaml

  - it: should render cpu and memory limits
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "4"
              memory: "2000Mi"
        template: deployment-share.yaml
