# Default values for Alfresco Process Services.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
global:
  alfrescoRegistryPullSecrets: quay-registry-secret

ingress:
  enabled: true
  protocol: http
  hostName: ''

processEngine:
  replicaCount: 1
  podSecurityContext:
    runAsUser: 33007
    runAsGroup: 33007
    fsGroup: 33007
  image:
    repository: quay.io/alfresco/alfresco-process-services
    tag: 24.1.0
    pullPolicy: IfNotPresent
    internalPort: 8080
  service:
    name: aps
    type: ClusterIP
    externalPort: 80
  ingress:
    className: "nginx"
    path: /activiti-app
    maxUploadSize: "5G"
  persistence:
    # -- Persist processEngine data
    enabled: false
    # -- Initial default size of dynamically provisioned storage
    baseSize: 20Gi
    # -- Define if you already have a custom storage class defined for
    # dynamically provisioned storage
    storageClass:
    accessModes:
      - ReadWriteOnce
    # -- Define if you want to reuse an already existing PVC
    existingClaim:
    # -- Where to mount data into the container
    data:
      mountPath: "/usr/local/data"
      subPath: "alfresco-process-services/process-data"
  readinessProbe: &apsProbe
    path: /activiti-app/app/rest/locale
    initialDelaySeconds: 25
    periodSeconds: 10
    failureThreshold: 5
    timeoutSeconds: 5
  livenessProbe: *apsProbe
  environment:
    # -- Set the JDBC driver Class
    ACTIVITI_DATASOURCE_DRIVER: "org.postgresql.Driver"
    # -- Hibernate dialect (must match the driver)
    ACTIVITI_HIBERNATE_DIALECT: "org.hibernate.dialect.PostgreSQLDialect"
    # -- Cross Origin Resource Sharing configuration toggle
    ACTIVITI_CORS_ENABLED: "true"
    # -- Cross Origin Resource Sharing configuration allowed origins
    # (list of strings)
    # ACTIVITI_CORS_ALLOWED_ORIGINS: "*"
    # -- Cross Origin Resource Sharing configuration allowed origins
    # (list of glob-like patterns)
    ACTIVITI_CORS_ALLOWED_ORIGIN_PATTERNS: "*"
    # -- Cross Origin Resource Sharing configuration allowed http methods
    ACTIVITI_CORS_ALLOWED_METHODS: "GET,POST,HEAD,OPTIONS,PUT,DELETE"
    # -- Cross Origin Resource Sharing configuration allowed http headers
    ACTIVITI_CORS_ALLOWED_HEADERS: >-
      Authorization,Content-Type,Cache-Control,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
    # -- Cross Site Resource Forgery configuration toggle
    ACTIVITI_CSRF_DISABLED: "true"
    # -- ElasticSearch configuration
    # ACTIVITI_ES_SERVER_TYPE: "rest"
    # ACTIVITI_ES_REST_CLIENT_ADDRESS: "localhost"
    # ACTIVITI_ES_REST_CLIENT_PORT: "9200"
    # ACTIVITI_ES_REST_CLIENT_SCHEMA: "http"
    # ACTIVITI_ES_REST_CLIENT_AUTH_ENABLED: "false"
    # ACTIVITI_ES_REST_CLIENT_USERNAME: "admin"
    # ACTIVITI_ES_REST_CLIENT_PASSWORD: "esadmin"
    # ACTIVITI_ES_REST_CLIENT_KEYSTORE: ""
    # ACTIVITI_ES_REST_CLIENT_KEYSTORE_TYPE: "jks"
    # ACTIVITI_ES_REST_CLIENT_KEYSTORE_PASSWORD: ""
    # ACTIVITI_ADMIN_EMAIL:
    # ACTIVITI_ADMIN_PASSWORD_HASH:
    # ACTIVITI_LICENSE_MULTI_TENANT:
    # -- Alfresco Identity Service configuration toggle
    IDENTITY_SERVICE_ENABLED: "false"
    # -- Alfresco Identity Service Realm
    IDENTITY_SERVICE_REALM: "alfresco"
    # -- Alfresco Identity Service address
    IDENTITY_SERVICE_AUTH: "http://localhost:8080/auth"
    # -- Alfresco Identity Service force using SSL
    IDENTITY_SERVICE_SSL_REQUIRED: "none"
    # -- Alfresco Identity Service resource name to use
    IDENTITY_SERVICE_RESOURCE: "alfresco"
    # -- Alfresco Identity Service Attribute to map to user login
    IDENTITY_SERVICE_PRINCIPAL_ATTRIBUTE: "email"
    # -- Alfresco Identity Service refresh service token
    IDENTITY_SERVICE_ALWAYS_REFRESH_TOKEN: "true"
    # -- Alfresco Identity Service Bearer only toggle
    IDENTITY_SERVICE_AUTODETECT_BEARER_ONLY: "true"
    # -- Alfresco Identity Service token storage configuration
    IDENTITY_SERVICE_TOKEN_STORE: "session"
    # -- Alfresco Identity Service allow basic authentication
    # (should only be used over SSL)
    IDENTITY_SERVICE_ENABLE_BASIC_AUTH: "true"
    # -- Alfresco Identity Service public client toggle
    IDENTITY_SERVICE_PUBLIC_CLIENT: "true"
    # -- Alfresco Identity Service browser initiated logout toggle
    IDENTITY_SERVICE_USE_BROWSER_BASED_LOGOUT: "true"
    # -- Alfresco Identity Service application secret
    IDENTITY_CREDENTIALS_SECRET: ""
  volumes: []
  volumeMounts: []

license:
  secretName:

adminApp:
  replicacount: 1
  podSecurityContext: {}
  image:
    repository: quay.io/alfresco/alfresco-process-services-admin
    tag: 24.1.0
    pullPolicy: IfNotPresent
    internalPort: 8080
  service:
    name: aps-admin
    type: ClusterIP
    externalPort: 80
  livenessProbe: &adminProbe
    path: /activiti-admin/
    initialDelaySeconds: 25
    periodSeconds: 10
    failureThreshold: 5
    timeoutSeconds: 5
  readinessProbe: *adminProbe
  ingress:
    className: "nginx"
    path: /activiti-admin
    maxUploadSize: "5G"
  environment:
    # -- Set the JDBC driver Class
    ACTIVITI_ADMIN_DATASOURCE_DRIVER: "org.postgresql.Driver"
    # -- Hibernate dialect (must match the driver)
    ACTIVITI_ADMIN_HIBERNATE_DIALECT: "org.hibernate.dialect.PostgreSQLDialect"
    # -- activiti-app address
    ACTIVITI_ADMIN_REST_APP_HOST: "http://localhost"
    # -- activiti-app port
    ACTIVITI_ADMIN_REST_APP_PORT: "80"
    # -- activiti-app username
    ACTIVITI_ADMIN_REST_APP_USERNAME: "admin@app.activiti.com"
    # -- activiti-app password
    ACTIVITI_ADMIN_REST_APP_PASSWORD: "admin"
  volumes: []
  volumeMounts: []

database:
  # -- JDBC url to connect to the external DB
  url:
    aps: null
    admin: null
  # -- JDBC username to use to connect to the DB
  username: null
  # -- JDBC password to use to connect to the DB
  password: null
  existingConfigMap:
    name: null
    keys:
      # -- configmap key where to find the URL of the database
      url: DATABASE_URL
  existingSecret:
    # -- Name of a pre-existing secret containing database credentials
    name: null
    keys:
      # -- Key within the secret holding the database username
      username: DATABASE_USERNAME
      # -- Key within the secret holding the database password
      password: DATABASE_PASSWORD
