---
suite: test common deployment features
templates:
  - deployment-filestore.yaml
  - deployment-imagemagick.yaml
  - deployment-libreoffice.yaml
  - deployment-pdfrenderer.yaml
  - deployment-tika.yaml
  - deployment-transform-misc.yaml
  - deployment-transform-router.yaml
  - secret-messagebroker.yaml
  - config-filestore.yaml
  - config-imagemagick.yaml
  - config-libreoffice.yaml
  - config-pdfrenderer.yaml
  - config-tika.yaml
  - config-transform-misc.yaml
  - config-transform-router.yaml

tests:
  - it: should render expected envs in every resource
    values:
      - values/test_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env
          value: &messageBroker_envs
            - name: ACTIVEMQ_URL
              valueFrom:
                configMapKeyRef:
                  key: BROKER_URL
                  name: RELEASE-NAME-messagebroker
            - name: ACTIVEMQ_USER
              valueFrom:
                secretKeyRef:
                  key: BROKER_USERNAME
                  name: RELEASE-NAME-messagebroker-creds
            - name: ACTIVEMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: BROKER_PASSWORD
                  name: RELEASE-NAME-messagebroker-creds
        template: deployment-imagemagick.yaml
      - equal:
          path: spec.template.spec.containers[0].env
          value: *messageBroker_envs
        template: deployment-libreoffice.yaml
      - equal:
          path: spec.template.spec.containers[0].env
          value: *messageBroker_envs
        template: deployment-pdfrenderer.yaml
      - equal:
          path: spec.template.spec.containers[0].env
          value: *messageBroker_envs
        template: deployment-tika.yaml
      - equal:
          path: spec.template.spec.containers[0].env
          value: *messageBroker_envs
        template: deployment-transform-misc.yaml
      - equal:
          path: spec.template.spec.containers[0].env
          value: *messageBroker_envs
        template: deployment-transform-router.yaml
      - isNull:
          path: spec.template.spec.containers[0].env
        template: deployment-filestore.yaml

  - it: should render expected annotations in every deployment
    values:
      - values/test_values.yaml
    set:
      filestore:
        podAnnotations:
          testAnnotation: filestore
      imagemagick:
        podAnnotations:
          testAnnotation: imagemagick
      libreoffice:
        podAnnotations:
          testAnnotation: libreoffice
      pdfrenderer:
        podAnnotations:
          testAnnotation: pdfrenderer
      tika:
        podAnnotations:
          testAnnotation: tika
      transformmisc:
        podAnnotations:
          testAnnotation: transformmisc
      transformrouter:
        podAnnotations:
          testAnnotation: transformrouter
    asserts:
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: filestore
        template: deployment-filestore.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: imagemagick
        template: deployment-imagemagick.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: libreoffice
        template: deployment-libreoffice.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: pdfrenderer
        template: deployment-pdfrenderer.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: tika
        template: deployment-tika.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: transformmisc
        template: deployment-transform-misc.yaml
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            testAnnotation: transformrouter
        template: deployment-transform-router.yaml

  - it: should render expected labels in every deployment
    values:
      - values/test_values.yaml
    set:
      filestore:
        podLabels:
          testLabel: filestore
      imagemagick:
        podLabels:
          testLabel: imagemagick
      libreoffice:
        podLabels:
          testLabel: libreoffice
      pdfrenderer:
        podLabels:
          testLabel: pdfrenderer
      tika:
        podLabels:
          testLabel: tika
      transformmisc:
        podLabels:
          testLabel: transformmisc
      transformrouter:
        podLabels:
          testLabel: transformrouter
    asserts:
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: filestore
        template: deployment-filestore.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: imagemagick
        template: deployment-imagemagick.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: libreoffice
        template: deployment-libreoffice.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: pdfrenderer
        template: deployment-pdfrenderer.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: tika
        template: deployment-tika.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: transformmisc
        template: deployment-transform-misc.yaml
      - isSubset:
          path: spec.template.metadata.labels
          content:
            testLabel: transformrouter
        template: deployment-transform-router.yaml

  - it: should render expected volumeMount/volumes in every deployment
    values:
      - values/test_values.yaml
    set:
      filestore: &volumes_set
        volumes:
          - name: foo
            secret:
              secretName: mysecret
              optional: false
        volumeMounts:
          - name: foo
            mountPath: "/etc/foo"
            readOnly: true
      imagemagick: *volumes_set
      libreoffice: *volumes_set
      pdfrenderer: *volumes_set
      tika: *volumes_set
      transformmisc: *volumes_set
      transformrouter: *volumes_set
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: &volumemounts_content
            name: foo
            mountPath: "/etc/foo"
            readOnly: true
        template: deployment-filestore.yaml
      - contains:
          path: spec.template.spec.volumes
          content: &volumes_content
            name: foo
            secret:
              secretName: mysecret
              optional: false
        template: deployment-filestore.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-imagemagick.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-imagemagick.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-libreoffice.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-libreoffice.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-pdfrenderer.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-pdfrenderer.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-tika.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-tika.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-transform-misc.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-transform-misc.yaml

      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content: *volumemounts_content
        template: deployment-transform-router.yaml
      - contains:
          path: spec.template.spec.volumes
          content: *volumes_content
        template: deployment-transform-router.yaml

  - it: should render default affinity in every deployment
    values:
      - values/test_values.yaml
    asserts:
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-filestore.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-imagemagick.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-libreoffice.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-pdfrenderer.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-tika.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-transform-misc.yaml
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
        template: deployment-transform-router.yaml
