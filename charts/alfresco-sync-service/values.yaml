---
replicaCount: 1
nodeSelector: {}
# -- Global definition of Docker registry pull secret which can be overridden
# from parent ACS Helm chart(s)
global:
  alfrescoRegistryPullSecrets: quay-registry-secret
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
podSecurityContext:
  runAsUser: 33020
  runAsGroup: 1000
  runAsNonRoot: true
  fsGroup: 1000
image:
  repository: quay.io/alfresco/service-sync
  tag: 4.0.0-M6
  pullPolicy: IfNotPresent
  internalPort: 9090
environment:
  JAVA_OPTS: >-
    -Dsync.metrics.reporter.graphite.enabled=false
    -Dsync.metrics.reporter.graphite.address=127.0.0.1
    -Dsync.metrics.reporter.graphite.port=2003
    -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  EXTRA_JAVA_OPTS: ""
service:
  name: syncservice
  type: NodePort
  externalPort: 80
resources:
  requests:
    cpu: "0.5"
    memory: "800Mi"
  limits:
    cpu: "2"
    memory: "2000Mi"
livenessProbe:
  initialDelaySeconds: 150
  periodSeconds: 30
  timeoutSeconds: 10
readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 12
  timeoutSeconds: 10
repository:
  host: alfresco-cs-repository
  port: 80
# -- messageBroker object allow to pass ActiveMQ connection details.
# url: provides URI formatted string, see:
# https://activemq.apache.org/failover-transport-reference
# user: username to authenticate as.
# password: credential to use to authenticate to the broker.
messageBroker:
  url: failover:(nio://acs-activemq-broker:61616)?timeout=3000&jms.useCompression=true
  user: admin
  password: admin
  existingSecretName: null
# -- Defines properties required by sync service for connecting to the database
# If you set database.external to true you will have to setup the JDBC driver,
# user, password and JdbcUrl as `driver`, `user`, `password` & `url` subelements
# of `database`. Also make sure that the container has the db driver
database:
  # -- If set to `true` a dedicated postgres instance will be deployed in the
  # cluster for sync-service to use it.
  # When set to `false` the chart expects you provide DB configuration details.
  enabled: false
  # -- The JDBC Driver to connect to the DB.
  # Note: if different from the default make sure your container image ships it.
  driver: org.postgresql.Driver
  # -- JDBC url to connect to the external DB
  url:
  # -- JDBC username to use to connect to the DB
  user: &dbUser alfresco
  # -- JDBC password to use to connect to the DB
  password: &dbPass admin
  # -- An existing kubernetes secret with DB info (prefered over using values)
  existingSecretName:
  postgresql:
    nameOverride: postgresql-syncservice
    auth:
      enablePostgresUser: false
      username: *dbUser
      password: *dbPass
      database: alfrescosync
      existingSecret:
    primary:
      extendedConfiguration: |
        shared_buffers = 256MB
        max_connections = 50
        effective_cache_size = 1024GB
        log_min_messages = LOG
    resources:
      limits:
        cpu: "2"
        memory: "2Gi"

initContainers:
  activemq:
    image:
      repository: bash
      tag: 5.1.16
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: "0.25"
        memory: "10Mi"
  postgres:
    image:
      repository: busybox
      tag: 1.35.0
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: "0.25"
        memory: "10Mi"
ingress:
  # -- useful when running Sync service without SSL termination done by a load
  # balancer, e.g. when ran on Minikube for testing purposes
  # nginx.ingress.kubernetes.io/ssl-redirect: "false"
  extraAnnotations:
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  tls: []
  path: /syncservice
