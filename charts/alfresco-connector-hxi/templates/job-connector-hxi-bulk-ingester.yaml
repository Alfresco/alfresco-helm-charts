{{- if .Values.bulkIngester.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "alfresco-connector-hxi.bulk-ingester.fullname" . }}
  labels:
    {{- include "alfresco-connector-hxi.bulk-ingester.labels" $ | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alfresco-connector-hxi.bulk-ingester.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "alfresco-connector-hxi.serviceAccountName" . }}
      {{- include "alfresco-common.component-pod-security-context" .Values | indent 4 }}
      {{- include "alfresco-common.imagePullSecrets" . | indent 6 }}
      restartPolicy: Never
      containers:
        - name: {{ include "alfresco-connector-hxi.bulk-ingester.name" . }}
          image: {{ printf "%s:%s" .Values.bulkIngester.image.repository .Values.bulkIngester.image.tag | quote }}
          imagePullPolicy: {{ .Values.bulkIngester.image.pullPolicy }}
          {{- include "alfresco-common.component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.bulkIngester.resources | nindent 12 }}
          env:
            {{- $dbCtx := dict "Values" (dict "nameOverride" "alfresco-database") "Chart" .Chart "Release" .Release }}
            {{- $dbFullName := (include "alfresco-connector-hxi.bulk-ingester.fullname" $dbCtx) }}
            {{- include "alfresco-connector-hxi.activemq.cm.env" $ | indent 12 }}
            {{- include "alfresco-connector-hxi.activemq.secret.env" $ | indent 12 }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bulkIngester.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.bulkIngester.db.existingSecret.keys.password }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bulkIngester.db.existingSecret.name | default $dbFullName }}
                  key: {{ .Values.bulkIngester.db.existingSecret.keys.username }}
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.bulkIngester.db.existingConfigMap.name | default $dbFullName }}
                  key: {{ .Values.bulkIngester.db.existingConfigMap.keys.url }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      initContainers:
        - name: wait-for-repository
          image: curlimages/curl:7.79.1
          {{- include "alfresco-common.component-security-context" .Values | indent 8 }}
          resources: {{- toYaml .Values.bulkIngester.initContainers.waitForRepository.resources | nindent 12 }}
          env:
            {{- $repoCtx := dict "Values" (dict "nameOverride" (printf "%s-%s" ($.Values.nameOverride | default $.Chart.Name) "repository")) "Chart" $.Chart "Release" $.Release }}
            {{- $repoCm := coalesce .Values.bulkIngester.repository.existingConfigMap.name (include "alfresco-connector-hxi.bulk-ingester.fullname" $repoCtx) }}
            - name: REPOSITORY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ $repoCm }}
                  key: {{ .Values.bulkIngester.repository.existingConfigMap.keys.url }}
          command: ["/bin/sh", "-c"]
          # Delay running the reindexing to give Alfresco Repository a chance to initialise its database
          args:
            - |
              while [ $(curl -sw '%{http_code}' ${REPOSITORY_URL}/api/-default-/public/alfresco/versions/1/probes/-ready- -o /dev/null) -ne 200 ]
              do echo "Waiting for the Alfresco repository to come up at $REPOSITORY_URL ..."
                sleep 5
              done
              echo 'Alfresco is ready, delay reindexing to give a chance to fully initialise.'
              sleep 30
              echo 'Bulk ingesting started!'
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.bulkIngester.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
