---
global:
  alfrescoRegistryPullSecrets: quay-registry-secret
replicaCount: 1
podLabels: {}
podAnnotations: {}
podSecurityContext:
  runAsUser: 33007
  runAsGroup: 33007
  fsGroup: 33007
image:
  repository: quay.io/alfresco/alfresco-process-services
  tag: 25.1.1
  pullPolicy: IfNotPresent
  internalPort: 8080
service:
  name: aps
  type: ClusterIP
  externalPort: 80
ingress:
  # -- Toggle ingress for APS application
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 5g
    nginx.ingress.kubernetes.io/affinity: "cookie"
  # -- supported ingress class
  className: nginx
  hosts:
    - paths:
        - path: /activiti-app
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources:
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 500m
    memory: 1Gi
persistence:
  # -- Persist Alfresco Process data
  enabled: false
  # -- Initial default size of dynamically provisioned storage
  baseSize: 20Gi
  # -- Define if you already have a custom storage class defined for
  # dynamically provisioned storage
  storageClass: null
  accessModes:
    - ReadWriteOnce
  # -- Define if you want to reuse an already existing PVC
  existingClaim: null
  # -- Where to mount data into the container
  data:
    mountPath: "/usr/local/data"
    subPath: "alfresco-process-services/process-data"
readinessProbe:
  # -- For APS prior to 24.3.0, path must be set to `/activiti-app/app/rest/locale`
  path: /activiti-app/actuator/health/readiness
  initialDelaySeconds: 25
  periodSeconds: 10
  failureThreshold: 5
  timeoutSeconds: 5
livenessProbe:
  # -- For APS prior to 24.3.0, path must be set to `/activiti-app/app/rest/locale`
  path: /activiti-app/actuator/health/liveness
  initialDelaySeconds: 25
  periodSeconds: 10
  failureThreshold: 5
  timeoutSeconds: 5
# -- Name of a pre-existing configmap to load env vars from (overrides .environment values)
envFromExistingConfigMap: null
environment:
  # -- Cross Origin Resource Sharing configuration toggle
  ACTIVITI_CORS_ENABLED: "true"
  # -- Cross Origin Resource Sharing configuration allowed origins
  # (list of strings)
  # ACTIVITI_CORS_ALLOWED_ORIGINS: "*"
  # -- Cross Origin Resource Sharing configuration allowed origins
  # (list of glob-like patterns)
  ACTIVITI_CORS_ALLOWED_ORIGIN_PATTERNS: "*"
  # -- Cross Origin Resource Sharing configuration allowed http methods
  ACTIVITI_CORS_ALLOWED_METHODS: "GET,POST,HEAD,OPTIONS,PUT,DELETE"
  # -- Cross Origin Resource Sharing configuration allowed http headers
  ACTIVITI_CORS_ALLOWED_HEADERS: >-
    Authorization,Content-Type,Cache-Control,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
  # -- Cross Site Resource Forgery configuration toggle
  ACTIVITI_CSRF_DISABLED: "true"
  # -- ElasticSearch configuration
  # ACTIVITI_ES_SERVER_TYPE: "rest"
  # ACTIVITI_ES_REST_CLIENT_ADDRESS: "localhost"
  # ACTIVITI_ES_REST_CLIENT_PORT: "9200"
  # ACTIVITI_ES_REST_CLIENT_SCHEMA: "http"
  # ACTIVITI_ES_REST_CLIENT_AUTH_ENABLED: "false"
  # ACTIVITI_ES_REST_CLIENT_USERNAME: "admin"
  # ACTIVITI_ES_REST_CLIENT_PASSWORD: "esadmin"
  # ACTIVITI_ES_REST_CLIENT_KEYSTORE: ""
  # ACTIVITI_ES_REST_CLIENT_KEYSTORE_TYPE: "jks"
  # ACTIVITI_ES_REST_CLIENT_KEYSTORE_PASSWORD: ""
  # ACTIVITI_ADMIN_EMAIL:
  # ACTIVITI_ADMIN_PASSWORD_HASH:
  # ACTIVITI_LICENSE_MULTI_TENANT:
  # -- Alfresco Identity Service configuration toggle
  IDENTITY_SERVICE_ENABLED: "false"
  # -- Alfresco Identity Service Realm
  IDENTITY_SERVICE_REALM: "alfresco"
  # -- Alfresco Identity Service address
  IDENTITY_SERVICE_AUTH: "http://localhost:8080/auth"
  # -- Alfresco Identity Service force using SSL
  IDENTITY_SERVICE_SSL_REQUIRED: "none"
  # -- Alfresco Identity Service resource name to use
  IDENTITY_SERVICE_RESOURCE: "alfresco"
  # -- Alfresco Identity Service Attribute to map to user login
  IDENTITY_SERVICE_PRINCIPAL_ATTRIBUTE: "email"
  # -- Alfresco Identity Service refresh service token
  IDENTITY_SERVICE_ALWAYS_REFRESH_TOKEN: "true"
  # -- Alfresco Identity Service Bearer only toggle
  IDENTITY_SERVICE_AUTODETECT_BEARER_ONLY: "true"
  # -- Alfresco Identity Service token storage configuration
  IDENTITY_SERVICE_TOKEN_STORE: "session"
  # -- Alfresco Identity Service allow basic authentication
  # (should only be used over SSL)
  IDENTITY_SERVICE_ENABLE_BASIC_AUTH: "true"
  # -- Alfresco Identity Service public client toggle
  IDENTITY_SERVICE_PUBLIC_CLIENT: "true"
  # -- Alfresco Identity Service browser initiated logout toggle
  IDENTITY_SERVICE_USE_BROWSER_BASED_LOGOUT: "true"
  # -- Alfresco Identity Service application secret
  IDENTITY_CREDENTIALS_SECRET: ""
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
database:
  # -- JDBC url to connect to the external DB for aps app
  url: null
  # -- JDBC driver Class
  driver: null
  # -- JDBC username to use to connect to the DB for aps app
  username: null
  # -- JDBC password to use to connect to the DB for aps app
  password: null
  existingConfigMap:
    name: null
    keys:
      # -- configmap key where to find the URL of the database for aps app
      url: DATABASE_URL
      # -- configmap key where to find the JDBC driver Class for aps app
      driver: DATABASE_DRIVER
  existingSecret:
    # -- Name of a pre-existing secret containing database credentials for aps app
    name: null
    keys:
      # -- Key within the secret holding the database username for aps app
      username: DATABASE_USERNAME
      # -- Key within the secret holding the database password for aps app
      password: DATABASE_PASSWORD
license:
  secretName: null
workaround:
  ## -- Enable workaround for [ACTIVITI-5113](https://hyland.atlassian.net/browse/ACTIVITI-5113) required for versions before 24.2.0
  ACTIVITI-5113: false
tags:
  # -- A chart tag used for Hyland's CI purpose. Do not set it to true.
  ci: false
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      # -- Prefer to schedule pods in different zones
      - weight: 10
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - >-
                    {{ template "alfresco-activiti.name" $ }}
              - key: app.kubernetes.io/instance
                operator: In
                values:
                  - "{{ $.Release.Name }}"
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - "{{ $.Chart.Name }}"
          topologyKey: topology.kubernetes.io/zone
      # -- Prefer to schedule pods in different nodes
      - weight: 5
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - >-
                    {{ template "alfresco-activiti.name" $ }}
              - key: app.kubernetes.io/instance
                operator: In
                values:
                  - "{{ $.Release.Name }}"
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - "{{ $.Chart.Name }}"
          topologyKey: kubernetes.io/hostname
